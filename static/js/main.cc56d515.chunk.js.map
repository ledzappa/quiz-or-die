{"version":3,"sources":["api/Api.js","components/addPlayers/AddPlayers.tsx","components/settings/Settings.tsx","components/home/Home.tsx","components/login/Register.tsx","components/login/Login.tsx","components/minigames/roundAndRound/RoundAndRound.tsx","components/minigames/triggerFinger/TriggerFinger.tsx","components/perks/Perks.tsx","components/question/Question.tsx","components/scoreboard/Scoreboard.tsx","components/selectCategory/SelectCategory.tsx","components/showTurn/ShowTurn.tsx","components/addQuestion/AddQuestion.tsx","components/viewQuestions/ViewQuestions.tsx","sounds/goodPerk.mp3","sounds/button.mp3","sounds/robots.mp3","sounds/countdown.mp3","sounds/trigger.mp3","sounds/tooearly.mp3","sounds/playerWins.mp3","sounds/miniGame.mp3","sounds/applause.mp3","sounds/landmine.mp3","sounds/changeDirection.mp3","components/sounds/Sounds.js","components/minigames/closestWins/ClosestWins.tsx","App.js","reportWebVitals.js","index.js"],"names":["api","getCategories","axios","get","getPlayerDescriptionWords","getQuestions","headers","authorization","localStorage","getItem","getAllQuestions","getRoundAndRoundThemes","getClosestWinsQuestions","addQuestion","formData","img","console","log","fd","FormData","Object","keys","forEach","key","append","fetch","method","body","saveQuestion","put","deleteQuestion","delete","addUser","post","login","AddPlayers","players","setPlayers","sounds","useState","playerInput","setPlayerInput","nouns","adjectives","playerWords","setPlayerWords","history","useHistory","useEffect","then","res","data","addPlayer","name","description","getRandomDescription","points","isPlayersTurn","isMiniGameWinner","perks","freedomOfChoice","doubleUp","startGame","randomPlayer","Math","floor","random","length","map","player","idx","randomizeFirstTurn","btn","push","nounsLength","randomNoun","noun","adjectivesLength","randomAdjective","adjective","className","type","value","autoFocus","onKeyPress","e","onChange","target","onClick","icon","filter","_","i","removePlayer","disabled","Settings","categories","showModal","settings","setCategories","setShowModal","setSettings","id","miniGames","handleClose","handleCategoryChange","checked","_categories","category","Number","handleMiniGameChange","enabledMiniGames","Modal","show","onHide","Header","closeButton","Title","Body","pointsToWin","toString","miniGame","includes","max","min","step","probMiniGame","politicallyCorrect","lightMode","Footer","Home","setQuestions","setThemes","setClosestWinsQuestions","user","showSeetingsModal","setShowSettingsModal","questions","question","imgBaseUrl","images","cacheImages","themes","image","Image","src","roleId","Register","username","email","password","passwordRepeat","setFormData","errorMsg","setErrorMsg","schema","Joi","object","string","required","tlds","ref","handleFormChange","newFormData","error","validate","message","catch","Login","setUser","setError","setItem","accessToken","response","RoundAndRound","randomizeLetter","theme","setTheme","showTheme","setShowTheme","started","setStarted","timeLeft","setTimeLeft","timer","setTimer","randomLetter","setRandomLetter","roundAndRoundPlayers","setRoundAndRoundPlayers","randomIdx","item","getRandomLetter","updateTime","letters","split","setTimeout","nextTurn","removeCurrent","clearTimeout","_players","currentTurnIndex","findIndex","nextTurnIndex","applause","isWinner","toLocaleUpperCase","reactionTime","isEliminated","triggerPlayers","setTriggerPlayers","switched","setSwitched","isTriggered","setIsTriggered","elapsedTime","setElapsedTime","switchTime","setSwitchTime","switchDate","setSwitchDate","soundCountDownInterval","setSoundCountDownInterval","fastestTime","setFastestTime","resetState","updateElapsedTime","clearInterval","Date","now","startPlayingCountdownSound","setInterval","countdown","undefined","currentPlayer","remainingPlayers","onMouseDown","wasTooEarly","isNaN","isFastest","trigger","tooEarly","toUpperCase","playerPerks","globalPerks","Perks","setDirection","perk","setPerk","randomizePerk","probPlayerPerk","isRobinHoodEnabled","isChangeDirectionEnabled","changeDirection","landmine","goodPerk","updatePlayerPerks","perkName","count","getRobinHoodText","perkId","switchPlayerPoints","activatePerk","maxPoints","minPoints","minAndMaxAreUnique","maxPlayerName","minPlayerName","Question","currentQuestion","showAnswer","setShowAnswer","timeRemaining","setTimeRemaining","updateCurrentPlayerPoints","replace","alternatives","last","pop","alternativesText","join","extractAlternatives","answer","earnedPoints","rightAnswer","wrongAnswer","Scoreboard","direction","isMiniGame","setIsMiniGame","winner","setWinner","showWinner","setShowWinner","playerWins","sort","a","b","shouldAnimatePlayerRow","setNextPlayersTurn","reduceCurrentPlayersPerksByOne","resetMiniGameWinner","handleNextRoundClick","nextIndex","currentPlayerIndex","lastPlayerIndex","reduce","prev","cur","SelectCategory","setCurrentCategory","identifier","activeCategory","setActiveCategory","randomizeCategory","prevRandomIndex","interval","randomIndex","click","ShowTurn","probPerk","addedImage","defaultFormValues","categoryId","AddQuestion","setAllQuestions","isFormValid","setIsFormValid","validateForm","_value","rows","files","filterQuestions","filterString","toLowerCase","ViewQuestions","allQuestions","setFilterString","setCategoryId","showOnlyImages","setShowOnlyImages","selectedQuestion","setSelectedQuestion","handleSelectCategoryChange","handleInputChange","handleEditModalClick","tags","Sounds","setSounds","soundConfig","volume","useSound","button","playBtnSound","playGoodPerkSound","playTriggerSound","playCountdownSound","tooearly","playTooEarlySound","playClickSound","playPlayerWins","playMiniGame","playApplause","playLandmine","playChangeDirection","ClosestWins","answerText","setQuestion","closestWinGuess","setClosesWinGuess","showError","setShowError","cwPlayers","setCwPlayers","showClosestGuess","leastDiff","leastDiffIdx","playerDiff","abs","number","val","substr","handleNumberChange","library","add","faSync","faAngleDoubleUp","faCog","faTrophy","faHandSparkles","faBomb","faPlus","faCheck","faTimes","faArrowRight","faPlay","faTools","App","setCurrentQuestion","closestWinsQuestions","document","classList","remove","exact","path","questionsByCategory","numOfQuestionsInCategory","randomQuestion","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cc56d515.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst mocks = true;\n\nconst api = {\n  getCategories: () =>\n    axios.get(mocks ? 'mocks/categories.json' : '/api/categories'),\n  getPlayerDescriptionWords: () =>\n    axios.get('mocks/playerDescriptionWords.json'),\n  getQuestions: () =>\n    axios.get(mocks ? 'mocks/questions.json' : '/api/questions', {\n      headers: {\n        authorization: 'Bearer ' + localStorage.getItem('accessToken'),\n      },\n    }),\n  getAllQuestions: () =>\n    axios.get(mocks ? 'mocks/questions.json' : '/api/all-questions', {\n      headers: {\n        authorization: 'Bearer ' + localStorage.getItem('accessToken'),\n      },\n    }),\n  getRoundAndRoundThemes: () =>\n    axios.get(true ? 'mocks/roundAndRound.json' : '/api/round-and-round'),\n  getClosestWinsQuestions: () =>\n    axios.get(true ? 'mocks/closestWins.json' : '/api/closest-wins'),\n  addQuestion: (formData, img) => {\n    console.log(img);\n    const fd = new FormData();\n    Object.keys(formData).forEach((key) => fd.append(key, formData[key]));\n    if (img) {\n      fd.append('img', img, 'img.jpg');\n    }\n    // using fetch because axios refused to set content type to multipart\n    return fetch('/api/questions', {\n      method: 'POST',\n      body: fd,\n    });\n  },\n  saveQuestion: (formData) => axios.put('/api/questions', formData),\n  deleteQuestion: (formData) => axios.delete('/api/questions', formData),\n  addUser: (formData) => axios.post('/api/users', formData),\n  login: (formData) =>\n    mocks ? axios.get('mocks/login.json') : axios.post('/api/login', formData),\n};\n\nexport default api;\n","import { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../api/Api';\nimport { Player } from '../../interfaces/interfaces';\nimport './AddPlayers.css';\n\nexport default function AddPlayers({ players, setPlayers, sounds }: any) {\n  const [playerInput, setPlayerInput] = useState('');\n  const [playerWords, setPlayerWords] = useState({ nouns: [], adjectives: [] });\n  const history = useHistory();\n\n  useEffect(() => {\n    api.getPlayerDescriptionWords().then((res) => setPlayerWords(res.data));\n  }, []);\n\n  const addPlayer = (name: String) => {\n    setPlayers([\n      ...players,\n      {\n        name,\n        description: getRandomDescription(),\n        points: 0,\n        isPlayersTurn: false,\n        isMiniGameWinner: false,\n        perks: { freedomOfChoice: 0, doubleUp: 0 },\n      },\n    ]);\n    setPlayerInput('');\n  };\n\n  const removePlayer = (idx: Number) => {\n    setPlayers(players.filter((_: any, i: Number) => idx !== i));\n  };\n\n  const randomizeFirstTurn = () => {\n    const randomPlayer = Math.floor(Math.random() * players.length);\n    setPlayers(\n      players.map((player: Player, idx: Number) => {\n        if (randomPlayer === idx) {\n          return { ...player, isPlayersTurn: true };\n        } else {\n          return player;\n        }\n      })\n    );\n  };\n\n  const startGame = () => {\n    randomizeFirstTurn();\n    sounds.btn();\n    history.push('/show-turn');\n    // history.push('/closest-wins');\n    // history.push('/trigger-finger');\n  };\n\n  const handlePlayerInputChange = (value: string) => setPlayerInput(value);\n\n  const getRandomDescription = () => {\n    const nounsLength = playerWords.nouns.length;\n    const randomNoun = Math.floor(Math.random() * nounsLength);\n    const noun = playerWords.nouns[randomNoun];\n    const adjectivesLength = playerWords.adjectives.length;\n    const randomAdjective = Math.floor(Math.random() * adjectivesLength);\n    const adjective = playerWords.adjectives[randomAdjective];\n    return `The ${adjective} ${noun}`;\n  };\n\n  const updateDescription = (name: string) => {\n    setPlayers(\n      players.map((player: Player) =>\n        player.name === name\n          ? { ...player, description: getRandomDescription() }\n          : player\n      )\n    );\n  };\n\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-12 col-sm-6 col-lg-6 col-xl-4\">\n        <h2>Add players</h2>\n        <p>Enter a name and press enter or the \"Add\" button.</p>\n        <label>Name</label>\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control add-player\"\n            value={playerInput}\n            autoFocus\n            onKeyPress={(e) => e.key === 'Enter' && addPlayer(playerInput)}\n            onChange={(e) => handlePlayerInputChange(e.target.value)}\n          />\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => addPlayer(playerInput)}\n          >\n            <FontAwesomeIcon icon=\"plus\" />\n          </button>\n        </div>\n        {players.map((player: Player, idx: number) => (\n          <div className=\"added-player-wrapper\" key={idx}>\n            <div\n              className=\"d-inline-block\"\n              onClick={() => updateDescription(player.name)}\n            >\n              <span className=\"font-weight-bold text-uppercase\">\n                {player.name}\n              </span>{' '}\n              <div>{player.description}</div>\n            </div>\n            <FontAwesomeIcon\n              className=\"ml-3 float-right\"\n              icon=\"times\"\n              onClick={() => removePlayer(idx)}\n            />\n          </div>\n        ))}\n        <hr />\n        <button\n          className=\"btn btn-primary w-100 start-game\"\n          onClick={() => startGame()}\n          disabled={players.length < 2}\n        >\n          Start Game!\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Category, Settings as ISettings } from '../../interfaces/interfaces';\n\nexport default function Settings({\n  categories,\n  showModal,\n  settings,\n  setCategories,\n  setShowModal,\n  setSettings,\n}: {\n  categories: Category[];\n  showModal: boolean;\n  settings: ISettings;\n  setShowModal: Function;\n  setCategories: Function;\n  setSettings: Function;\n}) {\n  const [miniGames, setMiniGames] = useState([\n    { id: 'roundAndRound', name: 'Round and Round' },\n    { id: 'triggerFinger', name: 'Trigger Finger' },\n    { id: 'closestWins', name: 'Closest Wins' },\n  ]);\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const handleCategoryChange = ({ target: { checked, name } }: any) => {\n    const _categories = categories.map((category) =>\n      category.id === Number(name)\n        ? { ...category, disabled: !checked }\n        : category\n    );\n    setCategories(_categories);\n  };\n\n  const handleMiniGameChange = ({ target: { checked, name } }: any) => {\n    setSettings({\n      ...settings,\n      enabledMiniGames: checked\n        ? [...settings.enabledMiniGames, name]\n        : settings.enabledMiniGames.filter((id) => id !== name),\n    });\n  };\n\n  const handlePoliticallyCorrectClick = () => {\n    setSettings({\n      ...settings,\n      politicallyCorrect: !settings.politicallyCorrect,\n    });\n  };\n\n  const handlePointsToWinChange = ({ target: { value } }: any) => {\n    setSettings({\n      ...settings,\n      pointsToWin: Number(value),\n    });\n  };\n\n  const handleThemeClick = () => {\n    setSettings({ ...settings, lightMode: !settings.lightMode });\n  };\n\n  const handleMiniGameProbabilityChange = ({ target: { value } }: any) => {\n    setSettings({ ...settings, probMiniGame: value });\n  };\n\n  return (\n    <Modal className=\"text-dark\" show={showModal} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Settings</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <div className=\"form-group\">\n          <h4>Points to Win</h4>\n          <p>Points required to win the game.</p>\n          <select\n            className=\"form-control\"\n            value={settings.pointsToWin}\n            onChange={handlePointsToWinChange}\n          >\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"15\">15</option>\n            <option value=\"20\">20</option>\n            <option value=\"25\">25</option>\n            <option value=\"30\">30</option>\n            <option value=\"35\">35</option>\n            <option value=\"40\">40</option>\n            <option value=\"45\">45</option>\n            <option value=\"50\">50</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <h4>Enabled Categories</h4>\n          {categories.map((category, idx) => (\n            <div className=\"form-check\" key={idx}>\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                name={category.id.toString()}\n                checked={!category.disabled}\n                onChange={handleCategoryChange}\n              />\n              <label className=\"form-check-label\">{category.name}</label>\n            </div>\n          ))}\n        </div>\n        <div className=\"form-group\">\n          <h4>Enabled Minigames</h4>\n          {miniGames.map((miniGame, idx) => (\n            <div className=\"form-check\" key={idx}>\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                name={miniGame.id}\n                checked={settings.enabledMiniGames.includes(miniGame.id)}\n                onChange={handleMiniGameChange}\n              />\n              <label className=\"form-check-label\">{miniGame.name}</label>\n            </div>\n          ))}\n        </div>\n        <div className=\"form-group\">\n          <h4>Minigame probability</h4>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            max=\"0.95\"\n            min=\"0.1\"\n            step=\"0.05\"\n            value={settings.probMiniGame}\n            onChange={handleMiniGameProbabilityChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <h4>Politically correct mode</h4>\n          <p>\n            When activated, R-rated words (such as f***ing) are removed from\n            player descriptions, and adult oriented questions (such as \"What was\n            Ron Jeremys signature trait?\") are removed.\n          </p>\n          <button\n            className={\n              'btn btn-' +\n              (settings.politicallyCorrect ? 'success' : 'secondary')\n            }\n            onClick={handlePoliticallyCorrectClick}\n          >\n            {settings.politicallyCorrect ? 'ON' : 'OFF'}\n          </button>\n        </div>\n        <div className=\"form-group\">\n          <h4>Color theme</h4>\n          <p>Enable light mode</p>\n          <button\n            className={\n              'btn btn-' + (settings.lightMode ? 'success' : 'secondary')\n            }\n            onClick={handleThemeClick}\n          >\n            {settings.lightMode ? 'ON' : 'OFF'}\n          </button>\n        </div>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleClose}>\n          Close\n        </button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport api from '../../api/Api';\nimport { useHistory } from 'react-router-dom';\nimport Settings from '../settings/Settings';\nimport { Question } from '../../interfaces/interfaces';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Home.css';\n\nexport default function Home({\n  categories,\n  settings,\n  setCategories,\n  setQuestions,\n  setThemes,\n  setClosestWinsQuestions,\n  setSettings,\n  user,\n  sounds,\n}: any) {\n  const history = useHistory();\n  const [showSeetingsModal, setShowSettingsModal] = useState(false);\n\n  useEffect(() => {\n    api.getCategories().then((res) => {\n      setCategories(res.data.categories);\n    });\n\n    api.getQuestions().then((res) => {\n      const questions = res.data.questions.map((question: Question) => ({\n        ...question,\n        img: question.img ? settings.imgBaseUrl + question.img : null,\n      }));\n\n      const images = questions\n        .filter((question: Question) => !!question.img)\n        .map((question: Question) => question.img);\n\n      cacheImages(images);\n      setQuestions(questions);\n    });\n\n    api.getRoundAndRoundThemes().then((res) => {\n      setThemes(res.data.themes);\n    });\n\n    api.getClosestWinsQuestions().then((res) => {\n      setClosestWinsQuestions(res.data.questions);\n    });\n  }, []);\n\n  const cacheImages = (images: string[]) => {\n    images.forEach((image) => {\n      const img = new Image();\n      img.src = image;\n    });\n  };\n\n  const handlePlayQuizmageddonClick = () => {\n    sounds.btn();\n    history.push('/add-players');\n  };\n\n  const handleSettingsClick = () => {\n    setShowSettingsModal(true);\n  };\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12 text-right\">\n          {user.roleId === 0 && (\n            <button\n              className=\"btn btn-secondary mb-3\"\n              onClick={() => history.push('/admin/questions')}\n            >\n              <FontAwesomeIcon className=\"mr-2\" icon=\"tools\" />\n              Admin\n            </button>\n          )}\n        </div>\n      </div>\n      <div className=\"text-center\">\n        <h1>Quizmageddon</h1>\n        <p className=\"mb-5\">\n          Welcome to quizmageddon - the best quiz game ever created by men.\n          Start the game by adding players!\n        </p>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12 text-center\">\n            <div className=\"button-container d-inline-block\">\n              <button\n                className=\"btn btn-primary play-quizmageddon mb-3 w-100 btn-lg\"\n                onClick={handlePlayQuizmageddonClick}\n              >\n                <FontAwesomeIcon className=\"mr-2\" icon=\"play\" />\n                Play Quizmageddon\n              </button>\n              <button\n                className=\"btn btn-secondary w-100 btn-lg\"\n                onClick={handleSettingsClick}\n              >\n                <FontAwesomeIcon className=\"mr-2\" icon=\"cog\" />\n                Settings\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Settings\n        categories={categories}\n        setCategories={setCategories}\n        showModal={showSeetingsModal}\n        settings={settings}\n        setSettings={setSettings}\n        setShowModal={setShowSettingsModal}\n      ></Settings>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport api from './../../api/Api';\nimport Joi from 'joi';\n\nexport default function Register() {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordRepeat: '',\n  });\n  const [showModal, setShowModal] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const schema = Joi.object({\n    username: Joi.string().max(50).required(),\n    password: Joi.string().min(6).max(50).required(),\n    email: Joi.string().required().email({ tlds: false }),\n    passwordRepeat: Joi.ref('password'),\n  });\n\n  const handleRegisterClick = () => {\n    const { error } = schema.validate(formData);\n\n    if (!error) {\n      api\n        .addUser(formData)\n        .then(() => 'user added!')\n        .catch((e) => console.log(e));\n    } else {\n      setErrorMsg(error.message);\n    }\n  };\n\n  const handleFormChange = ({ name, value }: any) => {\n    const newFormData = { ...formData, [name]: value };\n    setFormData(newFormData);\n  };\n\n  return (\n    <div>\n      <button className=\"btn btn-outline-light w-100\" onClick={openModal}>\n        Register\n      </button>\n      <Modal className=\"text-dark\" show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Register</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p>\n            Fill out the form and click on Register. A confirmation will be sent\n            to your email.\n          </p>\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"username\"\n              value={formData.username}\n            ></input>\n          </div>\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"email\"\n              value={formData.email}\n            ></input>\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"password\"\n              value={formData.password}\n            ></input>\n          </div>\n          <div className=\"form-group\">\n            <label>Repeat password</label>\n            <input\n              type=\"password\"\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"passwordRepeat\"\n              value={formData.passwordRepeat}\n            ></input>\n          </div>\n          {errorMsg.length > 0 && (\n            <div className=\"alert alert-danger alert-icon\">{errorMsg}</div>\n          )}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={handleRegisterClick}\n          >\n            Register\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Register from './Register';\nimport { useHistory } from 'react-router-dom';\nimport api from './../../api/Api';\n\nexport default function Login({ setUser }: any) {\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n  });\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  const handleLoginClick = () => {\n    api\n      .login(formData)\n      .then((res) => {\n        setUser(res.data);\n        localStorage.setItem('accessToken', res.data.accessToken);\n        history.push('/home');\n      })\n      .catch((e) => setError(e.response.data));\n  };\n\n  const handleFormChange = ({ name, value }: any) => {\n    setFormData({ ...formData, [name]: value });\n  };\n\n  return (\n    <div>\n      <div className=\"row justify-content-center animate__animated animate__fadeIn\">\n        <div className=\"col-12 col-sm-6 col-md-4 pt-0 pt-sm-5\">\n          <h1>Login</h1>\n          <p>Login below to start playing Quizmageddon!</p>\n\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input\n              className=\"form-control username\"\n              name=\"username\"\n              onChange={(e) => handleFormChange(e.target)}\n            ></input>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control password\"\n              onChange={(e) => handleFormChange(e.target)}\n            ></input>\n          </div>\n          {error && <div className=\"alert alert-danger animate__animated animate__flash\">{error}</div>}\n          <hr />\n          <button\n            className=\"btn btn-secondary w-100 mb-4\"\n            onClick={handleLoginClick}\n          >\n            Login\n          </button>\n          <Register></Register>\n          <div className=\"version text-center\">0.9.0-beta1</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player, RoundAndRoundTheme } from '../../../interfaces/interfaces';\nimport './RoundAndRound.css';\n\nexport default function RoundAndRound({\n  themes,\n  setThemes,\n  players,\n  setPlayers,\n  sounds,\n}: {\n  themes: RoundAndRoundTheme[];\n  setThemes: Function;\n  players: Player[];\n  setPlayers: any;\n  sounds: any;\n}) {\n  const [theme, setTheme] = useState({\n    description: '',\n    randomizeLetter: false,\n  });\n  const [showTheme, setShowTheme] = useState(false);\n  const [started, setStarted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [timer, setTimer] = useState<any>(null);\n  const [randomLetter, setRandomLetter] = useState('');\n  const [roundAndRoundPlayers, setRoundAndRoundPlayers] = useState(players);\n  const history = useHistory();\n\n  useEffect(() => {\n    sounds.miniGame();\n    const randomIdx = Math.floor(themes.length * Math.random());\n    setTheme(themes[randomIdx]);\n    setThemes(themes.filter((item, idx) => idx !== randomIdx));\n    setRandomLetter(getRandomLetter());\n  }, []);\n\n  useEffect(() => {\n    if (started) {\n      updateTime();\n    }\n  }, [timeLeft]);\n\n  const getRandomLetter = () => {\n    const letters = 'abcdefghijklmnoprstuvy'.split('');\n    return letters[Math.floor(Math.random() * letters.length)];\n  };\n\n  const handleClick = () => {\n    sounds.btn();\n    setShowTheme(true);\n  };\n\n  const updateTime = () => {\n    setTimer(\n      setTimeout(() => {\n        if (timeLeft > 1) {\n          setTimeLeft(timeLeft - 1);\n        } else {\n          nextTurn(true);\n        }\n      }, 1000)\n    );\n  };\n\n  const start = () => {\n    sounds.btn();\n    setStarted(true);\n    updateTime();\n  };\n\n  const nextTurn = (removeCurrent: boolean) => {\n    sounds.btn();\n    clearTimeout(timer);\n\n    const _players = roundAndRoundPlayers.filter((player: Player) =>\n      removeCurrent ? !player.isPlayersTurn : true\n    );\n\n    if (_players.length === 1) {\n      setPlayers(\n        players.map((player) =>\n          player.name === _players[0].name\n            ? {\n                ...player,\n                points: player.points + 2,\n                isMiniGameWinner: true,\n              }\n            : player\n        )\n      );\n      setTimeout(() => history.push('/scoreboard'), 3000);\n    }\n\n    const currentTurnIndex = _players.findIndex(\n      (player: Player) => player.isPlayersTurn\n    );\n    const nextTurnIndex =\n      currentTurnIndex === _players.length - 1 ? 0 : currentTurnIndex + 1;\n\n    setRoundAndRoundPlayers(\n      _players.map((player: Player, idx: number) => ({\n        ...player,\n        isPlayersTurn: nextTurnIndex === idx,\n      }))\n    );\n\n    if (_players.length > 1) {\n      setTimeLeft(10);\n    } else {\n      sounds.applause();\n    }\n  };\n\n  const isWinner = roundAndRoundPlayers.length === 1;\n  return (\n    <div>\n      <div className=\"minigame animate__animated animate__rotateIn\">\n        <h1>It's Round and round time!</h1>\n        <p>\n          Everyone gets 10 seconds to come up with an answer for a random theme,\n          for example \"Name a movie from the 90s\". Press NEXT when a player\n          answers successfully and the turn will go to the next player. If a\n          player can't come up with an answer within 10 seconds the player gets\n          eliminated. The last player that remains gets 3 points!\n        </p>\n        <button className=\"btn btn-outline-light\" onClick={() => handleClick()}>\n          Show theme and begin!\n        </button>\n      </div>\n      {showTheme && (\n        <div className=\"theme-wrapper\">\n          <h3>\n            {theme.description}{' '}\n            {theme.randomizeLetter && (\n              <span className=\"font-weight-bold\">\n                {randomLetter.toLocaleUpperCase()}\n              </span>\n            )}\n          </h3>\n          <hr></hr>\n          {started ? (\n            <div>\n              {!isWinner ? (\n                <button\n                  className=\"btn btn-primary btn-next w-100 p-4 mt-4\"\n                  onClick={() => nextTurn(false)}\n                  disabled={!(timeLeft < 10)}\n                >\n                  <h1 className=\"text-uppercase\">\n                    {\n                      roundAndRoundPlayers.filter(\n                        (player: Player) => player.isPlayersTurn\n                      )[0]?.name\n                    }\n                  </h1>\n                  <h3>{timeLeft}</h3>\n                </button>\n              ) : (\n                <h2 className=\"animate__animated animate__fadeIn\">\n                  {roundAndRoundPlayers[0]?.name + ' wins!'}\n                </h2>\n              )}\n            </div>\n          ) : (\n            <button className=\"btn btn-primary\" onClick={() => start()}>\n              Let's go!\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player } from '../../../interfaces/interfaces';\nimport './TriggerFinger.css';\n\nexport default function RoundAndRound({\n  players,\n  setPlayers,\n  sounds,\n}: {\n  players: Player[];\n  setPlayers: any;\n  sounds: any;\n}) {\n  const [started, setStarted] = useState(false);\n  const [triggerPlayers, setTriggerPlayers] = useState(\n    players.map((player) => ({\n      ...player,\n      reactionTime: 0,\n      isEliminated: false,\n    }))\n  );\n  const [switched, setSwitched] = useState(false);\n  const [isTriggered, setIsTriggered] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [timer, setTimer] = useState<any>(null);\n  const [switchTime, setSwitchTime] = useState<any>();\n  const [switchDate, setSwitchDate] = useState<any>();\n  const [soundCountDownInterval, setSoundCountDownInterval] = useState<any>();\n  const [fastestTime, setFastestTime] = useState<number>(1000000);\n  const history = useHistory();\n\n  useEffect(() => {\n    sounds.miniGame();\n    setStarted(false);\n    resetState();\n  }, []);\n\n  useEffect(() => {\n    if (!started) return;\n    updateElapsedTime();\n    if (elapsedTime > switchTime && !switched) {\n      setSwitched(true);\n      clearInterval(soundCountDownInterval);\n      setSwitchDate(Date.now());\n      clearTimeout(timer);\n    }\n  }, [elapsedTime, started, switched, switchTime]);\n\n  const start = () => {\n    sounds.btn();\n    setStarted(true);\n    setElapsedTime(1);\n    startPlayingCountdownSound();\n  };\n\n  const updateElapsedTime = () => {\n    setTimer(\n      setTimeout(() => {\n        setElapsedTime(elapsedTime + 10);\n      }, 10)\n    );\n  };\n\n  const startPlayingCountdownSound = () =>\n    setSoundCountDownInterval(setInterval(() => sounds.countdown(), 750));\n\n  const trigger = () => {\n    clearInterval(soundCountDownInterval);\n    setIsTriggered(true);\n    let reactionTime = Date.now() - switchDate;\n    reactionTime = Number.isNaN(reactionTime) ? -1 : reactionTime;\n    const wasTooEarly = reactionTime === -1;\n    const isFastest = reactionTime > 0 && reactionTime < fastestTime;\n    if (isFastest) {\n      sounds.trigger();\n      setFastestTime(reactionTime);\n    } else {\n      sounds.tooEarly();\n    }\n\n    setTriggerPlayers(\n      triggerPlayers.map((player: Player) =>\n        player.isPlayersTurn\n          ? { ...player, reactionTime, isEliminated: !isFastest || wasTooEarly }\n          : {\n              ...player,\n              isEliminated:\n                player.isEliminated ||\n                (reactionTime !== -1 && player.reactionTime > reactionTime),\n            }\n      )\n    );\n\n    clearTimeout(timer);\n  };\n\n  const resetState = () => {\n    const switchTime = Math.floor(Math.random() * 10 * 1000) + 4000;\n    setSwitched(false);\n    setSwitchTime(switchTime);\n    setSwitchDate(undefined);\n    setElapsedTime(1);\n    setIsTriggered(false);\n  };\n\n  const nextTurn = () => {\n    sounds.btn();\n\n    const remainingPlayers: Player[] = triggerPlayers.filter(\n      (player) => !player.isEliminated\n    );\n\n    const isWinner = remainingPlayers.length === 1;\n\n    if (isWinner) {\n      setPlayers(\n        players.map((player) =>\n          player.name === remainingPlayers[0].name\n            ? {\n                ...player,\n                points: player.points + 2,\n                isMiniGameWinner: true,\n              }\n            : player\n        )\n      );\n      history.push('/scoreboard');\n    } else {\n      resetState();\n      startPlayingCountdownSound();\n      const currentTurnIndex = triggerPlayers.findIndex(\n        (player: Player) => player.isPlayersTurn\n      );\n      const nextTurnIndex =\n        currentTurnIndex === triggerPlayers.length - 1\n          ? 0\n          : currentTurnIndex + 1;\n\n      setTriggerPlayers(\n        triggerPlayers.map((player: Player, idx: number) => ({\n          ...player,\n          isPlayersTurn: nextTurnIndex === idx,\n        }))\n      );\n    }\n  };\n\n  const currentPlayer = triggerPlayers.filter(\n    (player) => player.isPlayersTurn\n  )[0];\n\n  return (\n    <div>\n      <div className=\"minigame animate__animated animate__rotateIn\">\n        <h1>Trigger finger!</h1>\n        <p>\n          Press the button as soon as it turns to green. The fastest player gets\n          one point!\n        </p>\n        <div className=\"text-center\">\n          <button className=\"btn btn-outline-light\" onClick={() => start()}>\n            Let's go!\n          </button>\n        </div>\n      </div>\n      {started && (\n        <div className=\"theme-wrapper\">\n          <h3>Trigger finger!</h3>\n          {!isTriggered && <h4>Press the button when it turns red</h4>}\n          <hr />\n          {isTriggered ? (\n            <div>\n              <h3>{currentPlayer.name} triggered in: </h3>\n              <h1 onClick={() => console.log(triggerPlayers)}>\n                {currentPlayer.reactionTime}ms\n              </h1>\n              <h1>\n                {currentPlayer.reactionTime > 0\n                  ? !currentPlayer.isEliminated\n                    ? 'YOU ARE IN THE LEAD!'\n                    : 'TOO SLOW :('\n                  : 'TOO EARLY! :('}\n              </h1>\n              <button\n                className=\"btn btn-outline-light\"\n                onClick={() => nextTurn()}\n              >\n                Next\n              </button>\n            </div>\n          ) : (\n            <button\n              className={`btn btn-trigger w-100 btn-${\n                switched ? 'danger' : 'primary'\n              }`}\n              onMouseDown={trigger}\n            >\n              {switched\n                ? 'TRIGGER!!!'\n                : `Wait for it ${currentPlayer.name.toUpperCase()}...`}\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Perks.css';\nimport { Perk, Player, Settings } from '../../interfaces/interfaces';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\nconst playerPerks = [\n  {\n    id: 'double-up',\n    name: 'Double up!',\n    description:\n      'Yay! You get 2 points for a correct answer on the next question.',\n    icon: 'angle-double-up',\n  },\n  {\n    id: 'freedom-of-choice',\n    name: 'Freedom of choice!',\n    description: 'Choose your category for the next 3 rounds.',\n    icon: 'hand-sparkles',\n  },\n  {\n    id: 'landmine',\n    name: 'Landmine!',\n    description: 'BOOM! You lose 1 point if you answer wrong.',\n    icon: 'bomb',\n  },\n];\n\nconst globalPerks = [\n  {\n    id: 'robin-hood',\n    name: 'Robin Hood',\n    description: '#generated#',\n  },\n  {\n    id: 'change-direction',\n    name: 'Direction change!',\n    description: 'The direction changes after this turn.',\n    icon: 'sync',\n  },\n];\n\nexport default function Perks({\n  setDirection,\n  setPlayers,\n  settings,\n  players,\n  sounds,\n}: {\n  setDirection: Function;\n  setPlayers: Function;\n  settings: Settings;\n  players: Player[];\n  sounds: any;\n}) {\n  const [perk, setPerk] = useState<Perk>({\n    id: '',\n    name: '',\n    description: '',\n    icon: '',\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    randomizePerk();\n  }, []);\n\n  const randomizePerk = () => {\n    const perks =\n      Math.random() < settings.probPlayerPerk ? playerPerks : globalPerks;\n    const randomPerkIndex = Math.floor(perks.length * Math.random());\n    const perk = perks[randomPerkIndex] as Perk;\n    if (perk.id === 'robin-hood' && !isRobinHoodEnabled(players)) {\n      randomizePerk();\n      return;\n    }\n\n    if (perk.id === 'change-direction' && !isChangeDirectionEnabled(players)) {\n      randomizePerk();\n      return;\n    }\n\n    switch (perk.id) {\n      case 'change-direction':\n        sounds.changeDirection();\n        break;\n      case 'landmine':\n        sounds.landmine();\n        break;\n      default:\n        sounds.goodPerk();\n        break;\n    }\n\n    setPerk(perk);\n  };\n\n  const updatePlayerPerks = (perkName: string, count: number) => {\n    setPlayers(\n      players.map((player: Player) =>\n        player.isPlayersTurn\n          ? {\n              ...player,\n              perks: { ...player.perks, [perkName]: count },\n            }\n          : player\n      )\n    );\n  };\n\n  const activatePerk = (perkId: string) => {\n    switch (perkId) {\n      case 'change-direction':\n        setDirection();\n        break;\n      case 'freedom-of-choice':\n        updatePlayerPerks('freedomOfChoice', 3);\n        break;\n      case 'double-up':\n        updatePlayerPerks('doubleUp', 1);\n        break;\n      case 'robin-hood':\n        setPlayers(switchPlayerPoints(players));\n        break;\n      case 'landmine':\n        updatePlayerPerks('landmine', 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleContinueClick = () => {\n    sounds.btn();\n    activatePerk(perk.id);\n    history.push('/select-category');\n  };\n\n  return (\n    <div id={perk.id} className=\"perk-wrapper text-center\">\n      <div className=\"pb-5 w-100\">\n        <div className=\"perk-icon animate__animated animate__rotateIn\">\n          <FontAwesomeIcon icon={perk.icon as IconProp} />\n        </div>\n        <h1>{perk.name}</h1>\n        <p>\n          {perk.id === 'robin-hood'\n            ? getRobinHoodText(players)\n            : perk.description}\n        </p>\n        <button className=\"btn btn-outline-light\" onClick={handleContinueClick}>\n          Continue\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport const subtractPointFromAllPlayers = (players: Player[]) => {\n  return players.map((player) => ({ ...player, points: player.points - 1 }));\n};\n\nexport const isChangeDirectionEnabled = (players: Player[]) => {\n  return players.length >= 3;\n};\n\nexport const isRobinHoodEnabled = (players: Player[]) => {\n  const maxPoints = Math.max(...players.map((player) => player.points));\n  const minPoints = Math.min(...players.map((player) => player.points));\n  const minAndMaxAreUnique =\n    players.filter((player) => player.points === maxPoints).length === 1 &&\n    players.filter((player) => player.points === minPoints).length === 1;\n  return maxPoints !== minPoints && minAndMaxAreUnique;\n};\n\nexport const getRobinHoodText = (players: Player[]): string => {\n  const maxPoints = Math.max(...players.map((player) => player.points));\n  const minPoints = Math.min(...players.map((player) => player.points));\n  const maxPlayerName = players.filter(\n    (player) => player.points === maxPoints\n  )[0].name;\n  const minPlayerName = players.filter(\n    (player) => player.points === minPoints\n  )[0].name;\n  return `${maxPlayerName} generously donates 1 point to ${minPlayerName}`;\n};\n\nexport const switchPlayerPoints = (players: Player[]) => {\n  const maxPoints = Math.max(...players.map((player) => player.points));\n  const minPoints = Math.min(...players.map((player) => player.points));\n  return players.map((player) => {\n    if (player.points === minPoints) {\n      return { ...player, points: player.points + 1 };\n    }\n    if (player.points === maxPoints) {\n      return { ...player, points: player.points - 1 };\n    }\n    return player;\n  });\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player, Question as _Question } from '../../interfaces/interfaces';\nimport './Question.css';\n\nexport default function Question({\n  currentQuestion,\n  currentPlayer,\n  players,\n  setPlayers,\n  sounds,\n}: {\n  currentQuestion: _Question;\n  currentPlayer: Player;\n  players: Player[];\n  setPlayers: any;\n  sounds: any;\n}) {\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState(30);\n  const [timer, setTimer] = useState<any>();\n  const history = useHistory();\n\n  useEffect(() => {\n    updateTime();\n  }, [timeRemaining, showAnswer]);\n\n  const extractAlternatives = (question: string) => {\n    if (question.includes('#ALT#')) {\n      const questions = question.replace('#ALTEND#', '').split('#ALT#');\n      const alternatives = questions[1].split(';;');\n      const last = alternatives.pop();\n      const alternativesText = `${alternatives.join(', ')} or ${last}?`;\n      return questions[0] + alternativesText;\n    } else {\n      return question;\n    }\n  };\n\n  const updateTime = () => {\n    if (!showAnswer) {\n      setTimer(\n        setTimeout(() => {\n          if (timeRemaining > 0) {\n            setTimeRemaining(timeRemaining - 1);\n          } else {\n            clearTimeout(timer);\n          }\n        }, 1000)\n      );\n    } else {\n      clearTimeout(timer);\n    }\n  };\n\n  const handleShowAnswerClick = () => {\n    setShowAnswer(true);\n    sounds.btn();\n  };\n\n  const rightAnswer = () => {\n    const earnedPoints = currentPlayer.perks.doubleUp > 0 ? 2 : 1;\n    const _players = updateCurrentPlayerPoints(players, earnedPoints);\n    setPlayers(_players);\n    sounds.btn();\n    history.push('/scoreboard');\n  };\n\n  const wrongAnswer = () => {\n    if (currentPlayer.perks.landmine > 0) {\n      const _players = updateCurrentPlayerPoints(players, -1);\n      setPlayers(_players);\n    }\n    sounds.btn();\n    history.push('/scoreboard');\n  };\n\n  const updateCurrentPlayerPoints = (players: Player[], points: number) => {\n    return players.map((player) => {\n      return player.isPlayersTurn\n        ? {\n            ...player,\n            points: Math.max(0, player.points + points),\n          }\n        : player;\n    });\n  };\n\n  const handleNextClick = () => {\n    sounds.btn();\n    history.push('/scoreboard');\n  };\n\n  return (\n    <div>\n      <div className=\"mb-4\">\n        <div className=\"text-uppercase\">{currentPlayer.name}</div>\n        <h1 className=\"text-capitalize\">{currentQuestion.category}</h1>\n        <p>{extractAlternatives(currentQuestion.question)}</p>\n        {currentQuestion.img && (\n          <div className=\"text-center\">\n            <img src={currentQuestion.img} />\n          </div>\n        )}\n      </div>\n      {showAnswer ? (\n        <div>\n          <div className=\"font-weight-bold\">Answer:</div>\n          <p>{currentQuestion.answer}</p>\n          <hr />\n          <div className=\"mb-3\">Did you get it?</div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <button\n                className=\"btn btn-success w-100 p-3 font-weight-bold yes-button\"\n                onClick={() => rightAnswer()}\n              >\n                <FontAwesomeIcon icon=\"check\" />\n                &nbsp;&nbsp;Yes\n              </button>\n            </div>\n            <div className=\"col-6\">\n              <button\n                className=\"btn btn-danger w-100 p-3 font-weight-bold no-button\"\n                onClick={() => wrongAnswer()}\n              >\n                <FontAwesomeIcon icon=\"times\" />\n                &nbsp;&nbsp;No\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : timeRemaining > 0 ? (\n        <div className=\"text-center\">\n          <h1 className=\"mb-4\">{timeRemaining}</h1>\n          <button\n            className=\"btn btn-secondary w-100 p-3\"\n            onClick={() => handleShowAnswerClick()}\n          >\n            Show answer\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"font-weight-bold\">Answer:</div>\n          <p>{currentQuestion.answer}</p>\n          <hr />\n          <div className=\"text-center\">\n            <h3 className=\"mb-3\">You ran out of time! :(</h3>\n            <button className=\"btn btn-outline-light\" onClick={handleNextClick}>\n              Next\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Direction, Player, Settings } from '../../interfaces/interfaces';\nimport './Scoreboard.css';\n\nexport default function Scoreboard({\n  players,\n  setPlayers,\n  direction,\n  settings,\n  isMiniGame,\n  setIsMiniGame,\n  sounds,\n}: {\n  players: Player[];\n  direction: Direction;\n  isMiniGame: boolean;\n  settings: Settings;\n  setPlayers: Function;\n  setIsMiniGame: Function;\n  sounds: any;\n}) {\n  const [winner, setWinner] = useState<Player>();\n  const [showWinner, setShowWinner] = useState(false);\n  useEffect(() => {\n    const winner = players.filter(\n      (player) => player.points >= settings.pointsToWin\n    )[0];\n    setWinner(winner);\n    if (winner) {\n      setTimeout(() => {\n        setShowWinner(true);\n        sounds.playerWins();\n      }, 3000);\n    }\n  }, []);\n  const history = useHistory();\n\n  const handleNextRoundClick = () => {\n    sounds.btn();\n    if (\n      settings.enabledMiniGames.length === 0 ||\n      Math.random() > settings.probMiniGame ||\n      isMiniGame\n    ) {\n      let _players = setNextPlayersTurn(players, direction);\n      _players = reduceCurrentPlayersPerksByOne(_players);\n      _players = resetMiniGameWinner(_players);\n      setPlayers(_players);\n      setIsMiniGame(false);\n      history.push('/show-turn');\n    } else {\n      setIsMiniGame(true);\n      const random = Math.random();\n      history.push(\n        random < 0.45\n          ? '/round-and-round'\n          : random < 0.92\n          ? '/closest-wins'\n          : '/trigger-finger'\n      );\n    }\n  };\n\n  const handlePlayAgainClick = () => {\n    setPlayers([]);\n    history.push('/home');\n  };\n\n  return (\n    <div>\n      <h2>Scoreboard</h2>\n      <table className=\"table text-white\">\n        <tbody>\n          {[...players]\n            .sort((a: Player, b: Player) => b.points - a.points)\n            .map((player: Player, idx: number) => (\n              <tr\n                key={idx}\n                className={\n                  shouldAnimatePlayerRow(player, isMiniGame)\n                    ? 'animate__animated animate__flash'\n                    : ''\n                }\n              >\n                <td className=\"text-uppercase\">\n                  {idx + 1}. {player.name}\n                </td>\n                <td className=\"text-right\">{player.points}p</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      {!winner && (\n        <div className=\"text-center pt-5\">\n          <button\n            onClick={() => handleNextRoundClick()}\n            className=\"btn btn-primary px-3 py-3\"\n          >\n            Next round <FontAwesomeIcon className=\"ml-2\" icon=\"arrow-right\" />\n          </button>\n        </div>\n      )}\n      {showWinner && (\n        <div className=\"winner-wrapper animate__animated animate__fadeIn\">\n          <div className=\"pb-5 w-100\">\n            <div className=\"perk-icon animate__animated animate__rotateIn\">\n              <FontAwesomeIcon icon={'trophy'} />\n            </div>\n            <h1 className=\"mb-5\">{winner?.name} wins!</h1>\n            <button\n              className=\"btn btn-outline-light\"\n              onClick={handlePlayAgainClick}\n            >\n              Play again\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport const shouldAnimatePlayerRow = (player: Player, isMiniGame: boolean) =>\n  isMiniGame ? player.isMiniGameWinner : player.isPlayersTurn;\n\nexport const resetMiniGameWinner = (players: Player[]) => {\n  return players.map((player) => ({ ...player, isMiniGameWinner: false }));\n};\n\nexport const setNextPlayersTurn = (players: Player[], direction: Direction) => {\n  let nextIndex = 0;\n  const currentPlayerIndex = players.findIndex(\n    (player) => player.isPlayersTurn\n  );\n  const lastPlayerIndex = players.length - 1;\n  const isFirstPlayer = currentPlayerIndex === 0;\n  const isLastPlayer = currentPlayerIndex === lastPlayerIndex;\n\n  if (direction === 1) {\n    nextIndex = isLastPlayer ? 0 : currentPlayerIndex + direction;\n  } else {\n    nextIndex = isFirstPlayer\n      ? lastPlayerIndex\n      : currentPlayerIndex + direction;\n  }\n\n  return players.map((player, idx) => ({\n    ...player,\n    isPlayersTurn: nextIndex === idx,\n  }));\n};\n\nexport const reduceCurrentPlayersPerksByOne = (players: Player[]) => {\n  return players.map((player: any) =>\n    player.isPlayersTurn\n      ? {\n          ...player,\n          perks: Object.keys(player.perks).reduce(\n            (prev, cur) =>\n              player.perks[cur] > 0\n                ? { ...prev, [cur]: player.perks[cur] - 1 }\n                : prev,\n            { ...player.perks }\n          ),\n        }\n      : player\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Category, Player } from '../../interfaces/interfaces';\nimport './SelectCategory.css';\n\nexport default function SelectCategory({\n  currentPlayer,\n  setCurrentCategory,\n  categories,\n  sounds,\n}: {\n  currentPlayer: Player;\n  setCurrentCategory: any;\n  setCurrentQuestion: any;\n  categories: Category[];\n  sounds: any;\n}) {\n  const [activeCategory, setActiveCategory] = useState({\n    id: 0,\n    identifier: '',\n    name: '',\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    randomizeCategory();\n  }, []);\n\n  const randomizeCategory = () => {\n    if (currentPlayer.perks.freedomOfChoice > 0) return;\n    let count = 0;\n    let prevRandomIndex: any;\n    const interval = setInterval(() => {\n      let randomIndex = Math.floor(Math.random() * categories.length);\n      while (randomIndex === prevRandomIndex) {\n        randomIndex = Math.floor(Math.random() * categories.length);\n      }\n      setActiveCategory(categories[randomIndex]);\n      prevRandomIndex = randomIndex;\n      count++;\n      if (count === 15) {\n        clearInterval(interval);\n        setCurrentCategory(categories[randomIndex]);\n        setTimeout(() => history.push('/question'), 2000);\n      }\n      sounds.click();\n    }, 200);\n  };\n\n  const handleClick = (category: Category) => {\n    if (currentPlayer.perks.freedomOfChoice > 0) {\n      sounds.btn();\n      setCurrentCategory(category);\n      history.push('/question');\n    }\n  };\n\n  return (\n    <div className=\"text-center\">\n      <div className=\"mb-4\">\n        <h1 className=\"mb-0 text-uppercase\">{currentPlayer.name}</h1>\n        <div>\"{currentPlayer.description}\"</div>\n        <div>({currentPlayer.points} points)</div>\n        {currentPlayer.perks.freedomOfChoice > 0 && (\n          <div>\n            Freedom Of Choice left: {currentPlayer.perks.freedomOfChoice}\n          </div>\n        )}\n      </div>\n      <div className=\"row\">\n        {categories.map((item: Category, idx: number) => (\n          <div className=\"col-6 p-1\" key={idx}>\n            <div\n              onClick={() => handleClick(item)}\n              className={\n                'category text-center p-1 p-sm-3 ' +\n                item.identifier +\n                (item.name === activeCategory?.name ||\n                currentPlayer.perks.freedomOfChoice > 0\n                  ? ' active'\n                  : '')\n              }\n            >\n              {item.name}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player, Settings } from '../../interfaces/interfaces';\nimport './ShowTurn.css';\n\nexport default function ShowTurn({\n  currentPlayer,\n  settings,\n}: {\n  currentPlayer: Player;\n  settings: Settings;\n}) {\n  const history = useHistory();\n\n  useEffect(() => {\n    setTimeout(() => {\n      history.push(\n        Math.random() < settings.probPerk ? '/perks' : '/select-category'\n      );\n    }, 3000);\n  }, []);\n\n  return (\n    <div className=\"show-turn-wrapper\">\n      <div className=\"w-100\">\n        <h1 className=\"text-uppercase\">{currentPlayer.name}</h1>\n        <h3>\"{currentPlayer.description}\"</h3>\n        <hr></hr>\n        <h2>You're next!</h2>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport api from '../../api/Api';\nimport { Category, Question } from '../../interfaces/interfaces';\n\nexport const validateForm = ({ categoryId, question, answer }: any) => {\n  if (Number(categoryId) === 0) return false;\n  if (question.length < 10) return false;\n  if (answer.length === 0) return false;\n  return true;\n};\n\nconst defaultFormValues = {\n  id: null,\n  question: '',\n  answer: '',\n  categoryId: 0,\n};\n\n// can't keep selected image in state\nlet addedImage: any;\n\nexport default function AddQuestion({\n  categories,\n  categoryId,\n  setAllQuestions,\n  showModal,\n  setShowModal,\n  question,\n}: any) {\n  const [formData, setFormData] = useState<Question>(defaultFormValues);\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  useEffect(() => {\n    setIsFormValid(validateForm(formData));\n  }, [formData]);\n\n  useEffect(() => {\n    setFormData(question || { ...defaultFormValues, categoryId });\n  }, [showModal, question]);\n\n  const handleFormChange = ({ name, value }: any) => {\n    let _value = name === 'categoryId' ? Number(value) : value;\n    setFormData({ ...formData, [name]: _value });\n  };\n\n  const handleImageChange = (target: any) => {\n    addedImage = target.files[0];\n  };\n\n  const handleClose = () => setShowModal(false);\n\n  const handleAddQuestionClick = () => {\n    api\n      .addQuestion(formData, addedImage)\n      .then(() => {\n        setAllQuestions(formData);\n        setFormData({ ...formData, question: '', answer: '' });\n      })\n      .catch((e) => console.log(e));\n  };\n\n  const handleSaveQuestionClick = () => {\n    api\n      .saveQuestion(formData)\n      .then(() => {\n        setAllQuestions(formData);\n        setFormData({ ...formData, question: '', answer: '' });\n        setShowModal(false);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  return (\n    <div>\n      <Modal className=\"text-dark\" show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{question ? 'Edit ' : 'Add '}question</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            Select a category and fill out the form in order to submit a\n            question. Your question will be reviewed by an administrator before\n            it gets added to the app. Thanks for making the game better! &lt;3\n          </p>\n          <div className=\"form-group\">\n            <label>Category</label>\n            <select\n              className=\"form-control\"\n              name=\"categoryId\"\n              value={formData.categoryId}\n              onChange={(e) => handleFormChange(e.target)}\n            >\n              <option value=\"0\">Choose</option>\n              {categories.map((category: Category, idx: number) => (\n                <option value={category.id} key={idx}>\n                  {category.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Question</label>\n            <textarea\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"question\"\n              value={formData.question}\n              rows={2}\n            ></textarea>\n          </div>\n          {!question && (\n            <div className=\"form-group\">\n              <label>Image</label>\n              <div>\n                <input\n                  type=\"file\"\n                  onChange={(e) => handleImageChange(e.target)}\n                  name=\"img\"\n                />\n              </div>\n            </div>\n          )}\n          {question?.img && (\n            <div>\n              <img\n                src={`https://quizmageddon.s3.eu-north-1.amazonaws.com/${question.img}`}\n              />\n            </div>\n          )}\n          <div className=\"form-group\">\n            <label>Answer</label>\n            <input\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"answer\"\n              value={formData.answer}\n            ></input>\n          </div>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={\n              question ? handleSaveQuestionClick : handleAddQuestionClick\n            }\n            disabled={!isFormValid}\n          >\n            {question ? 'Save ' : 'Add '}question\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport AddQuestion from '../addQuestion/AddQuestion';\nimport api from '../../api/Api';\nimport { Category, Question } from '../../interfaces/interfaces';\n\nconst filterQuestions = (\n  questions: any,\n  filterString: string,\n  categoryId: number,\n  image?: boolean\n) => {\n  return questions.filter(\n    (question: any) =>\n      (question?.question?.toLowerCase().includes(filterString) ||\n        question?.answer?.toLowerCase().includes(filterString)) &&\n      (categoryId === 0 || question?.categoryId === categoryId) &&\n      image === !!question.img\n  );\n};\n\nexport default function ViewQuestions({\n  categories,\n}: {\n  categories: Category[];\n}) {\n  const [allQuestions, setAllQuestions] = useState<Question[]>([]);\n  const [questions, setQuestions] = useState([]);\n  const [filterString, setFilterString] = useState('');\n  const [categoryId, setCategoryId] = useState(0);\n  const [showOnlyImages, setShowOnlyImages] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState<\n    Question | undefined\n  >(undefined);\n\n  useEffect(() => {\n    api.getAllQuestions().then((res) => {\n      setAllQuestions(res.data.questions);\n      setQuestions(res.data.questions);\n    });\n  }, []);\n\n  const handleInputChange = (filterString: string) => {\n    setFilterString(filterString.toLowerCase());\n    setQuestions(\n      filterQuestions(allQuestions, filterString.toLowerCase(), categoryId, showOnlyImages)\n    );\n  };\n\n  const handleSelectCategoryChange = (categoryId: string) => {\n    setCategoryId(Number(categoryId));\n    setQuestions(\n      filterQuestions(allQuestions, filterString, Number(categoryId), showOnlyImages)\n    );\n  };\n\n  const handleAddQuestionClick = () => {\n    setSelectedQuestion(undefined);\n    setShowModal(true);\n  };\n\n  const handleEditModalClick = (question: Question) => {\n    setSelectedQuestion(question);\n    setShowModal(true);\n  };\n\n  const handleShowImageQuestionsCheck = ({\n    target: { checked, name },\n  }: any) => {\n    setShowOnlyImages(checked);\n    setQuestions(\n      filterQuestions(allQuestions, filterString, Number(categoryId), checked)\n    );\n  };\n\n  return (\n    <div>\n      <h1 className=\"mb-4\">Questions</h1>\n      <div className=\"row mb-4\">\n        <div className=\"col-12 col-sm-4\">\n          <div className=\"form-group\">\n            <label>Category</label>\n            <select\n              className=\"form-control\"\n              onChange={(e) => handleSelectCategoryChange(e.target.value)}\n            >\n              <option value=\"0\">All categories</option>\n              {categories.map((category) => (\n                <option value={category.id}>\n                  {category.name} ({category.questions})\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"col-12 col-sm-4\">\n          <div className=\"form-group\">\n            <label>Filter term</label>\n            <input\n              className=\"form-control\"\n              onChange={(e) => handleInputChange(e.target.value)}\n            ></input>\n          </div>\n        </div>\n        <div className=\"col-12 col-sm-4\">\n          <div className=\"form-group\">\n            <label className=\"d-none d-sm-block\">&nbsp;</label>\n            <button\n              className=\"btn btn-secondary w-100\"\n              onClick={handleAddQuestionClick}\n            >\n              Add Question\n            </button>\n          </div>\n        </div>\n        <div className=\"col-12\">\n          <div className=\"form-group\">\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                checked={showOnlyImages}\n                onChange={handleShowImageQuestionsCheck}\n              />\n              <label className=\"form-check-label\">\n                Show only image questions\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <p>{questions.length} questions</p>\n      {questions.length > 0 && (\n        <table className=\"table text-white table-dark table-hover\">\n          <thead>\n            <tr>\n              <th>Question</th>\n              <th>Answer</th>\n              <th>Tags</th>\n            </tr>\n          </thead>\n          <tbody>\n            {questions.map((question: Question) => (\n              <tr\n                className=\"clickable\"\n                onClick={() => handleEditModalClick(question)}\n              >\n                <td>{question.question}</td>\n                <td>{question.answer}</td>\n                <td>{question.tags}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      <AddQuestion\n        categoryId={categoryId}\n        categories={categories}\n        question={selectedQuestion}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        setAllQuestions={(question: Question) => {\n          const questions = [...allQuestions, question];\n          setAllQuestions(questions);\n        }}\n      ></AddQuestion>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/goodPerk.48ebac9f.mp3\";","export default __webpack_public_path__ + \"static/media/button.6be18c19.mp3\";","export default __webpack_public_path__ + \"static/media/robots.8d72ac60.mp3\";","export default __webpack_public_path__ + \"static/media/countdown.8ca1c398.mp3\";","export default __webpack_public_path__ + \"static/media/trigger.5d9bb61e.mp3\";","export default __webpack_public_path__ + \"static/media/tooearly.874996ee.mp3\";","export default __webpack_public_path__ + \"static/media/playerWins.b577d961.mp3\";","export default __webpack_public_path__ + \"static/media/miniGame.8120e389.mp3\";","export default __webpack_public_path__ + \"static/media/applause.f7a7b086.mp3\";","export default __webpack_public_path__ + \"static/media/landmine.50b74156.mp3\";","export default __webpack_public_path__ + \"static/media/changeDirection.47bdbacd.mp3\";","import React, { useEffect } from 'react';\nimport useSound from 'use-sound';\nimport goodPerk from '../../sounds/goodPerk.mp3';\nimport button from '../../sounds/button.mp3';\nimport click from '../../sounds/robots.mp3';\nimport countdown from '../../sounds/countdown.mp3';\nimport trigger from '../../sounds/trigger.mp3';\nimport tooearly from '../../sounds/tooearly.mp3';\nimport playerWins from '../../sounds/playerWins.mp3';\nimport miniGame from '../../sounds/miniGame.mp3';\nimport applause from '../../sounds/applause.mp3';\nimport landmine from '../../sounds/landmine.mp3';\nimport changeDirection from '../../sounds/changeDirection.mp3';\n\nexport default function Sounds({ sounds, setSounds }) {\n  const soundConfig = { volume: 1 };\n  const [playBtnSound] = useSound(button, soundConfig);\n  const [playGoodPerkSound] = useSound(goodPerk, soundConfig);\n  const [playTriggerSound] = useSound(trigger, soundConfig);\n  const [playCountdownSound] = useSound(countdown, soundConfig);\n  const [playTooEarlySound] = useSound(tooearly, soundConfig);\n  const [playClickSound] = useSound(click, soundConfig);\n  const [playPlayerWins] = useSound(playerWins, soundConfig);\n  const [playMiniGame] = useSound(miniGame, soundConfig);\n  const [playApplause] = useSound(applause, soundConfig);\n  const [playLandmine] = useSound(landmine, soundConfig);\n  const [playChangeDirection] = useSound(changeDirection, soundConfig);\n\n  useEffect(() => {\n    if (!sounds) {\n      setSounds(() => ({\n        btn: () => playBtnSound(),\n        goodPerk: () => playGoodPerkSound(),\n        trigger: () => playTriggerSound(),\n        countdown: () => playCountdownSound(),\n        tooEarly: () => playTooEarlySound(),\n        click: () => playClickSound(),\n        playerWins: () => playPlayerWins(),\n        miniGame: () => playMiniGame(),\n        applause: () => playApplause(),\n        landmine: () => playLandmine(),\n        changeDirection: () => playChangeDirection(),\n      }));\n    }\n  }, [\n    playBtnSound,\n    playGoodPerkSound,\n    playTriggerSound,\n    playCountdownSound,\n    playTooEarlySound,\n    playClickSound,\n    playPlayerWins,\n    playMiniGame,\n    playApplause,\n    playLandmine,\n    playChangeDirection,\n    setSounds,\n    sounds,\n  ]);\n\n  return <span></span>;\n}\n","import { ENGINE_METHOD_PKEY_ASN1_METHS } from 'node:constants';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Player } from '../../../interfaces/interfaces';\nimport './ClosestWins.css';\n\nexport default function ClosestWins({\n  questions,\n  setClosestWinsQuestions,\n  players,\n  setPlayers,\n  sounds,\n}: {\n  questions: any[];\n  players: Player[];\n  setPlayers: any;\n  sounds: any;\n  setClosestWinsQuestions: Function;\n}) {\n  const [started, setStarted] = useState(false);\n  const [question, setQuestion] = useState({\n    question: 'What year was Michael Jackson born?',\n    answer: 1960,\n    answerText: 'He was born in 1960',\n  });\n  const [closestWinGuess, setClosesWinGuess] = useState('');\n  const [showError, setShowError] = useState(false);\n  const [cwPlayers, setCwPlayers] = useState(\n    players.map((players) => ({ ...players, closestWinGuess: null }))\n  );\n  const history = useHistory();\n\n  useEffect(() => {\n    sounds.miniGame();\n    const randomIdx = Math.floor(Math.random() * questions.length);\n    setQuestion(questions[randomIdx]);\n    setClosestWinsQuestions(questions.filter((item, idx) => idx !== randomIdx));\n  }, []);\n\n  useEffect(() => {\n    if (cwPlayers.filter((player) => player.isMiniGameWinner).length > 0)\n      return;\n    const playersThatHaveGuessed = cwPlayers.filter(\n      (player) => !!player.closestWinGuess\n    );\n    if (playersThatHaveGuessed.length === cwPlayers.length) {\n      showClosestGuess();\n    }\n  }, [cwPlayers]);\n\n  const start = () => {\n    setStarted(true);\n  };\n\n  const next = () => {\n    sounds.btn();\n    history.push('/scoreboard');\n  };\n\n  const reset = () => {\n    setStarted(false);\n    setCwPlayers(\n      players.map((players) => ({ ...players, closestWinGuess: null }))\n    );\n  };\n\n  const showClosestGuess = () => {\n    let leastDiff: number;\n    let leastDiffIdx: any = null;\n\n    cwPlayers.forEach((player: any, idx) => {\n      const playerDiff = Math.abs(player.closestWinGuess - question.answer);\n      if (!leastDiff || playerDiff < leastDiff) {\n        leastDiff = playerDiff;\n        leastDiffIdx = idx;\n      }\n    });\n\n    setCwPlayers(\n      cwPlayers.map((player, idx) =>\n        idx === leastDiffIdx ? { ...player, isMiniGameWinner: true } : player\n      )\n    );\n\n    setPlayers(\n      players.map((player, idx) =>\n        idx === leastDiffIdx\n          ? { ...player, points: player.points + 2, isMiniGameWinner: true }\n          : player\n      )\n    );\n  };\n\n  const handleNumberChange = (btn: string) => {\n    sounds.btn();\n    const val =\n      btn !== 'delete'\n        ? closestWinGuess + btn\n        : closestWinGuess.substr(0, closestWinGuess.length - 1);\n    setClosesWinGuess(val);\n  };\n\n  const handleSubmit = () => {\n    sounds.btn();\n    setShowError(false);\n    const currentTurnIndex = cwPlayers.findIndex(\n      (player: Player) => player.isPlayersTurn\n    );\n    const nextTurnIndex =\n      currentTurnIndex === cwPlayers.length - 1 ? 0 : currentTurnIndex + 1;\n    const guessExists =\n      cwPlayers.filter(\n        (player) => player.closestWinGuess === Number(closestWinGuess)\n      ).length > 0;\n\n    if (guessExists) {\n      setShowError(true);\n      setClosesWinGuess('');\n      return;\n    }\n\n    setCwPlayers(\n      cwPlayers.map((player: any, idx: number) => ({\n        ...player,\n        closestWinGuess: player.isPlayersTurn\n          ? Number(closestWinGuess)\n          : player.closestWinGuess,\n        isPlayersTurn: nextTurnIndex === idx,\n      }))\n    );\n\n    setClosesWinGuess('');\n  };\n\n  const currentPlayer = cwPlayers.filter((player) => player.isPlayersTurn)[0];\n  const winner = cwPlayers.filter((player) => player.isMiniGameWinner)[0];\n  const btns = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'delete'];\n\n  return (\n    <div>\n      {started ? (\n        !winner ? (\n          <div>\n            <h3 className=\"question mb-3\">{question.question}</h3>\n            <div className=\"cw-display text-center\">\n              {closestWinGuess.length === 0 ? (\n                <h3 className=\"name\">{currentPlayer.name}</h3>\n              ) : (\n                <h3 className=\"number\">\n                  {closestWinGuess.split('').map((number) => '*')}\n                </h3>\n              )}\n            </div>\n\n            <div className=\"row\">\n              {btns.map((btn, idx) => (\n                <div className=\"col-4\" key={idx}>\n                  <div\n                    className=\"cw-btn\"\n                    onClick={() => handleNumberChange(btn)}\n                  >\n                    {btn}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {showError && (\n              <h4 className=\"animate__animated animate__flash\">\n                Sorry! That guess is already taken! :(\n              </h4>\n            )}\n            <hr />\n            <button\n              className=\"btn btn-success submit-btn\"\n              onClick={handleSubmit}\n            >\n              Submit\n            </button>\n          </div>\n        ) : (\n          <div className=\"text-center\">\n            <h2 className=\"mb-4\">{winner.name} wins!</h2>\n            <h4 onClick={reset}>The correct answer is:</h4>\n            <div className=\"mb-5\">\n              <h1 className=\"answer\">{question.answer}</h1>\n              {question.answerText && <div>{question.answerText}</div>}\n            </div>\n            <h4>Your guesses:</h4>\n            {cwPlayers.map((player, idx) => (\n              <div className=\"text-center\" key={idx}>\n                {player.name}: {player.closestWinGuess}\n              </div>\n            ))}\n            <hr></hr>\n            <button className=\"btn btn-outline-light\" onClick={next}>\n              Continue\n            </button>\n          </div>\n        )\n      ) : (\n        <div className=\"minigame animate__animated animate__rotateIn\">\n          <h1 className=\"text-center\">Mini Game!</h1>\n          <h5 className=\"text-center mb-4\">\n            Guess a number! The one who is closest wins 2 points.\n          </h5>\n          <div className=\"example\">\n            <b className=\"d-block\">Example question:</b> What year was Michael\n            Jackson born?\n          </div>\n          <button className=\"btn btn-outline-light w-100\" onClick={start}>\n            Alright, let's go!\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faAngleDoubleUp,\n  faArrowRight,\n  faBomb,\n  faCheck,\n  faCog,\n  faHandSparkles,\n  faPlay,\n  faPlus,\n  faSync,\n  faTimes,\n  faTools,\n  faTrophy,\n} from '@fortawesome/free-solid-svg-icons';\nimport { useState, useEffect } from 'react';\nimport { MemoryRouter, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport AddPlayers from './components/addPlayers/AddPlayers';\nimport Home from './components/home/Home';\nimport Login from './components/login/Login';\nimport RoundAndRound from './components/minigames/roundAndRound/RoundAndRound';\nimport TriggerFinger from './components/minigames/triggerFinger/TriggerFinger';\nimport Perks from './components/perks/Perks';\nimport Question from './components/question/Question';\nimport Scoreboard from './components/scoreboard/Scoreboard';\nimport SelectCategory from './components/selectCategory/SelectCategory';\nimport ShowTurn from './components/showTurn/ShowTurn';\nimport ViewQuestions from './components/viewQuestions/ViewQuestions';\nimport Sounds from './components/sounds/Sounds';\nimport ClosestWins from './components/minigames/closestWins/ClosestWins';\n\nlibrary.add(\n  faSync,\n  faAngleDoubleUp,\n  faCog,\n  faTrophy,\n  faHandSparkles,\n  faBomb,\n  faPlus,\n  faCheck,\n  faTimes,\n  faArrowRight,\n  faPlay,\n  faTools\n);\n\nfunction App() {\n  const [players, setPlayers] = useState([]);\n  const [settings, setSettings] = useState({\n    pointsToWin: 10,\n    enabledMiniGames: ['roundAndRound', 'triggerFinger', 'closestWins'],\n    probMiniGame: 0.1,\n    probPerk: 0.2,\n    probPlayerPerk: 0.6,\n    lightMode: false,\n    imgBaseUrl: 'https://quizmageddon.s3.eu-north-1.amazonaws.com/',\n  });\n\n  const [questions, setQuestions] = useState({});\n  const [categories, setCategories] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [themes, setThemes] = useState({});\n  const [closestWinsQuestions, setClosestWinsQuestions] = useState([]);\n  const [sounds, setSounds] = useState({});\n  const [direction, setDirection] = useState(1);\n  const [user, setUser] = useState({});\n  const [isMiniGame, setIsMiniGame] = useState(false);\n\n  useEffect(() => {\n    settings.lightMode\n      ? document.body.classList.add('light-mode')\n      : document.body.classList.remove('light-mode');\n  }, [settings]);\n\n  const _setCurrentQuestion = (category) => {\n    const questionsByCategory = questions.filter(\n      (question) => question.categoryId === category.id\n    );\n    const numOfQuestionsInCategory = questionsByCategory.length;\n    const randomIndex = Math.floor(Math.random() * numOfQuestionsInCategory);\n    const randomQuestion = questionsByCategory[randomIndex];\n    setQuestions(\n      questions.filter((question) => question.id !== randomQuestion.id)\n    );\n    setCurrentQuestion({ ...randomQuestion, category: category.identifier });\n  };\n\n  return (\n    <div className=\"App\">\n      <Sounds setSounds={setSounds} />\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login setUser={setUser}></Login>\n          </Route>\n          <Route path=\"/home\">\n            <Home\n              categories={categories}\n              user={user}\n              settings={settings}\n              setSettings={setSettings}\n              setCategories={setCategories}\n              setQuestions={setQuestions}\n              setThemes={setThemes}\n              setClosestWinsQuestions={setClosestWinsQuestions}\n              sounds={sounds}\n            ></Home>\n          </Route>\n          <Route path=\"/add-players\">\n            <AddPlayers\n              players={players}\n              setPlayers={setPlayers}\n              sounds={sounds}\n            ></AddPlayers>\n          </Route>\n          <Route path=\"/show-turn\">\n            <ShowTurn\n              settings={settings}\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n            ></ShowTurn>\n          </Route>\n          <Route path=\"/perks\">\n            <Perks\n              settings={settings}\n              players={players}\n              setPlayers={setPlayers}\n              setDirection={() => setDirection(direction * -1)}\n              sounds={sounds}\n            ></Perks>\n          </Route>\n          <Route path=\"/round-and-round\">\n            <RoundAndRound\n              players={players}\n              themes={themes}\n              setThemes={setThemes}\n              setPlayers={setPlayers}\n              sounds={sounds}\n            ></RoundAndRound>\n          </Route>\n          <Route path=\"/trigger-finger\">\n            <TriggerFinger\n              players={players}\n              setPlayers={setPlayers}\n              sounds={sounds}\n            ></TriggerFinger>\n          </Route>\n          <Route path=\"/closest-wins\">\n            <ClosestWins\n              questions={closestWinsQuestions}\n              setClosestWinsQuestions={setClosestWinsQuestions}\n              players={players}\n              setPlayers={setPlayers}\n              sounds={sounds}\n            ></ClosestWins>\n          </Route>\n          <Route path=\"/select-category\">\n            <SelectCategory\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n              categories={categories.filter((category) => !category.disabled)}\n              setCurrentCategory={_setCurrentQuestion}\n              sounds={sounds}\n            ></SelectCategory>\n          </Route>\n          <Route path=\"/question\">\n            <Question\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n              currentQuestion={currentQuestion}\n              players={players}\n              settings={settings}\n              setPlayers={setPlayers}\n              sounds={sounds}\n            ></Question>\n          </Route>\n          <Route path=\"/scoreboard\">\n            <Scoreboard\n              settings={settings}\n              direction={direction}\n              players={players}\n              setPlayers={setPlayers}\n              isMiniGame={isMiniGame}\n              setIsMiniGame={setIsMiniGame}\n              sounds={sounds}\n            ></Scoreboard>\n          </Route>\n          <Route path=\"/admin/questions\">\n            <ViewQuestions categories={categories}></ViewQuestions>\n          </Route>\n        </Switch>\n      </MemoryRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'animate.css/animate.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}