{"version":3,"sources":["api/Api.js","components/addPlayers/AddPlayers.tsx","components/home/Home.tsx","components/perks/Perks.tsx","components/question/Question.tsx","components/roundAndRound/RoundAndRound.tsx","components/scoreboard/Scoreboard.tsx","components/selectCategory/SelectCategory.tsx","components/showTurn/ShowTurn.tsx","components/addQuestion/AddQuestion.tsx","components/viewQuestions/ViewQuestions.tsx","sounds/robots.mp3","sounds/button.mp3","sounds/goodPerk.mp3","components/login/Register.tsx","components/login/Login.tsx","App.js","reportWebVitals.js","index.js"],"names":["api","getCategories","axios","get","getPlayerDescriptionWords","getQuestions","headers","authorization","localStorage","getItem","getAllQuestions","getRoundAndRoundThemes","addQuestion","formData","post","saveQuestion","put","deleteQuestion","delete","addUser","login","AddPlayers","players","setPlayers","playBtnSound","useState","playerInput","setPlayerInput","nouns","adjectives","playerWords","setPlayerWords","history","useHistory","useEffect","then","res","data","addPlayer","name","description","getRandomDescription","points","isPlayersTurn","perks","freedomOfChoice","doubleUp","startGame","randomPlayer","Math","floor","random","length","map","player","idx","randomizeFirstTurn","push","nounsLength","randomNoun","noun","adjectivesLength","randomAdjective","adjective","className","type","value","autoFocus","onKeyPress","e","key","onChange","target","onClick","filter","_","i","removePlayer","disabled","Home","setCategories","setQuestions","setThemes","user","categories","questions","themes","roleId","playerPerks","id","icon","globalPerks","Perks","setDirection","playGoodPerkSound","perk","setPerk","randomizePerk","isRobinHoodEnabled","isChangeDirectionEnabled","updatePlayerPerks","perkName","count","getRobinHoodText","perkId","switchPlayerPoints","activatePerk","maxPoints","max","minPoints","min","minAndMaxAreUnique","maxPlayerName","minPlayerName","Question","currentQuestion","currentPlayer","showAnswer","setShowAnswer","timeRemaining","setTimeRemaining","timer","setTimer","updateTime","clearTimeout","setTimeout","handleTimeout","updateCurrentPlayerPoints","category","question","includes","replace","split","alternatives","last","pop","alternativesText","join","extractAlternatives","answer","earnedPoints","_players","rightAnswer","landmine","wrongAnswer","RoundAndRound","randomizeLetter","theme","setTheme","showTheme","setShowTheme","started","setStarted","timeLeft","setTimeLeft","randomLetter","setRandomLetter","_setPlayers","getRandomLetter","letters","nextTurn","removeCurrent","currentTurnIndex","findIndex","nextTurnIndex","toLocaleUpperCase","Scoreboard","direction","sort","a","b","setNextTurn","reducePlayerPerks","handleNextRoundClick","currentPlayerIndex","nextIndex","isFirstPlayer","isLastPlayer","Object","keys","reduce","prev","cur","SelectCategory","setCurrentCategory","play","identifier","activeCategory","setActiveCategory","randomizeCategory","prevRandomIndex","interval","setInterval","randomIndex","clearInterval","item","ShowTurn","defaultFormValues","categoryId","AddQuestion","setAllQuestions","showModal","setShowModal","setFormData","isFormValid","setIsFormValid","validateForm","handleFormChange","Modal","show","onHide","Header","closeButton","Title","Body","rows","Footer","catch","console","log","filterQuestions","filterString","toLowerCase","ViewQuestions","allQuestions","setFilterString","setCategoryId","undefined","selectedQuestion","setSelectedQuestion","Number","handleSelectCategoryChange","handleInputChange","handleEditModalClick","tags","Register","username","email","password","passwordRepeat","errorMsg","setErrorMsg","schema","Joi","object","string","required","tlds","ref","newFormData","error","validate","message","Login","setUser","setError","setItem","accessToken","response","library","add","faSync","faAngleDoubleUp","App","setCurrentQuestion","useSound","sound","volume","soundButton","goodPerk","exact","path","questionsByCategory","numOfQuestionsInCategory","randomQuestion","_setCurrentQuestion","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9c2dbf8.chunk.js","sourcesContent":["import axios from 'axios';\nconst mocks = true;\n\nconst api = {\n  getCategories: () =>\n    axios.get(mocks ? 'mocks/categories.json' : '/api/categories'),\n  getPlayerDescriptionWords: () =>\n    axios.get('mocks/playerDescriptionWords.json'),\n  getQuestions: () =>\n    axios.get(mocks ? 'mocks/questions.json' : '/api/questions', {\n      headers: {\n        authorization: 'Bearer ' + localStorage.getItem('accessToken'),\n      },\n    }),\n  getAllQuestions: () =>\n    axios.get(mocks ? 'mocks/questions.json' : '/api/all-questions', {\n      headers: {\n        authorization: 'Bearer ' + localStorage.getItem('accessToken'),\n      },\n    }),\n  getRoundAndRoundThemes: () =>\n    axios.get(true ? 'mocks/roundAndRound.json' : '/api/round-and-round'),\n  addQuestion: (formData) => axios.post('/api/questions', formData),\n  saveQuestion: (formData) => axios.put('/api/questions', formData),\n  deleteQuestion: (formData) => axios.delete('/api/questions', formData),\n  addUser: (formData) => axios.post('/api/users', formData),\n  login: (formData) =>\n    mocks ? axios.get('mocks/login.json') : axios.post('/api/login', formData),\n};\n\nexport default api;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../api/Api';\nimport { Player } from '../../interfaces/interfaces';\nimport './AddPlayers.css';\n\nexport default function AddPlayers({ players, setPlayers, playBtnSound }: any) {\n  const [playerInput, setPlayerInput] = useState('');\n  const [playerWords, setPlayerWords] = useState({nouns: [], adjectives: []});\n  const history = useHistory();\n\n  useEffect(() => {\n    api.getPlayerDescriptionWords().then((res) => setPlayerWords(res.data));\n  }, []);\n\n  const addPlayer = (name: String) => {\n    setPlayers([\n      ...players,\n      {\n        name,\n        description: getRandomDescription(),\n        points: 0,\n        isPlayersTurn: false,\n        perks: { freedomOfChoice: 0, doubleUp: 0 },\n      },\n    ]);\n    setPlayerInput('');\n  };\n\n  const removePlayer = (idx: Number) => {\n    setPlayers(players.filter((_: any, i: Number) => idx !== i));\n  };\n\n  const randomizeFirstTurn = () => {\n    const randomPlayer = Math.floor(Math.random() * players.length);\n    setPlayers(\n      players.map((player: Player, idx: Number) => {\n        if (randomPlayer === idx) {\n          return { ...player, isPlayersTurn: true };\n        } else {\n          return player;\n        }\n      })\n    );\n  };\n\n  const startGame = () => {\n    randomizeFirstTurn();\n    playBtnSound();\n    history.push('/show-turn');\n  };\n\n  const handlePlayerInputChange = (value: string) => setPlayerInput(value);\n\n  const getRandomDescription = () => {\n    const nounsLength = playerWords.nouns.length;\n    const randomNoun = Math.floor(Math.random() * nounsLength);\n    const noun = playerWords.nouns[randomNoun];\n    const adjectivesLength = playerWords.adjectives.length;\n    const randomAdjective = Math.floor(Math.random() * adjectivesLength);\n    const adjective = playerWords.adjectives[randomAdjective];\n    return `The ${adjective} ${noun}`;\n  };\n\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-12 col-sm-6 col-lg-6 col-xl-4\">\n        <h1>Add players</h1>\n        <p>Enter a name and press enter or the \"Add\" button.</p>\n        <label>Name</label>\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control add-player\"\n            value={playerInput}\n            autoFocus\n            onKeyPress={(e) => e.key === 'Enter' && addPlayer(playerInput)}\n            onChange={(e) => handlePlayerInputChange(e.target.value)}\n          />\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => addPlayer(playerInput)}\n          >\n            Add\n          </button>\n        </div>\n        {players.map((player: Player, idx: number) => (\n          <div\n            className=\"added-player\"\n            key={idx}\n            onClick={() => removePlayer(idx)}\n          >\n            {idx + 1}.{' '}\n            <span className=\"font-weight-bold text-uppercase\">\n              {player.name}\n            </span>{' '}\n            - {player.description}\n          </div>\n        ))}\n        <hr />\n        <button\n          className=\"btn btn-primary w-100 start-game\"\n          onClick={() => startGame()}\n          disabled={players.length < 2}\n        >\n          Start Game!\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport api from '../../api/Api';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Home({\n  setCategories,\n  setQuestions,\n  setThemes,\n  user,\n}: any) {\n  const history = useHistory();\n\n  useEffect(() => {\n    api.getCategories().then((res) => {\n      setCategories(res.data.categories);\n    });\n\n    api.getQuestions().then((res) => {\n      setQuestions(res.data.questions);\n    });\n\n    api.getRoundAndRoundThemes().then((res) => {\n      setThemes(res.data.themes);\n    });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12 text-right\">\n          {user.roleId === 0 && (\n            <button\n              className=\"btn btn-outline-light\"\n              onClick={() => history.push('/admin/questions')}\n            >\n              Admin\n            </button>\n          )}\n        </div>\n      </div>\n      <div className=\"text-center\">\n        <h1>Quizmageddon</h1>\n        <p>\n          Welcome to quizmageddon - the best quiz game ever created by men.\n          Start the game by adding players!\n        </p>\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => history.push('/add-players')}\n        >\n          Add players\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Perks.css';\nimport { Perk, Player } from '../../interfaces/interfaces';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\nconst playerPerks = [\n  {\n    id: 'double-up',\n    name: 'Double up!',\n    description:\n      'Yay! You get 2 points for a correct answer on the next question.',\n    icon: 'angle-double-up',\n  },\n  {\n    id: 'freedom-of-choice',\n    name: 'Freedom of choice!',\n    description: 'Choose your category for the next 3 rounds.',\n  },\n  {\n    id: 'landmine',\n    name: 'Landmine!',\n    description: 'BOOM! You lose 1 point if you answer wrong.',\n  },\n];\n\nconst globalPerks = [\n  {\n    id: 'robin-hood',\n    name: 'Robin Hood',\n    description: '#generated#',\n  },\n  {\n    id: 'change-direction',\n    name: 'Direction change!',\n    description: 'The direction changes after this turn.',\n    icon: 'sync',\n  },\n];\n\nexport default function Perks({\n  setDirection,\n  setPlayers,\n  players,\n  playGoodPerkSound,\n}: any) {\n  const [perk, setPerk] = useState<Perk>({\n    id: '',\n    name: '',\n    description: '',\n    icon: '',\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    randomizePerk();\n  }, []);\n\n  const randomizePerk = () => {\n    const perks = Math.random() < 0.6 ? playerPerks : globalPerks;\n    const randomPerkIndex = Math.floor(perks.length * Math.random());\n    const perk = perks[randomPerkIndex] as Perk;\n    if (perk.id === 'robin-hood' && !isRobinHoodEnabled(players)) {\n      randomizePerk();\n      return;\n    }\n\n    if (perk.id === 'change-direction' && !isChangeDirectionEnabled(players)) {\n      randomizePerk();\n      return;\n    }\n\n    setPerk(perk);\n    playGoodPerkSound();\n  };\n\n  const updatePlayerPerks = (perkName: string, count: number) => {\n    setPlayers(\n      players.map((player: Player) =>\n        player.isPlayersTurn\n          ? {\n              ...player,\n              perks: { ...player.perks, [perkName]: count },\n            }\n          : player\n      )\n    );\n  };\n\n  const activatePerk = (perkId: string) => {\n    switch (perkId) {\n      case 'change-direction':\n        setDirection();\n        break;\n      case 'freedom-of-choice':\n        updatePlayerPerks('freedomOfChoice', 3);\n        break;\n      case 'double-up':\n        updatePlayerPerks('doubleUp', 1);\n        break;\n      case 'robin-hood':\n        setPlayers(switchPlayerPoints(players));\n        break;\n      case 'landmine':\n        updatePlayerPerks('landmine', 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleContinueClick = () => {\n    activatePerk(perk.id);\n    history.push('/select-category');\n  };\n\n  return (\n    <div id={perk.id} className=\"perk-wrapper text-center\">\n      <div className=\"pb-5 w-100\">\n        <div className=\"perk-icon animate__animated animate__rotateIn\">\n          <FontAwesomeIcon icon={perk.icon as IconProp} />\n        </div>\n        <h1>{perk.name}</h1>\n        <p>\n          {perk.id === 'robin-hood'\n            ? getRobinHoodText(players)\n            : perk.description}\n        </p>\n        <button className=\"btn btn-outline-light\" onClick={handleContinueClick}>\n          Continue\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport const subtractPointFromAllPlayers = (players: Player[]) => {\n  return players.map((player) => ({ ...player, points: player.points - 1 }));\n};\n\nexport const isChangeDirectionEnabled = (players: Player[]) => {\n  return players.length >= 3;\n};\n\nexport const isRobinHoodEnabled = (players: Player[]) => {\n  const maxPoints = Math.max(...players.map((player) => player.points));\n  const minPoints = Math.min(...players.map((player) => player.points));\n  const minAndMaxAreUnique =\n    players.filter((player) => player.points === maxPoints).length === 1 &&\n    players.filter((player) => player.points === minPoints).length === 1;\n  return maxPoints !== minPoints && minAndMaxAreUnique;\n};\n\nexport const getRobinHoodText = (players: Player[]): string => {\n  const maxPoints = Math.max(...players.map((player) => player.points));\n  const minPoints = Math.min(...players.map((player) => player.points));\n  const maxPlayerName = players.filter(\n    (player) => player.points === maxPoints\n  )[0].name;\n  const minPlayerName = players.filter(\n    (player) => player.points === minPoints\n  )[0].name;\n  return `${maxPlayerName} generously donates 1 point to ${minPlayerName}`;\n};\n\nexport const switchPlayerPoints = (players: Player[]) => {\n  const maxPoints = Math.max(...players.map((player) => player.points));\n  const minPoints = Math.min(...players.map((player) => player.points));\n  return players.map((player) => {\n    if (player.points === minPoints) {\n      return { ...player, points: player.points + 1 };\n    }\n    if (player.points === maxPoints) {\n      return { ...player, points: player.points - 1 };\n    }\n    return player;\n  });\n};\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player, Question as _Question } from '../../interfaces/interfaces';\n\nexport default function Question({\n  currentQuestion,\n  currentPlayer,\n  players,\n  setPlayers,\n  playBtnSound,\n}: {\n  currentQuestion: _Question;\n  currentPlayer: Player;\n  players: Player[];\n  setPlayers: any;\n  playBtnSound: any;\n}) {\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState(30);\n  const [timer, setTimer] = useState<any>();\n  const history = useHistory();\n\n  useEffect(() => {\n    updateTime();\n  }, [timeRemaining, showAnswer]);\n\n  const extractAlternatives = (question: string) => {\n    if (question.includes('#ALT#')) {\n      const questions = question.replace('#ALTEND#', '').split('#ALT#');\n      const alternatives = questions[1].split(';;');\n      const last = alternatives.pop();\n      const alternativesText = `${alternatives.join(', ')} or ${last}?`;\n      return questions[0] + alternativesText;\n    } else {\n      return question;\n    }\n  };\n\n  const updateTime = () => {\n    if (!showAnswer) {\n      setTimer(\n        setTimeout(() => {\n          if (timeRemaining > 0) {\n            setTimeRemaining(timeRemaining - 1);\n          } else {\n            handleTimeout();\n            clearTimeout(timer);\n          }\n        }, 1000)\n      );\n    } else {\n      clearTimeout(timer);\n    }\n  };\n\n  const handleShowAnswerClick = () => {\n    setShowAnswer(true);\n    playBtnSound();\n  };\n\n  const handleTimeout = () => {\n    setTimeout(() => history.push('/scoreboard'), 2000);\n  };\n\n  const rightAnswer = () => {\n    const earnedPoints = currentPlayer.perks.doubleUp > 0 ? 2 : 1;\n    const _players = updateCurrentPlayerPoints(players, earnedPoints);\n    setPlayers(_players);\n    playBtnSound();\n    history.push('/scoreboard');\n  };\n\n  const wrongAnswer = () => {\n    if (currentPlayer.perks.landmine > 0) {\n      const _players = updateCurrentPlayerPoints(players, -1);\n      setPlayers(_players);\n    }\n    playBtnSound();\n    history.push('/scoreboard');\n  };\n\n  const updateCurrentPlayerPoints = (players: Player[], points: number) => {\n    return players.map((player) =>\n      player.isPlayersTurn\n        ? {\n            ...player,\n            points: player.points + points,\n          }\n        : player\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"mb-4\">\n        <div className=\"text-uppercase\">{currentPlayer.name}</div>\n        <h1 className=\"text-capitalize\">{currentQuestion.category}</h1>\n        <p>{extractAlternatives(currentQuestion.question)}</p>\n      </div>\n      {showAnswer ? (\n        <div>\n          <div className=\"font-weight-bold\">Answer:</div>\n          <p>{currentQuestion.answer}</p>\n          <hr />\n          <div className=\"mb-3\">Did you get it?</div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <button\n                className=\"btn btn-success w-100 p-3\"\n                onClick={() => rightAnswer()}\n              >\n                YES\n              </button>\n            </div>\n            <div className=\"col-6\">\n              <button\n                className=\"btn btn-danger w-100 p-3\"\n                onClick={() => wrongAnswer()}\n              >\n                NO\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : timeRemaining > 0 ? (\n        <div className=\"text-center\">\n          <h1 className=\"mb-4\">{timeRemaining}</h1>\n          <button\n            className=\"btn btn-secondary w-100 p-3\"\n            onClick={() => handleShowAnswerClick()}\n          >\n            Show answer\n          </button>\n        </div>\n      ) : (\n        'Whops! You ran out of time!'\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player, RoundAndRoundTheme } from '../../interfaces/interfaces';\nimport './RoundAndRound.css';\n\nexport default function RoundAndRound({\n  themes,\n  players,\n  playGoodPerkSound,\n  playBtnSound\n}: {\n  themes: RoundAndRoundTheme[];\n  players: Player[];\n  playGoodPerkSound: any;\n  playBtnSound: any;\n}) {\n  const [theme, setTheme] = useState({\n    description: '',\n    randomizeLetter: false,\n  });\n  const [showTheme, setShowTheme] = useState(false);\n  const [started, setStarted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [timer, setTimer] = useState<any>(null);\n  const [randomLetter, setRandomLetter] = useState('');\n  const [_players, _setPlayers] = useState(players);\n  const history = useHistory();\n\n  useEffect(() => {\n    playGoodPerkSound();\n    setTheme(themes[Math.floor(themes.length * Math.random())]);\n    setRandomLetter(getRandomLetter());\n  }, []);\n\n  useEffect(() => {\n    if (started) {\n      updateTime();\n    }\n  }, [timeLeft]);\n\n  const getRandomLetter = () => {\n    const letters = 'abcdefghijklmnoprstuvy'.split('');\n    return letters[Math.floor(Math.random() * letters.length)];\n  };\n\n  const handleClick = () => {\n    playBtnSound();\n    setShowTheme(true);\n  };\n\n  const updateTime = () => {\n    setTimer(\n      setTimeout(() => {\n        if (timeLeft > 1) {\n          setTimeLeft(timeLeft - 1);\n        } else {\n          nextTurn(true);\n        }\n      }, 1000)\n    );\n  };\n\n  const start = () => {\n    playBtnSound();\n    setStarted(true);\n    updateTime();\n  };\n\n  const nextTurn = (removeCurrent: boolean) => {\n    playBtnSound();\n    clearTimeout(timer);\n\n    const players = _players.filter((player: Player) =>\n      removeCurrent ? !player.isPlayersTurn : true\n    );\n\n    if (players.length === 1) {\n      setTimeout(() => history.push('/scoreboard'), 3000);\n    }\n\n    const currentTurnIndex = players.findIndex(\n      (player: Player) => player.isPlayersTurn\n    );\n    const nextTurnIndex =\n      currentTurnIndex === players.length - 1 ? 0 : currentTurnIndex + 1;\n\n    _setPlayers(\n      players.map((player: Player, idx: number) => ({\n        ...player,\n        isPlayersTurn: nextTurnIndex === idx,\n      }))\n    );\n\n    if (players.length > 1) {\n      setTimeLeft(10);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"round-and-round animate__animated animate__rotateIn\">\n        <h1>It's Round and round time!</h1>\n        <p>\n          Everyone gets 10 seconds to come up with an answer for a random theme,\n          for example \"Name a movie from the 90s\". Press NEXT when a player\n          answers successfully and the turn will go to the next player. If a\n          player can't come up with an answer within 10 seconds the player gets\n          eliminated. The last player that remains gets 3 points!\n        </p>\n        <button className=\"btn btn-outline-light\" onClick={() => handleClick()}>\n          Show theme and begin!\n        </button>\n      </div>\n      {showTheme && (\n        <div className=\"theme-wrapper\">\n          <h3>\n            {theme.description}{' '}\n            {theme.randomizeLetter && (\n              <span className=\"font-weight-bold\">\n                {randomLetter.toLocaleUpperCase()}\n              </span>\n            )}\n          </h3>\n          <hr></hr>\n          {started ? (\n            <div>\n              <h3>{timeLeft}</h3>\n              <button\n                className=\"btn btn-primary btn-next w-100 p-4 mt-4\"\n                onClick={() => nextTurn(false)}\n                disabled={!(timeLeft < 10)}\n              >\n                <h1 className=\"text-uppercase\">\n                  {_players.length > 1\n                    ? _players.filter(\n                        (player: Player) => player.isPlayersTurn\n                      )[0]?.name\n                    : _players[0]?.name + ' wins!'}\n                </h1>\n              </button>\n            </div>\n          ) : (\n            <button className=\"btn btn-outline-light\" onClick={() => start()}>\n              Start!\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useHistory } from 'react-router-dom';\nimport { Direction, Player } from '../../interfaces/interfaces';\n\nexport default function Scoreboard({\n  players,\n  setPlayers,\n  direction,\n}: {\n  players: Player[];\n  setPlayers: any;\n  direction: Direction;\n}) {\n  const history = useHistory();\n\n  const handleNextRoundClick = () => {\n    if (Math.random() > 0.05) {\n      let _players = setNextTurn(players, direction);\n      _players = reducePlayerPerks(_players);\n      setPlayers(_players);\n      history.push('/show-turn');\n    } else {\n      history.push('/round-and-round');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Scoreboard</h2>\n      <table className=\"table text-white\">\n        <tbody>\n          {[...players]\n            .sort((a: Player, b: Player) => b.points - a.points)\n            .map((player: Player, idx: number) => (\n              <tr\n                key={idx}\n                className={\n                  player.isPlayersTurn ? 'animate__animated animate__flash' : ''\n                }\n              >\n                <td className=\"text-uppercase\">\n                  {idx + 1}. {player.name}\n                </td>\n                <td className=\"text-right\">{player.points}p</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <button\n        onClick={() => handleNextRoundClick()}\n        className=\"btn btn-primary\"\n      >\n        Next round!\n      </button>\n    </div>\n  );\n}\n\nexport const setNextTurn = (players: Player[], direction: Direction) => {\n  const currentPlayerIndex = players.findIndex(\n    (player) => player.isPlayersTurn\n  );\n\n  let nextIndex = 0;\n  const isFirstPlayer = currentPlayerIndex === 0;\n  const isLastPlayer = currentPlayerIndex === players.length - 1;\n  if (direction === 1) {\n    nextIndex = isLastPlayer ? 0 : currentPlayerIndex + direction;\n  } else {\n    nextIndex = isFirstPlayer\n      ? players.length - 1\n      : currentPlayerIndex + direction;\n  }\n\n  return players.map((player, idx) => ({\n    ...player,\n    isPlayersTurn: nextIndex === idx,\n  }));\n};\n\nconst reducePlayerPerks = (players: Player[]) => {\n  return players.map((player: any) =>\n    player.isPlayersTurn\n      ? {\n          ...player,\n          perks: Object.keys(player.perks).reduce(\n            (prev, cur) =>\n              player.perks[cur] > 0\n                ? { ...prev, [cur]: player.perks[cur] - 1 }\n                : prev,\n            { ...player.perks }\n          ),\n        }\n      : player\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Category, Player } from '../../interfaces/interfaces';\nimport './SelectCategory.css';\n\nexport default function SelectCategory({\n  currentPlayer,\n  setCurrentCategory,\n  categories,\n  play,\n}: {\n  currentPlayer: Player;\n  setCurrentCategory: any;\n  setCurrentQuestion: any,\n  categories: Category[];\n  play: any;\n}) {\n  const [activeCategory, setActiveCategory] = useState({\n    id: 0,\n    identifier: '',\n    name: '',\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    if (categories.length > 0 && currentPlayer.perks.freedomOfChoice === 0) {\n      randomizeCategory();\n    }\n  }, [categories]);\n\n  const randomizeCategory = () => {\n    let count = 0;\n    let prevRandomIndex: any;\n    const interval = setInterval(() => {\n      let randomIndex = Math.floor(Math.random() * categories.length);\n      while (randomIndex === prevRandomIndex) {\n        randomIndex = Math.floor(Math.random() * categories.length);\n      }\n      setActiveCategory(categories[randomIndex]);\n      prevRandomIndex = randomIndex;\n      count++;\n      if (count === 15) {\n        clearInterval(interval);\n        setCurrentCategory(categories[randomIndex]);\n        setTimeout(() => history.push('/question'), 2000);\n      }\n      play();\n    }, 200);\n  };\n\n  const handleClick = (category: Category) => {\n    if (currentPlayer.perks.freedomOfChoice > 0) {\n      setCurrentCategory(category);\n      history.push('/question');\n    }\n  };\n\n  return (\n    <div className=\"text-center\">\n      <div className=\"mb-4\">\n        <h1 className=\"mb-0 text-uppercase\">\n          {currentPlayer.name}\n        </h1>\n        <div>\"{currentPlayer.description}\"</div>\n        <div>({currentPlayer.points} points)</div>\n        {currentPlayer.perks.freedomOfChoice > 0 && (\n          <div>\n            Freedom Of Choice left: {currentPlayer.perks.freedomOfChoice}\n          </div>\n        )}\n      </div>\n      <div className=\"row\">\n        {categories.map((item: Category, idx: number) => (\n          <div className=\"col-6 p-1\" key={idx}>\n            <div\n              onClick={() => handleClick(item)}\n              className={\n                'category text-center ' +\n                item.identifier +\n                (item.name === activeCategory?.name ? ' active' : '')\n              }\n            >\n              {item.name}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player } from '../../interfaces/interfaces';\nimport './ShowTurn.css';\n\nexport default function ShowTurn({ currentPlayer }: { currentPlayer: Player }) {\n  const history = useHistory();\n\n  useEffect(() => {\n    setTimeout(() => {\n      history.push(Math.random() < 0.25 ? '/perks' : '/select-category');\n    }, 3000);\n  }, []);\n\n  return (\n    <div className=\"show-turn-wrapper\">\n      <div className=\"w-100\">\n        <h1 className=\"text-uppercase\">{currentPlayer.name}</h1>\n        <h3>\"{currentPlayer.description}\"</h3>\n        <hr></hr>\n        <h2>You're next!</h2>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport api from '../../api/Api';\nimport { Category, Question } from '../../interfaces/interfaces';\n\nexport const validateForm = ({ categoryId, question, answer }: any) => {\n  if (categoryId.length === 0) {\n    return false;\n  }\n  if (question.length < 10) {\n    return false;\n  }\n  if (answer.length === 0) {\n    return false;\n  }\n  return true;\n};\n\nconst defaultFormValues = {\n  id: null,\n  categoryId: 1,\n  question: '',\n  answer: '',\n};\n\nexport default function AddQuestion({\n  categories,\n  setAllQuestions,\n  showModal,\n  setShowModal,\n  question,\n}: any) {\n  const [formData, setFormData] = useState<Question>(defaultFormValues);\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  useEffect(() => {\n    setIsFormValid(validateForm(formData));\n  }, [formData]);\n\n  useEffect(() => {\n    setFormData(question || defaultFormValues);\n  }, [showModal, question]);\n\n  const handleFormChange = ({ name, value }: any) => {\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleClose = () => setShowModal(false);\n\n  const handleAddQuestionClick = () => {\n    api\n      .addQuestion(formData)\n      .then(() => {\n        setAllQuestions(formData);\n        setFormData({ ...formData, question: '', answer: '' });\n      })\n      .catch((e) => console.log(e));\n  };\n\n  const handleSaveQuestionClick = () => {\n    api\n      .saveQuestion(formData)\n      .then(() => {\n        setAllQuestions(formData);\n        setFormData({ ...formData, question: '', answer: '' });\n        setShowModal(false);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  return (\n    <div>\n      <Modal className=\"text-dark\" show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{question ? 'Edit ' : 'Add '}question</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            Select a category and fill out the form in order to submit a\n            question. Your question will be reviewed by an administrator before\n            it gets added to the app. Thanks for making the game better! &lt;3\n          </p>\n          <div className=\"form-group\">\n            <label>Category</label>\n            <select\n              className=\"form-control\"\n              name=\"categoryId\"\n              value={formData.categoryId}\n              onChange={(e) => handleFormChange(e.target)}\n            >\n              {categories.map((category: Category, idx: number) => (\n                <option value={category.id} key={idx}>\n                  {category.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Question</label>\n            <textarea\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"question\"\n              value={formData.question}\n              rows={2}\n            ></textarea>\n          </div>\n          <div className=\"form-group\">\n            <label>Answer</label>\n            <input\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"answer\"\n              value={formData.answer}\n            ></input>\n          </div>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={\n              question ? handleSaveQuestionClick : handleAddQuestionClick\n            }\n            disabled={!isFormValid}\n          >\n            {question ? 'Save ' : 'Add '}question\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport AddQuestion from '../addQuestion/AddQuestion';\nimport api from '../../api/Api';\nimport { Category, Question } from '../../interfaces/interfaces';\n\nconst filterQuestions = (\n  questions: any,\n  filterString: string,\n  categoryId: number\n) => {\n  return questions.filter(\n    (question: any) =>\n      (question?.question?.toLowerCase().includes(filterString) ||\n        question?.answer?.toLowerCase().includes(filterString)) &&\n      (categoryId === 0 || question?.categoryId === categoryId)\n  );\n};\n\nexport default function ViewQuestions({\n  categories,\n}: {\n  categories: Category[];\n}) {\n  const [allQuestions, setAllQuestions] = useState<Question[]>([]);\n  const [questions, setQuestions] = useState([]);\n  const [filterString, setFilterString] = useState('');\n  const [categoryId, setCategoryId] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState<\n    Question | undefined\n  >(undefined);\n\n  useEffect(() => {\n    api.getAllQuestions().then((res) => {\n      setAllQuestions(res.data.questions);\n      setQuestions(res.data.questions);\n    });\n  }, []);\n\n  const handleInputChange = (filterString: string) => {\n    setFilterString(filterString.toLowerCase());\n    setQuestions(\n      filterQuestions(allQuestions, filterString.toLowerCase(), categoryId)\n    );\n  };\n\n  const handleSelectCategoryChange = (categoryId: string) => {\n    setCategoryId(Number(categoryId));\n    setQuestions(\n      filterQuestions(allQuestions, filterString, Number(categoryId))\n    );\n  };\n\n  const handleAddQuestionClick = () => {\n    setSelectedQuestion(undefined);\n    setShowModal(true);\n  };\n\n  const handleEditModalClick = (question: Question) => {\n    setSelectedQuestion(question);\n    setShowModal(true);\n  };\n\n  return (\n    <div>\n      <h1 className=\"mb-4\">Questions</h1>\n      <div className=\"row mb-4\">\n        <div className=\"col-12 col-sm-4\">\n          <div className=\"form-group\">\n            <label>Category</label>\n            <select\n              className=\"form-control\"\n              onChange={(e) => handleSelectCategoryChange(e.target.value)}\n            >\n              <option value=\"0\">All categories</option>\n              {categories.map((category) => (\n                <option value={category.id}>{category.name}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"col-12 col-sm-4\">\n          <div className=\"form-group\">\n            <label>Filter term</label>\n            <input\n              className=\"form-control\"\n              onChange={(e) => handleInputChange(e.target.value)}\n            ></input>\n          </div>\n        </div>\n        <div className=\"col-12 col-sm-4\">\n          <div className=\"form-group\">\n            <label className=\"d-none d-sm-block\">&nbsp;</label>\n            <button\n              className=\"btn btn-outline-light w-100\"\n              onClick={handleAddQuestionClick}\n            >\n              Add Question\n            </button>\n          </div>\n        </div>\n      </div>\n      <p>{questions.length} questions</p>\n      {questions.length > 0 && (\n        <table className=\"table text-white table-dark table-hover\">\n          <thead>\n            <tr>\n              <th>Question</th>\n              <th>Answer</th>\n              <th>Tags</th>\n            </tr>\n          </thead>\n          <tbody>\n            {questions.map((question: Question) => (\n              <tr className=\"clickable\" onClick={() => handleEditModalClick(question)}>\n                <td>{question.question}</td>\n                <td>{question.answer}</td>\n                <td>{question.tags}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      <AddQuestion\n        categories={categories}\n        question={selectedQuestion}\n        showModal={showModal}\n        setShowModal={(showModal: boolean) => setShowModal(showModal)}\n        setAllQuestions={(question: Question) =>\n          setAllQuestions([...allQuestions, question])\n        }\n      ></AddQuestion>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/robots.8d72ac60.mp3\";","export default __webpack_public_path__ + \"static/media/button.6be18c19.mp3\";","export default __webpack_public_path__ + \"static/media/goodPerk.48ebac9f.mp3\";","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport api from './../../api/Api';\nimport Joi from 'joi';\n\nexport default function Register() {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordRepeat: '',\n  });\n  const [showModal, setShowModal] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const schema = Joi.object({\n    username: Joi.string().max(50).required(),\n    password: Joi.string().min(6).max(50).required(),\n    email: Joi.string().required().email({ tlds: false }),\n    passwordRepeat: Joi.ref('password'),\n  });\n\n  const handleRegisterClick = () => {\n    const { error } = schema.validate(formData);\n\n    if (!error) {\n      api\n        .addUser(formData)\n        .then(() => 'user added!')\n        .catch((e) => console.log(e));\n    } else {\n      setErrorMsg(error.message);\n    }\n  };\n\n  const handleFormChange = ({ name, value }: any) => {\n    const newFormData = { ...formData, [name]: value };\n    setFormData(newFormData);\n  };\n\n  return (\n    <div>\n      <button className=\"btn btn-outline-light w-100\" onClick={openModal}>\n        Register\n      </button>\n      <Modal className=\"text-dark\" show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Register</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p>\n            Fill out the form and click on Register. A confirmation will be sent\n            to your email.\n          </p>\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"username\"\n              value={formData.username}\n            ></input>\n          </div>\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"email\"\n              value={formData.email}\n            ></input>\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"password\"\n              value={formData.password}\n            ></input>\n          </div>\n          <div className=\"form-group\">\n            <label>Repeat password</label>\n            <input\n              type=\"password\"\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"passwordRepeat\"\n              value={formData.passwordRepeat}\n            ></input>\n          </div>\n          {errorMsg.length > 0 && (\n            <div className=\"alert alert-danger alert-icon\">{errorMsg}</div>\n          )}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={handleRegisterClick}\n          >\n            Register\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Register from './Register';\nimport { useHistory } from 'react-router-dom';\nimport api from './../../api/Api';\n\nexport default function Login({ setUser }: any) {\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n  });\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  const handleLoginClick = () => {\n    console.log('login!');\n    api\n      .login(formData)\n      .then((res) => {\n        setUser(res.data);\n        localStorage.setItem('accessToken', res.data.accessToken);\n        history.push('/home');\n      })\n      .catch((e) => setError(e.response.data));\n  };\n\n  const handleFormChange = ({ name, value }: any) => {\n    setFormData({ ...formData, [name]: value });\n  };\n\n  return (\n    <div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-12 col-sm-6 col-md-4 pt-0 pt-sm-5\">\n          <h1>Login</h1>\n          <p>Login below to start playing Quizmageddon!</p>\n\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input\n              className=\"form-control\"\n              name=\"username\"\n              onChange={(e) => handleFormChange(e.target)}\n            ></input>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              onChange={(e) => handleFormChange(e.target)}\n            ></input>\n          </div>\n          {error && <div className=\"alert alert-danger\">{error}</div>}\n          <hr />\n          <button\n            className=\"btn btn-outline-light w-100 mb-4\"\n            onClick={handleLoginClick}\n          >\n            Login\n          </button>\n          <Register></Register>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faAngleDoubleUp, faSync } from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport { MemoryRouter, Route, Switch } from 'react-router-dom';\nimport useSound from 'use-sound';\nimport './App.css';\nimport AddPlayers from './components/addPlayers/AddPlayers';\nimport Home from './components/home/Home';\nimport Perks from './components/perks/Perks';\nimport Question from './components/question/Question';\nimport RoundAndRound from './components/roundAndRound/RoundAndRound';\nimport Scoreboard from './components/scoreboard/Scoreboard';\nimport SelectCategory from './components/selectCategory/SelectCategory';\nimport ShowTurn from './components/showTurn/ShowTurn';\nimport ViewQuestions from './components/viewQuestions/ViewQuestions';\nimport sound from './sounds/robots.mp3';\nimport soundButton from './sounds/button.mp3';\nimport goodPerk from './sounds/goodPerk.mp3';\nimport Login from './components/login/Login';\n\nlibrary.add(faSync, faAngleDoubleUp);\n\nfunction App() {\n  const [players, setPlayers] = useState([]);\n  const [questions, setQuestions] = useState({});\n  const [categories, setCategories] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [themes, setThemes] = useState({});\n  const [direction, setDirection] = useState(1);\n  const [user, setUser] = useState({});\n  const [play] = useSound(sound, { volume: 0.25 });\n  const [playBtnSound] = useSound(soundButton, { volume: 0.25 });\n  const [playGoodPerkSound] = useSound(goodPerk, { volume: 0.25 });\n\n  const _setCurrentQuestion = (category) => {\n    const questionsByCategory = questions.filter(\n      (question) => question.categoryId === category.id\n    );\n    const numOfQuestionsInCategory = questionsByCategory.length;\n    const randomIndex = Math.floor(Math.random() * numOfQuestionsInCategory);\n    const randomQuestion = questionsByCategory[randomIndex];\n    setQuestions(\n      questions.filter((question) => question.id !== randomQuestion.id)\n    );\n    setCurrentQuestion({ ...randomQuestion, category: category.identifier });\n  };\n\n  return (\n    <div className=\"App\" onClick={(e) => console.log(e.target)}>\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login setUser={(user) => setUser(user)}></Login>\n          </Route>\n          <Route path=\"/home\">\n            <Home\n              user={user}\n              setCategories={(categories) => setCategories(categories)}\n              setQuestions={(questions) => setQuestions(questions)}\n              setThemes={(themes) => setThemes(themes)}\n            ></Home>\n          </Route>\n          <Route path=\"/add-players\">\n            <AddPlayers\n              players={players}\n              playBtnSound={playBtnSound}\n              setPlayers={(players) => setPlayers(players)}\n            ></AddPlayers>\n          </Route>\n          <Route path=\"/show-turn\">\n            <ShowTurn\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n            ></ShowTurn>\n          </Route>\n          <Route path=\"/perks\">\n            <Perks\n              players={players}\n              playGoodPerkSound={playGoodPerkSound}\n              setPlayers={(players) => setPlayers(players)}\n              setDirection={() => setDirection(direction * -1)}\n            ></Perks>\n          </Route>\n          <Route path=\"/round-and-round\">\n            <RoundAndRound\n              players={players}\n              themes={themes}\n              playGoodPerkSound={playGoodPerkSound}\n              playBtnSound={playBtnSound}\n              setPlayers={(players) => setPlayers(players)}\n            ></RoundAndRound>\n          </Route>\n          <Route path=\"/select-category\">\n            <SelectCategory\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n              categories={categories}\n              play={play}\n              setCurrentCategory={(category) => {\n                _setCurrentQuestion(category);\n              }}\n            ></SelectCategory>\n          </Route>\n          <Route path=\"/question\">\n            <Question\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n              currentQuestion={currentQuestion}\n              players={players}\n              playBtnSound={playBtnSound}\n              setPlayers={(players) => setPlayers(players)}\n            ></Question>\n          </Route>\n          <Route path=\"/scoreboard\">\n            <Scoreboard\n              players={players}\n              direction={direction}\n              setPlayers={(players) => setPlayers(players)}\n            ></Scoreboard>\n          </Route>\n          <Route path=\"/admin/questions\">\n            <ViewQuestions categories={categories}></ViewQuestions>\n          </Route>\n        </Switch>\n      </MemoryRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'animate.css/animate.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}