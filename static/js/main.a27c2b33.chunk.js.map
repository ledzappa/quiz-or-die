{"version":3,"sources":["api/Api.js","components/addPlayers/AddPlayers.js","components/addQuestion/AddQuestion.js","components/home/Home.js","components/perks/Perks.js","components/question/Question.js","components/roundAndRound/RoundAndRound.js","components/scoreboard/Scoreboard.js","components/selectCategory/SelectCategory.js","components/showTurn/ShowTurn.js","sounds/robots.mp3","App.js","reportWebVitals.js","index.js"],"names":["api","getCategories","axios","get","getPlayerDescriptionWords","getQuestions","getRoundAndRoundThemes","addQuestion","formData","post","AddPlayers","players","setPlayers","useState","playerInput","setPlayerInput","playerWords","setPlayerWords","history","useHistory","useEffect","then","res","data","addPlayer","name","description","getRandomDescription","points","isPlayersTurn","perks","freedomOfChoice","doubleUp","startGame","randomPlayer","Math","floor","random","length","map","player","idx","randomizeFirstTurn","push","nounsLength","nouns","randomNoun","noun","adjectivesLength","adjectives","randomAdjective","adjective","className","type","value","onKeyPress","e","key","onChange","target","onClick","filter","item","i","removePlayer","disabled","AddQuestion","categories","category","question","answer","setFormData","isFormValid","setIsFormValid","validateForm","handleFormChange","console","log","id","rows","catch","Home","playerPerks","icon","globalPerks","Perks","setDirection","perk","setPerk","randomizePerk","randomPerkIndex","handlePerk","updatePlayerPerks","perkName","count","perkId","Question","currentQuestion","updatePlayerPoints","showAnswer","setShowAnswer","timeRemaining","setTimeRemaining","timer","setTimer","updateTime","clearTimeout","setTimeout","handleTimeout","RoundAndRound","themes","theme","setTheme","showTheme","setShowTheme","started","setStarted","timeLeft","setTimeLeft","randomLetter","setRandomLetter","_players","_setPlayers","getRandomLetter","letters","split","nextTurn","removeCurrent","currentTurnIndex","findIndex","nextTurnIndex","randomizeLetter","toLocaleUpperCase","Scoreboard","direction","getNextTurnIndex","currentPlayerIndex","isFirstPlayer","isLastPlayer","setNextTurn","index","reducePlayerPerks","Object","keys","reduce","prev","cur","handleNextRoundClick","SelectCategory","currentPlayer","setCurrentCategory","play","activeCategory","setActiveCategory","randomizeCategory","prevRandomIndex","interval","setInterval","randomIndex","clearInterval","cssClass","ShowTurn","handleClick","library","add","faSync","faAngleDoubleUp","App","questions","setQuestions","setCategories","setCurrentQuestion","setThemes","useSound","sound","volume","exact","path","numOfQuestionsInCategory","randomQuestion","_setCurrentQuestion","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a27c2b33.chunk.js","sourcesContent":["import axios from 'axios';\nconst mocks = true;\n\nconst api = {\n  getCategories: () =>\n    axios.get(mocks ? 'mocks/categories.json' : '/api/categories'),\n  getPlayerDescriptionWords: () =>\n    axios.get(\n      mocks\n        ? 'mocks/playerDescriptionWords.json'\n        : '/api/playerDescriptionWords'\n    ),\n  getQuestions: () =>\n    axios.get(mocks ? 'mocks/questions.json' : '/api/questions'),\n  getRoundAndRoundThemes: () =>\n    axios.get(mocks ? 'mocks/roundAndRound.json' : '/api/round-and-round'),\n  addQuestion: (formData) => axios.post('/api/questions', formData),\n};\n\nexport default api;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../api/Api';\nimport './AddPlayers.css';\n\nexport default function AddPlayers({ players, setPlayers }) {\n  const [playerInput, setPlayerInput] = useState('');\n  const [playerWords, setPlayerWords] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    api.getPlayerDescriptionWords().then((res) => setPlayerWords(res.data));\n  }, []);\n\n  const addPlayer = (name) => {\n    setPlayers([\n      ...players,\n      {\n        name,\n        description: getRandomDescription(),\n        points: 0,\n        isPlayersTurn: false,\n        perks: { freedomOfChoice: 0, doubleUp: 0 },\n      },\n    ]);\n    setPlayerInput('');\n  };\n\n  const removePlayer = (idx) => {\n    setPlayers(players.filter((item, i) => idx !== i));\n  };\n\n  const randomizeFirstTurn = () => {\n    const randomPlayer = Math.floor(Math.random() * players.length);\n    setPlayers(\n      players.map((player, idx) => {\n        if (randomPlayer === idx) {\n          return { ...player, isPlayersTurn: true };\n        } else {\n          return player;\n        }\n      })\n    );\n  };\n\n  const startGame = () => {\n    randomizeFirstTurn();\n    history.push('/show-turn');\n  };\n\n  const handlePlayerInputChange = (value) => setPlayerInput(value);\n\n  const getRandomDescription = () => {\n    const nounsLength = playerWords.nouns.length;\n    const randomNoun = Math.floor(Math.random() * nounsLength);\n    const noun = playerWords.nouns[randomNoun];\n    const adjectivesLength = playerWords.adjectives.length;\n    const randomAdjective = Math.floor(Math.random() * adjectivesLength);\n    const adjective = playerWords.adjectives[randomAdjective];\n    return `The ${adjective} ${noun}`;\n  };\n\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-12 col-sm-6 col-lg-6 col-xl-4\">\n        <h1>Add players</h1>\n        <label>Name:</label>\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={playerInput}\n            onKeyPress={(e) => e.key === 'Enter' && addPlayer(playerInput)}\n            onChange={(e) => handlePlayerInputChange(e.target.value)}\n          />\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => addPlayer(playerInput)}\n          >\n            Add\n          </button>\n        </div>\n        {players.map((player, idx) => (\n          <div\n            className=\"added-player\"\n            key={idx}\n            onClick={() => removePlayer(idx)}\n          >\n            {idx + 1}.{' '}\n            <span className=\"font-weight-bold text-uppercase\">\n              {player.name}\n            </span>{' '}\n            - {player.description}\n          </div>\n        ))}\n        <hr />\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => startGame()}\n          disabled={players.length < 2}\n        >\n          Start Game!\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport api from '../../api/Api';\n\nexport default function AddQuestion({ categories }) {\n  const [formData, setFormData] = useState({\n    category: '',\n    question: '',\n    answer: '',\n  });\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  useEffect(() => {\n    setIsFormValid(validateForm(formData));\n  }, [formData]);\n\n  const handleFormChange = ({ name, value }) => {\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const validateForm = ({ category, question, answer }) => {\n    console.log(answer);\n    if (category.length === 0) {\n      return false;\n    }\n    if (question.length < 10) {\n      return false;\n    }\n    if (answer.length === 0) {\n      return false;\n    }\n    return true;\n  };\n\n  const submitQuestion = () => {\n    console.log(formData);\n    api\n      .addQuestion(formData)\n      .then(() => console.log('usccess'))\n      .catch(() => console.log('error'));\n  };\n\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-12 col-sm-8 col-md-6\">\n        <h1>Submit question</h1>\n        <p>\n          Select a category and fill out the form in order to submit a question.\n          Your question will be reviewed by an administrator before it gets\n          added to the app. Thanks for making the game better! &lt;3\n        </p>\n        <form>\n          <div className=\"form-group\">\n            <label>Category</label>\n            <select\n              className=\"form-control\"\n              name=\"category\"\n              onChange={(e) => handleFormChange(e.target)}\n            >\n              {categories.map((category, idx) => (\n                <option value={category.id} key={idx}>\n                  {category.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Question</label>\n            <textarea\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"question\"\n              value={formData.question}\n              rows=\"2\"\n            ></textarea>\n          </div>\n          <div className=\"form-group\">\n            <label>Answer</label>\n            <input\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"answer\"\n              value={formData.answer}\n            ></input>\n          </div>\n          <hr />\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() => submitQuestion()}\n            disabled={!isFormValid}\n          >\n            Submit question\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Home() {\n  const history = useHistory();\n  return (\n    <div className=\"text-center\">\n      <h1>Quizmageddon</h1>\n      <p>\n        Welcome to quizmageddon - the best quiz game ever created by men. Start\n        the game by adding players!\n      </p>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => history.push('/add-players')}\n      >\n        Add players\n      </button>\n      <button\n        className=\"btn btn-outline-light\"\n        onClick={() => history.push('/add-question')}\n      >\n        Add question\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Perks.css';\n\nconst playerPerks = [\n  {\n    id: 'double-up',\n    name: 'Double up!',\n    description: 'You get 2 points for a correct answer on the next question!',\n    icon: 'angle-double-up',\n  },\n  {\n    id: 'freedom-of-choice',\n    name: 'Freedom of choice!',\n    description: 'Chose your category for the next 3 rounds!',\n  },\n  /*{\n    id: 'poisoned',\n    name: 'Poisoned!',\n    description:\n      'You will lose one point for every wrong answer (active 3 rounds)',\n  },*/\n];\n\nconst globalPerks = [\n  {\n    id: 'robin-hood',\n    name: 'Robin Hood',\n    description:\n      'The one with the mosts points generously donates two points to the one with the least points',\n  },\n  {\n    id: 'change-direction',\n    name: 'Direction change!',\n    description: 'The direction changes after this turn.',\n    icon: 'sync',\n  },\n  {\n    id: 'landmine',\n    name: 'Landmine!',\n    description: 'BOOM! Everyone loses 1 point',\n  },\n];\n\nexport default function Perks({ setDirection, setPlayers, players }) {\n  const [perk, setPerk] = useState({});\n  const history = useHistory();\n\n  useEffect(() => {\n    randomizePerk();\n  }, []);\n\n  const randomizePerk = () => {\n    const perks = Math.random() < 1 ? playerPerks : globalPerks;\n    const randomPerkIndex = Math.floor(perks.length * Math.random());\n    setPerk(perks[randomPerkIndex]);\n    handlePerk(perks[randomPerkIndex].id);\n  };\n\n  const updatePlayerPerks = (perkName, count) => {\n    setPlayers(\n      players.map((player) =>\n        player.isPlayersTurn\n          ? {\n              ...player,\n              perks: { ...player.perks, [perkName]: count },\n            }\n          : player\n      )\n    );\n  };\n\n  const handlePerk = (perkId) => {\n    switch (perkId) {\n      case 'change-direction':\n        setDirection();\n        break;\n      case 'freedom-of-choice':\n        updatePlayerPerks('freedomOfChoice', 3);\n        break;\n      case 'double-up':\n        updatePlayerPerks('doubleUp', 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div id={perk.id} className=\"perk-wrapper text-center\">\n      <div className=\"pb-5 w-100\">\n        <div className=\"perk-icon animate__animated animate__rotateIn\">\n          <FontAwesomeIcon icon={perk.icon} />\n        </div>\n        <h1>{perk.name}</h1>\n        <p>{perk.description}</p>\n        <button\n          className=\"btn btn-outline-light\"\n          onClick={() => history.push('/select-category')}\n        >\n          Continue\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Question({ currentQuestion, updatePlayerPoints }) {\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState(30);\n  const [timer, setTimer] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    updateTime();\n  }, [timeRemaining, showAnswer]);\n\n  const updateTime = () => {\n    if (!showAnswer) {\n      setTimer(\n        setTimeout(() => {\n          if (timeRemaining > 0) {\n            setTimeRemaining(timeRemaining - 1);\n          } else {\n            handleTimeout();\n            clearTimeout(timer);\n          }\n        }, 1000)\n      );\n    } else {\n      clearTimeout(timer);\n    }\n  };\n\n  const handleShowAnswerClick = () => {\n    setShowAnswer(true);\n  };\n\n  const handleTimeout = () => {\n    setTimeout(() => history.push('/scoreboard'), 2000);\n  };\n\n  const rightAnswer = () => {\n    updatePlayerPoints();\n    history.push('/scoreboard');\n  };\n\n  const wrongAnswer = () => {\n    history.push('/scoreboard');\n  };\n\n  return (\n    <div>\n      <div className=\"mb-4\">\n        <h1 className=\"text-capitalize\">{currentQuestion.category}</h1>\n        <p>{currentQuestion.question}</p>\n      </div>\n      {showAnswer ? (\n        <div>\n          <div className=\"font-weight-bold\">Answer:</div>\n          <p>{currentQuestion.answer}</p>\n          <hr />\n          <div className=\"mb-3\">Did you get it?</div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <button\n                className=\"btn btn-success w-100 p-3\"\n                onClick={() => rightAnswer()}\n              >\n                YES\n              </button>\n            </div>\n            <div className=\"col-6\">\n              <button\n                className=\"btn btn-danger w-100 p-3\"\n                onClick={() => wrongAnswer()}\n              >\n                NO\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : timeRemaining > 0 ? (\n        <div className=\"text-center\">\n          <h1 className=\"mb-4\">{timeRemaining}</h1>\n          <button\n            className=\"btn btn-secondary w-100 p-3\"\n            onClick={() => handleShowAnswerClick()}\n          >\n            Show answer\n          </button>\n        </div>\n      ) : (\n        'Whops! You ran out of time!'\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './RoundAndRound.css';\n\nexport default function RoundAndRound({ themes, players }) {\n  const [theme, setTheme] = useState({});\n  const [showTheme, setShowTheme] = useState(false);\n  const [started, setStarted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [timer, setTimer] = useState(null);\n  const [randomLetter, setRandomLetter] = useState('');\n  const [_players, _setPlayers] = useState(players);\n  const history = useHistory();\n\n  useEffect(() => {\n    setTheme(themes[Math.floor(themes.length * Math.random())]);\n    setRandomLetter(getRandomLetter());\n  }, []);\n\n  useEffect(() => {\n    if (started) {\n      updateTime();\n    }\n  }, [timeLeft]);\n\n  const getRandomLetter = () => {\n    const letters = 'abcdefghijklmnoprstuvy'.split('');\n    return letters[Math.floor(Math.random() * letters.length)];\n  };\n\n  const handleClick = () => {\n    setShowTheme(true);\n  };\n\n  const updateTime = () => {\n    setTimer(\n      setTimeout(() => {\n        if (timeLeft > 1) {\n          setTimeLeft(timeLeft - 1);\n        } else {\n          nextTurn(true);\n        }\n      }, 1000)\n    );\n  };\n\n  const start = () => {\n    setStarted(true);\n    updateTime();\n  };\n\n  const nextTurn = (removeCurrent) => {\n    clearTimeout(timer);\n\n    const players = _players.filter((player) =>\n      removeCurrent ? !player.isPlayersTurn : true\n    );\n\n    if (players.length === 1) {\n      setTimeout(() => history.push('/scoreboard'), 3000);\n    }\n\n    const currentTurnIndex = players.findIndex(\n      (player) => player.isPlayersTurn\n    );\n    const nextTurnIndex =\n      currentTurnIndex === players.length - 1 ? 0 : currentTurnIndex + 1;\n\n    _setPlayers(\n      players.map((player, idx) => ({\n        ...player,\n        isPlayersTurn: nextTurnIndex === idx,\n      }))\n    );\n\n    if (players.length > 1) {\n      setTimeLeft(10);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Round and round!</h1>\n      <p>\n        It's round and round time! Everyone gets 10 seconds to come up with an\n        answer for a given theme, for example \"Movies from the 90s\". Tap the\n        screen once you've told your answer and the turn will go over to the\n        next player. The player that remains gets 3 points!\n      </p>\n      <p></p>\n      <button className=\"btn btn-outline-light\" onClick={() => handleClick()}>\n        Show theme and begin!\n      </button>\n      {showTheme && (\n        <div className=\"theme-wrapper\">\n          <h3>\n            {theme.description}{' '}\n            {theme.randomizeLetter && (\n              <span className=\"font-weight-bold\">\n                {randomLetter.toLocaleUpperCase()}\n              </span>\n            )}\n          </h3>\n          <hr></hr>\n          {started ? (\n            <div>\n              <h2>\n                {_players.length > 1\n                  ? _players.filter((player) => player.isPlayersTurn)[0]?.name\n                  : _players[0]?.name + ' wins!'}\n              </h2>\n              <h3>{timeLeft}</h3>\n              <button\n                className=\"btn btn-outline-light w-100 p-4 mt-4\"\n                onClick={() => nextTurn(false)}\n                disabled={!(timeLeft < 10)}\n              >\n                NEXT\n              </button>\n            </div>\n          ) : (\n            <button className=\"btn btn-outline-light\" onClick={() => start()}>\n              Start!\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Scoreboard({ players, setPlayers, direction }) {\n  const history = useHistory();\n\n  const handleNextRoundClick = () => {\n    const nextTurnIndex = getNextTurnIndex(players, direction);\n    let _players = setNextTurn(players, nextTurnIndex);\n    _players = reducePlayerPerks(_players);\n    setPlayers(_players);\n    history.push('/show-turn');\n  };\n\n  const getNextTurnIndex = (players, direction) => {\n    const currentPlayerIndex = players.findIndex(\n      (player) => player.isPlayersTurn\n    );\n\n    let nextPlayerIndex = null;\n    const isFirstPlayer = currentPlayerIndex === 0;\n    const isLastPlayer = currentPlayerIndex === players.length - 1;\n    if (direction === 1) {\n      nextPlayerIndex = isLastPlayer ? 0 : currentPlayerIndex + direction;\n    } else {\n      nextPlayerIndex = isFirstPlayer\n        ? players.length - 1\n        : currentPlayerIndex + direction;\n    }\n\n    return nextPlayerIndex;\n  };\n\n  const setNextTurn = (players, index) => {\n    return players.map((player, idx) => ({\n      ...player,\n      isPlayersTurn: index === idx,\n    }));\n  };\n\n  const reducePlayerPerks = (players) => {\n    return players.map((player) =>\n      player.isPlayersTurn\n        ? {\n            ...player,\n            perks: Object.keys(player.perks).reduce(\n              (prev, cur) =>\n                player.perks[cur] > 0\n                  ? { ...prev, [cur]: player.perks[cur] - 1 }\n                  : prev,\n              { ...player.perks }\n            ),\n          }\n        : player\n    );\n  };\n\n  return (\n    <div>\n      <h2>Scoreboard:</h2>\n      <table className=\"table text-white\">\n        <tbody>\n          {players.map((player, idx) => (\n            <tr\n              key={idx}\n              className={\n                player.isPlayersTurn ? 'animate__animated animate__flash' : ''\n              }\n            >\n              <td>{player.name}</td>\n              <td className=\"text-right\">{player.points}p</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button\n        onClick={() => handleNextRoundClick()}\n        className=\"btn btn-primary\"\n      >\n        Next round!\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './SelectCategory.css';\n\nexport default function SelectCategory({\n  currentPlayer,\n  setCurrentCategory,\n  categories,\n  play,\n}) {\n  const [activeCategory, setActiveCategory] = useState({ name: '' });\n  const history = useHistory();\n\n  useEffect(() => {\n    if (categories.length > 0 && currentPlayer.perks.freedomOfChoice === 0) {\n      randomizeCategory();\n    }\n  }, [categories]);\n\n  const randomizeCategory = () => {\n    let count = 0;\n    let prevRandomIndex;\n    const interval = setInterval(() => {\n      let randomIndex = Math.floor(Math.random() * categories.length);\n      while (randomIndex === prevRandomIndex) {\n        randomIndex = Math.floor(Math.random() * categories.length);\n      }\n      setActiveCategory(categories[randomIndex]);\n      prevRandomIndex = randomIndex;\n      count++;\n      if (count === 15) {\n        clearInterval(interval);\n        setCurrentCategory(activeCategory);\n        setTimeout(() => history.push('/question'), 2000);\n      }\n      play();\n    }, 200);\n  };\n\n  const handleClick = (category) => {\n    if (currentPlayer.perks.freedomOfChoice > 0) {\n      setCurrentCategory(category);\n      history.push('/question');\n    }\n  };\n\n  return (\n    <div className=\"text-center\">\n      <div className=\"mb-4\">\n        <h1 className=\"mb-0 text-uppercase\">{currentPlayer.name}</h1>\n        <div>\"{currentPlayer.description}\"</div>\n        <div>{currentPlayer.perks.freedomOfChoice}</div>\n      </div>\n      <div className=\"row\">\n        {categories.map((item, idx) => (\n          <div className=\"col-6 p-0\" key={idx}>\n            <div\n              onClick={() => handleClick(item)}\n              className={\n                'category text-center ' +\n                item.cssClass +\n                (item.name === activeCategory?.name ? ' active' : '')\n              }\n            >\n              {item.name}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './ShowTurn.css';\n\nexport default function ShowTurn({ currentPlayer }) {\n  const history = useHistory();\n\n  useEffect(() => {\n    setTimeout(() => handleClick(), 3000);\n  }, []);\n\n  const handleClick = () => {\n    const random = Math.random();\n    console.log(random);\n    history.push(\n      random < 0.2\n        ? '/perks'\n        : random < 0.4\n        ? '/round-and-round'\n        : '/select-category'\n    );\n  };\n\n  return (\n    <div className=\"show-turn-wrapper\">\n      <div className=\"w-100\">\n        <h1 className=\"text-uppercase\">{currentPlayer.name}</h1>\n        <h3>\"{currentPlayer.description}\"</h3>\n        <hr></hr>\n        <h2>You're next!</h2>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/robots.8d72ac60.mp3\";","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faAngleDoubleUp, faSync } from '@fortawesome/free-solid-svg-icons';\nimport { useEffect, useState } from 'react';\nimport { MemoryRouter, Route, Switch } from 'react-router-dom';\nimport useSound from 'use-sound';\nimport api from './api/Api';\nimport './App.css';\nimport AddPlayers from './components/addPlayers/AddPlayers';\nimport AddQuestion from './components/addQuestion/AddQuestion';\nimport Home from './components/home/Home';\nimport Perks from './components/perks/Perks';\nimport Question from './components/question/Question';\nimport RoundAndRound from './components/roundAndRound/RoundAndRound';\nimport Scoreboard from './components/scoreboard/Scoreboard';\nimport SelectCategory from './components/selectCategory/SelectCategory';\nimport ShowTurn from './components/showTurn/ShowTurn';\nimport sound from './sounds/robots.mp3';\n\nlibrary.add(faSync, faAngleDoubleUp);\n\nfunction App() {\n  const [players, setPlayers] = useState([]);\n  const [questions, setQuestions] = useState({});\n  const [categories, setCategories] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [themes, setThemes] = useState({});\n  const [direction, setDirection] = useState(1);\n  const [play] = useSound(sound, { volume: 0.25 });\n\n  useEffect(() => {\n    api.getCategories().then((res) => {\n      setCategories(res.data.categories);\n    });\n\n    api.getQuestions().then((res) => {\n      setQuestions(res.data.questions);\n    });\n\n    api.getRoundAndRoundThemes().then((res) => {\n      setThemes(res.data.themes);\n    });\n  }, []);\n\n  const _setCurrentQuestion = (category) => {\n    const numOfQuestionsInCategory = questions[category].length;\n    const randomIndex = Math.floor(Math.random() * numOfQuestionsInCategory);\n    const randomQuestion = questions[category][randomIndex];\n    setCurrentQuestion({ ...randomQuestion, category });\n  };\n\n  const updatePlayerPoints = () => {\n    setPlayers(\n      players.map((player) =>\n        player.isPlayersTurn\n          ? {\n              ...player,\n              points: player.points + (player.perks.doubleUp > 0 ? 2 : 1),\n            }\n          : player\n      )\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home></Home>\n          </Route>\n          <Route path=\"/add-players\">\n            <AddPlayers\n              players={players}\n              setPlayers={(players) => setPlayers(players)}\n            ></AddPlayers>\n          </Route>\n          <Route path=\"/show-turn\">\n            <ShowTurn\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n            ></ShowTurn>\n          </Route>\n          <Route path=\"/perks\">\n            <Perks\n              players={players}\n              setDirection={() => setDirection(direction * -1)}\n              setPlayers={(players) => setPlayers(players)}\n            ></Perks>\n          </Route>\n          <Route path=\"/round-and-round\">\n            <RoundAndRound\n              players={players}\n              themes={themes}\n              setPlayers={(players) => setPlayers(players)}\n            ></RoundAndRound>\n          </Route>\n          <Route path=\"/select-category\">\n            <SelectCategory\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n              categories={categories}\n              play={play}\n              setCurrentCategory={(category) => {\n                _setCurrentQuestion('movies');\n              }}\n            ></SelectCategory>\n          </Route>\n          <Route path=\"/question\">\n            <Question\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n              currentQuestion={currentQuestion}\n              updatePlayerPoints={() => updatePlayerPoints()}\n            ></Question>\n          </Route>\n          <Route path=\"/scoreboard\">\n            <Scoreboard\n              players={players}\n              setPlayers={(players) => setPlayers(players)}\n              direction={direction}\n            ></Scoreboard>\n          </Route>\n          <Route path=\"/add-question\">\n            <AddQuestion categories={categories}></AddQuestion>\n          </Route>\n        </Switch>\n      </MemoryRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'animate.css/animate.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}