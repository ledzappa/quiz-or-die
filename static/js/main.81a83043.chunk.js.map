{"version":3,"sources":["api/Api.js","components/addPlayers/AddPlayers.tsx","components/settings/Settings.tsx","components/home/Home.tsx","components/login/Register.tsx","components/login/Login.tsx","components/minigames/roundAndRound/RoundAndRound.tsx","components/minigames/triggerFinger/TriggerFinger.tsx","components/perks/Perks.tsx","components/question/Question.tsx","components/scoreboard/Scoreboard.tsx","components/selectCategory/SelectCategory.tsx","components/showTurn/ShowTurn.tsx","components/addQuestion/AddQuestion.tsx","components/viewQuestions/ViewQuestions.tsx","sounds/button.mp3","sounds/goodPerk.mp3","sounds/robots.mp3","sounds/countdown2.mp3","sounds/trigger.mp3","sounds/tooearly.mp3","App.js","reportWebVitals.js","index.js"],"names":["api","getCategories","axios","get","getPlayerDescriptionWords","getQuestions","headers","authorization","localStorage","getItem","getAllQuestions","getRoundAndRoundThemes","addQuestion","formData","img","console","log","fd","FormData","Object","keys","forEach","key","append","fetch","method","body","saveQuestion","put","deleteQuestion","delete","addUser","post","login","AddPlayers","players","setPlayers","playBtnSound","useState","playerInput","setPlayerInput","nouns","adjectives","playerWords","setPlayerWords","history","useHistory","useEffect","then","res","data","addPlayer","name","description","getRandomDescription","points","isPlayersTurn","isMiniGameWinner","perks","freedomOfChoice","doubleUp","startGame","randomPlayer","Math","floor","random","length","map","player","idx","randomizeFirstTurn","push","nounsLength","randomNoun","noun","adjectivesLength","randomAdjective","adjective","className","type","value","autoFocus","onKeyPress","e","onChange","target","onClick","icon","filter","_","i","removePlayer","disabled","Settings","categories","showModal","settings","setCategories","setShowModal","setSettings","id","miniGames","handleClose","handleCategoryChange","checked","_categories","category","Number","handleMiniGameChange","enabledMiniGames","Modal","show","onHide","Header","closeButton","Title","Body","pointsToWin","toString","miniGame","includes","max","min","step","probMiniGame","politicallyCorrect","lightMode","Footer","Home","setQuestions","setThemes","user","showSeetingsModal","setShowSettingsModal","questions","question","imgBaseUrl","images","cacheImages","themes","image","Image","src","roleId","Register","username","email","password","passwordRepeat","setFormData","errorMsg","setErrorMsg","schema","Joi","object","string","required","tlds","ref","handleFormChange","newFormData","error","validate","message","catch","Login","setUser","setError","setItem","accessToken","response","RoundAndRound","playGoodPerkSound","randomizeLetter","theme","setTheme","showTheme","setShowTheme","started","setStarted","timeLeft","setTimeLeft","timer","setTimer","randomLetter","setRandomLetter","roundAndRoundPlayers","setRoundAndRoundPlayers","getRandomLetter","updateTime","letters","split","setTimeout","nextTurn","removeCurrent","clearTimeout","_players","currentTurnIndex","findIndex","nextTurnIndex","isWinner","toLocaleUpperCase","playTriggerSound","playTooEarlySound","playCountdownSound","reactionTime","isEliminated","triggerPlayers","setTriggerPlayers","switched","setSwitched","isTriggered","setIsTriggered","elapsedTime","setElapsedTime","switchTime","setSwitchTime","switchDate","setSwitchDate","soundCountDownInterval","setSoundCountDownInterval","fastestTime","setFastestTime","resetState","updateElapsedTime","clearInterval","Date","now","startPlayingCountdownSound","setInterval","undefined","currentPlayer","remainingPlayers","wasTooEarly","isNaN","isFastest","toUpperCase","playerPerks","globalPerks","Perks","setDirection","perk","setPerk","randomizePerk","probPlayerPerk","isRobinHoodEnabled","isChangeDirectionEnabled","updatePlayerPerks","perkName","count","getRobinHoodText","perkId","switchPlayerPoints","activatePerk","maxPoints","minPoints","minAndMaxAreUnique","maxPlayerName","minPlayerName","Question","currentQuestion","showAnswer","setShowAnswer","timeRemaining","setTimeRemaining","handleTimeout","updateCurrentPlayerPoints","replace","alternatives","last","pop","alternativesText","join","extractAlternatives","answer","earnedPoints","rightAnswer","landmine","wrongAnswer","Scoreboard","direction","isMiniGame","setIsMiniGame","winner","setWinner","showWinner","setShowWinner","sort","a","b","shouldAnimatePlayerRow","setNextPlayersTurn","reduceCurrentPlayersPerksByOne","resetMiniGameWinner","handleNextRoundClick","nextIndex","currentPlayerIndex","lastPlayerIndex","reduce","prev","cur","SelectCategory","setCurrentCategory","play","identifier","activeCategory","setActiveCategory","randomizeCategory","prevRandomIndex","interval","randomIndex","item","ShowTurn","probPerk","addedImage","defaultFormValues","categoryId","AddQuestion","setAllQuestions","isFormValid","setIsFormValid","validateForm","_value","rows","files","filterQuestions","filterString","toLowerCase","ViewQuestions","allQuestions","setFilterString","setCategoryId","showOnlyImages","setShowOnlyImages","selectedQuestion","setSelectedQuestion","handleSelectCategoryChange","handleInputChange","handleEditModalClick","tags","library","add","faSync","faAngleDoubleUp","faCog","faTrophy","faHandSparkles","faBomb","faPlus","faCheck","faTimes","faArrowRight","faPlay","faTools","App","soundConfig","volume","setCurrentQuestion","useSound","sound","soundButton","goodPerk","trigger","countdown","tooearly","document","classList","remove","exact","path","questionsByCategory","numOfQuestionsInCategory","randomQuestion","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.81a83043.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst mocks = true;\n\nconst api = {\n  getCategories: () =>\n    axios.get(mocks ? 'mocks/categories.json' : '/api/categories'),\n  getPlayerDescriptionWords: () =>\n    axios.get('mocks/playerDescriptionWords.json'),\n  getQuestions: () =>\n    axios.get(mocks ? 'mocks/questions.json' : '/api/questions', {\n      headers: {\n        authorization: 'Bearer ' + localStorage.getItem('accessToken'),\n      },\n    }),\n  getAllQuestions: () =>\n    axios.get(mocks ? 'mocks/questions.json' : '/api/all-questions', {\n      headers: {\n        authorization: 'Bearer ' + localStorage.getItem('accessToken'),\n      },\n    }),\n  getRoundAndRoundThemes: () =>\n    axios.get(true ? 'mocks/roundAndRound.json' : '/api/round-and-round'),\n  addQuestion: (formData, img) => {\n    console.log(img);\n    const fd = new FormData();\n    Object.keys(formData).forEach((key) => fd.append(key, formData[key]));\n    if (img) {\n      fd.append('img', img, 'img.jpg');\n    }\n    // using fetch because axios refused to set content type to multipart\n    return fetch('/api/questions', {\n      method: 'POST',\n      body: fd,\n    });\n  },\n  saveQuestion: (formData) => axios.put('/api/questions', formData),\n  deleteQuestion: (formData) => axios.delete('/api/questions', formData),\n  addUser: (formData) => axios.post('/api/users', formData),\n  login: (formData) =>\n    mocks ? axios.get('mocks/login.json') : axios.post('/api/login', formData),\n};\n\nexport default api;\n","import { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../api/Api';\nimport { Player } from '../../interfaces/interfaces';\nimport './AddPlayers.css';\n\nexport default function AddPlayers({ players, setPlayers, playBtnSound }: any) {\n  const [playerInput, setPlayerInput] = useState('');\n  const [playerWords, setPlayerWords] = useState({ nouns: [], adjectives: [] });\n  const history = useHistory();\n\n  useEffect(() => {\n    api.getPlayerDescriptionWords().then((res) => setPlayerWords(res.data));\n  }, []);\n\n  const addPlayer = (name: String) => {\n    setPlayers([\n      ...players,\n      {\n        name,\n        description: getRandomDescription(),\n        points: 0,\n        isPlayersTurn: false,\n        isMiniGameWinner: false,\n        perks: { freedomOfChoice: 0, doubleUp: 0 },\n      },\n    ]);\n    setPlayerInput('');\n  };\n\n  const removePlayer = (idx: Number) => {\n    setPlayers(players.filter((_: any, i: Number) => idx !== i));\n  };\n\n  const randomizeFirstTurn = () => {\n    const randomPlayer = Math.floor(Math.random() * players.length);\n    setPlayers(\n      players.map((player: Player, idx: Number) => {\n        if (randomPlayer === idx) {\n          return { ...player, isPlayersTurn: true };\n        } else {\n          return player;\n        }\n      })\n    );\n  };\n\n  const startGame = () => {\n    randomizeFirstTurn();\n    playBtnSound();\n    history.push('/show-turn');\n    // history.push('/trigger-finger');\n  };\n\n  const handlePlayerInputChange = (value: string) => setPlayerInput(value);\n\n  const getRandomDescription = () => {\n    const nounsLength = playerWords.nouns.length;\n    const randomNoun = Math.floor(Math.random() * nounsLength);\n    const noun = playerWords.nouns[randomNoun];\n    const adjectivesLength = playerWords.adjectives.length;\n    const randomAdjective = Math.floor(Math.random() * adjectivesLength);\n    const adjective = playerWords.adjectives[randomAdjective];\n    return `The ${adjective} ${noun}`;\n  };\n\n  const updateDescription = (name: string) => {\n    setPlayers(\n      players.map((player: Player) =>\n        player.name === name\n          ? { ...player, description: getRandomDescription() }\n          : player\n      )\n    );\n  };\n\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-12 col-sm-6 col-lg-6 col-xl-4\">\n        <h2>Add players</h2>\n        <p>Enter a name and press enter or the \"Add\" button.</p>\n        <label>Name</label>\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control add-player\"\n            value={playerInput}\n            autoFocus\n            onKeyPress={(e) => e.key === 'Enter' && addPlayer(playerInput)}\n            onChange={(e) => handlePlayerInputChange(e.target.value)}\n          />\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => addPlayer(playerInput)}\n          >\n            <FontAwesomeIcon icon=\"plus\" />\n          </button>\n        </div>\n        {players.map((player: Player, idx: number) => (\n          <div className=\"added-player-wrapper\" key={idx}>\n            <div\n              className=\"d-inline-block\"\n              onClick={() => updateDescription(player.name)}\n            >\n              <span className=\"font-weight-bold text-uppercase\">\n                {player.name}\n              </span>{' '}\n              <div>{player.description}</div>\n            </div>\n            <FontAwesomeIcon\n              className=\"ml-3 float-right\"\n              icon=\"times\"\n              onClick={() => removePlayer(idx)}\n            />\n          </div>\n        ))}\n        <hr />\n        <button\n          className=\"btn btn-primary w-100 start-game\"\n          onClick={() => startGame()}\n          disabled={players.length < 2}\n        >\n          Start Game!\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Category, Settings as ISettings } from '../../interfaces/interfaces';\n\nexport default function Settings({\n  categories,\n  showModal,\n  settings,\n  setCategories,\n  setShowModal,\n  setSettings,\n}: {\n  categories: Category[];\n  showModal: boolean;\n  settings: ISettings;\n  setShowModal: Function;\n  setCategories: Function;\n  setSettings: Function;\n}) {\n  const [miniGames, setMiniGames] = useState([\n    { id: 'roundAndRound', name: 'Round and Round' },\n    { id: 'triggerFinger', name: 'Trigger Finger' },\n    { id: 'closestWins', name: 'Closest Wins' },\n  ]);\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const handleCategoryChange = ({ target: { checked, name } }: any) => {\n    const _categories = categories.map((category) =>\n      category.id === Number(name)\n        ? { ...category, disabled: !checked }\n        : category\n    );\n    setCategories(_categories);\n  };\n\n  const handleMiniGameChange = ({ target: { checked, name } }: any) => {\n    setSettings({\n      ...settings,\n      enabledMiniGames: checked\n        ? [...settings.enabledMiniGames, name]\n        : settings.enabledMiniGames.filter((id) => id !== name),\n    });\n  };\n\n  const handlePoliticallyCorrectClick = () => {\n    setSettings({\n      ...settings,\n      politicallyCorrect: !settings.politicallyCorrect,\n    });\n  };\n\n  const handlePointsToWinChange = ({ target: { value } }: any) => {\n    setSettings({\n      ...settings,\n      pointsToWin: Number(value),\n    });\n  };\n\n  const handleThemeClick = () => {\n    setSettings({ ...settings, lightMode: !settings.lightMode });\n  };\n\n  const handleMiniGameProbabilityChange = ({ target: { value } }: any) => {\n    setSettings({ ...settings, probMiniGame: value });\n  };\n\n  return (\n    <Modal className=\"text-dark\" show={showModal} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Settings</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <div className=\"form-group\">\n          <h4>Points to Win</h4>\n          <p>Points required to win the game.</p>\n          <select\n            className=\"form-control\"\n            value={settings.pointsToWin}\n            onChange={handlePointsToWinChange}\n          >\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"15\">15</option>\n            <option value=\"20\">20</option>\n            <option value=\"25\">25</option>\n            <option value=\"30\">30</option>\n            <option value=\"35\">35</option>\n            <option value=\"40\">40</option>\n            <option value=\"45\">45</option>\n            <option value=\"50\">50</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <h4>Enabled Categories</h4>\n          {categories.map((category, idx) => (\n            <div className=\"form-check\" key={idx}>\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                name={category.id.toString()}\n                checked={!category.disabled}\n                onChange={handleCategoryChange}\n              />\n              <label className=\"form-check-label\">{category.name}</label>\n            </div>\n          ))}\n        </div>\n        <div className=\"form-group\">\n          <h4>Enabled Minigames</h4>\n          {miniGames.map((miniGame, idx) => (\n            <div className=\"form-check\" key={idx}>\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                name={miniGame.id}\n                checked={settings.enabledMiniGames.includes(miniGame.id)}\n                onChange={handleMiniGameChange}\n              />\n              <label className=\"form-check-label\">{miniGame.name}</label>\n            </div>\n          ))}\n        </div>\n        <div className=\"form-group\">\n          <h4>Minigame probability</h4>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            max=\"0.95\"\n            min=\"0.1\"\n            step=\"0.05\"\n            value={settings.probMiniGame}\n            onChange={handleMiniGameProbabilityChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <h4>Politically correct mode</h4>\n          <p>\n            When activated, R-rated words (such as f***ing) are removed from\n            player descriptions, and adult oriented questions (such as \"What was\n            Ron Jeremys signature trait?\") are removed.\n          </p>\n          <button\n            className={\n              'btn btn-' +\n              (settings.politicallyCorrect ? 'success' : 'secondary')\n            }\n            onClick={handlePoliticallyCorrectClick}\n          >\n            {settings.politicallyCorrect ? 'ON' : 'OFF'}\n          </button>\n        </div>\n        <div className=\"form-group\">\n          <h4>Color theme</h4>\n          <p>Enable light mode</p>\n          <button\n            className={\n              'btn btn-' + (settings.lightMode ? 'success' : 'secondary')\n            }\n            onClick={handleThemeClick}\n          >\n            {settings.lightMode ? 'ON' : 'OFF'}\n          </button>\n        </div>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleClose}>\n          Close\n        </button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport api from '../../api/Api';\nimport { useHistory } from 'react-router-dom';\nimport Settings from '../settings/Settings';\nimport { Question } from '../../interfaces/interfaces';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Home.css';\n\nexport default function Home({\n  categories,\n  settings,\n  setCategories,\n  setQuestions,\n  setThemes,\n  setSettings,\n  user,\n}: any) {\n  const history = useHistory();\n  const [showSeetingsModal, setShowSettingsModal] = useState(false);\n\n  useEffect(() => {\n    api.getCategories().then((res) => {\n      setCategories(res.data.categories);\n    });\n\n    api.getQuestions().then((res) => {\n      const questions = res.data.questions.map((question: Question) => ({\n        ...question,\n        img: question.img ? settings.imgBaseUrl + question.img : null,\n      }));\n\n      const images = questions\n        .filter((question: Question) => !!question.img)\n        .map((question: Question) => question.img);\n\n      cacheImages(images);\n      setQuestions(questions);\n    });\n\n    api.getRoundAndRoundThemes().then((res) => {\n      setThemes(res.data.themes);\n    });\n  }, []);\n\n  const cacheImages = (images: string[]) => {\n    images.forEach((image) => {\n      const img = new Image();\n      img.src = image;\n    });\n  };\n\n  const handleSettingsClick = () => {\n    setShowSettingsModal(true);\n  };\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12 text-right\">\n          {user.roleId === 0 && (\n            <button\n              className=\"btn btn-secondary\"\n              onClick={() => history.push('/admin/questions')}\n            >\n              <FontAwesomeIcon className=\"mr-2\" icon=\"tools\" />\n              Admin\n            </button>\n          )}\n        </div>\n      </div>\n      <div className=\"text-center\">\n        <h1>Quizmageddon</h1>\n        <p className=\"mb-5\">\n          Welcome to quizmageddon - the best quiz game ever created by men.\n          Start the game by adding players!\n        </p>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12 text-center\">\n            <div className=\"button-container d-inline-block\">\n              <button\n                className=\"btn btn-primary play-quizmageddon mb-3 w-100 btn-lg\"\n                onClick={() => history.push('/add-players')}\n              >\n                <FontAwesomeIcon className=\"mr-2\" icon=\"play\" />\n                Play Quizmageddon\n              </button>\n              <button\n                className=\"btn btn-secondary w-100 btn-lg\"\n                onClick={handleSettingsClick}\n              >\n                <FontAwesomeIcon className=\"mr-2\" icon=\"cog\" />\n                Settings\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Settings\n        categories={categories}\n        setCategories={setCategories}\n        showModal={showSeetingsModal}\n        settings={settings}\n        setSettings={setSettings}\n        setShowModal={setShowSettingsModal}\n      ></Settings>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport api from './../../api/Api';\nimport Joi from 'joi';\n\nexport default function Register() {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordRepeat: '',\n  });\n  const [showModal, setShowModal] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const schema = Joi.object({\n    username: Joi.string().max(50).required(),\n    password: Joi.string().min(6).max(50).required(),\n    email: Joi.string().required().email({ tlds: false }),\n    passwordRepeat: Joi.ref('password'),\n  });\n\n  const handleRegisterClick = () => {\n    const { error } = schema.validate(formData);\n\n    if (!error) {\n      api\n        .addUser(formData)\n        .then(() => 'user added!')\n        .catch((e) => console.log(e));\n    } else {\n      setErrorMsg(error.message);\n    }\n  };\n\n  const handleFormChange = ({ name, value }: any) => {\n    const newFormData = { ...formData, [name]: value };\n    setFormData(newFormData);\n  };\n\n  return (\n    <div>\n      <button className=\"btn btn-outline-light w-100\" onClick={openModal}>\n        Register\n      </button>\n      <Modal className=\"text-dark\" show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Register</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p>\n            Fill out the form and click on Register. A confirmation will be sent\n            to your email.\n          </p>\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"username\"\n              value={formData.username}\n            ></input>\n          </div>\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"email\"\n              value={formData.email}\n            ></input>\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"password\"\n              value={formData.password}\n            ></input>\n          </div>\n          <div className=\"form-group\">\n            <label>Repeat password</label>\n            <input\n              type=\"password\"\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"passwordRepeat\"\n              value={formData.passwordRepeat}\n            ></input>\n          </div>\n          {errorMsg.length > 0 && (\n            <div className=\"alert alert-danger alert-icon\">{errorMsg}</div>\n          )}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={handleRegisterClick}\n          >\n            Register\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Register from './Register';\nimport { useHistory } from 'react-router-dom';\nimport api from './../../api/Api';\n\nexport default function Login({ setUser }: any) {\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n  });\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  const handleLoginClick = () => {\n    api\n      .login(formData)\n      .then((res) => {\n        setUser(res.data);\n        localStorage.setItem('accessToken', res.data.accessToken);\n        history.push('/home');\n      })\n      .catch((e) => setError(e.response.data));\n  };\n\n  const handleFormChange = ({ name, value }: any) => {\n    setFormData({ ...formData, [name]: value });\n  };\n\n  return (\n    <div>\n      <div className=\"row justify-content-center animate__animated animate__fadeIn\">\n        <div className=\"col-12 col-sm-6 col-md-4 pt-0 pt-sm-5\">\n          <h1>Login</h1>\n          <p>Login below to start playing Quizmageddon!</p>\n\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input\n              className=\"form-control username\"\n              name=\"username\"\n              onChange={(e) => handleFormChange(e.target)}\n            ></input>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control password\"\n              onChange={(e) => handleFormChange(e.target)}\n            ></input>\n          </div>\n          {error && <div className=\"alert alert-danger animate__animated animate__flash\">{error}</div>}\n          <hr />\n          <button\n            className=\"btn btn-secondary w-100 mb-4\"\n            onClick={handleLoginClick}\n          >\n            Login\n          </button>\n          <Register></Register>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player, RoundAndRoundTheme } from '../../../interfaces/interfaces';\nimport './RoundAndRound.css';\n\nexport default function RoundAndRound({\n  themes,\n  players,\n  setPlayers,\n  playGoodPerkSound,\n  playBtnSound,\n}: {\n  themes: RoundAndRoundTheme[];\n  players: Player[];\n  setPlayers: any;\n  playGoodPerkSound: any;\n  playBtnSound: any;\n}) {\n  const [theme, setTheme] = useState({\n    description: '',\n    randomizeLetter: false,\n  });\n  const [showTheme, setShowTheme] = useState(false);\n  const [started, setStarted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [timer, setTimer] = useState<any>(null);\n  const [randomLetter, setRandomLetter] = useState('');\n  const [roundAndRoundPlayers, setRoundAndRoundPlayers] = useState(players);\n  const history = useHistory();\n\n  useEffect(() => {\n    playGoodPerkSound();\n    setTheme(themes[Math.floor(themes.length * Math.random())]);\n    setRandomLetter(getRandomLetter());\n  }, []);\n\n  useEffect(() => {\n    if (started) {\n      updateTime();\n    }\n  }, [timeLeft]);\n\n  const getRandomLetter = () => {\n    const letters = 'abcdefghijklmnoprstuvy'.split('');\n    return letters[Math.floor(Math.random() * letters.length)];\n  };\n\n  const handleClick = () => {\n    playBtnSound();\n    setShowTheme(true);\n  };\n\n  const updateTime = () => {\n    setTimer(\n      setTimeout(() => {\n        if (timeLeft > 1) {\n          setTimeLeft(timeLeft - 1);\n        } else {\n          nextTurn(true);\n        }\n      }, 1000)\n    );\n  };\n\n  const start = () => {\n    playBtnSound();\n    setStarted(true);\n    updateTime();\n  };\n\n  const nextTurn = (removeCurrent: boolean) => {\n    playBtnSound();\n    clearTimeout(timer);\n\n    const _players = roundAndRoundPlayers.filter((player: Player) =>\n      removeCurrent ? !player.isPlayersTurn : true\n    );\n\n    if (_players.length === 1) {\n      setPlayers(\n        players.map((player) =>\n          player.name === _players[0].name\n            ? {\n                ...player,\n                points: player.points + 2,\n                isMiniGameWinner: true,\n              }\n            : player\n        )\n      );\n      setTimeout(() => history.push('/scoreboard'), 3000);\n    }\n\n    const currentTurnIndex = _players.findIndex(\n      (player: Player) => player.isPlayersTurn\n    );\n    const nextTurnIndex =\n      currentTurnIndex === _players.length - 1 ? 0 : currentTurnIndex + 1;\n\n    setRoundAndRoundPlayers(\n      _players.map((player: Player, idx: number) => ({\n        ...player,\n        isPlayersTurn: nextTurnIndex === idx,\n      }))\n    );\n\n    if (_players.length > 1) {\n      setTimeLeft(10);\n    }\n  };\n\n  const isWinner = roundAndRoundPlayers.length === 1;\n  return (\n    <div>\n      <div className=\"round-and-round animate__animated animate__rotateIn\">\n        <h1>It's Round and round time!</h1>\n        <p>\n          Everyone gets 10 seconds to come up with an answer for a random theme,\n          for example \"Name a movie from the 90s\". Press NEXT when a player\n          answers successfully and the turn will go to the next player. If a\n          player can't come up with an answer within 10 seconds the player gets\n          eliminated. The last player that remains gets 3 points!\n        </p>\n        <button className=\"btn btn-secondary\" onClick={() => handleClick()}>\n          Show theme and begin!\n        </button>\n      </div>\n      {showTheme && (\n        <div className=\"theme-wrapper\">\n          <h3>\n            {theme.description}{' '}\n            {theme.randomizeLetter && (\n              <span className=\"font-weight-bold\">\n                {randomLetter.toLocaleUpperCase()}\n              </span>\n            )}\n          </h3>\n          <hr></hr>\n          {started ? (\n            <div>\n              {!isWinner ? (\n                <button\n                  className=\"btn btn-primary btn-next w-100 p-4 mt-4\"\n                  onClick={() => nextTurn(false)}\n                  disabled={!(timeLeft < 10)}\n                >\n                  <h1 className=\"text-uppercase\">\n                    {\n                      roundAndRoundPlayers.filter(\n                        (player: Player) => player.isPlayersTurn\n                      )[0]?.name\n                    }\n                  </h1>\n                  <h3>{timeLeft}</h3>\n                </button>\n              ) : (\n                <h2>{roundAndRoundPlayers[0]?.name + ' wins!'}</h2>\n              )}\n            </div>\n          ) : (\n            <button className=\"btn btn-secondary\" onClick={() => start()}>\n              Start!\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player } from '../../../interfaces/interfaces';\nimport './TriggerFinger.css';\n\nexport default function RoundAndRound({\n  players,\n  setPlayers,\n  playGoodPerkSound,\n  playTriggerSound,\n  playTooEarlySound,\n  playCountdownSound,\n  playBtnSound,\n}: {\n  players: Player[];\n  setPlayers: any;\n  playGoodPerkSound: Function;\n  playTriggerSound: Function;\n  playTooEarlySound: Function;\n  playCountdownSound: Function;\n  playBtnSound: Function;\n}) {\n  const [started, setStarted] = useState(false);\n  const [triggerPlayers, setTriggerPlayers] = useState(\n    players.map((player) => ({\n      ...player,\n      reactionTime: 0,\n      isEliminated: false,\n    }))\n  );\n  const [switched, setSwitched] = useState(false);\n  const [isTriggered, setIsTriggered] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [timer, setTimer] = useState<any>(null);\n  const [switchTime, setSwitchTime] = useState<any>();\n  const [switchDate, setSwitchDate] = useState<any>();\n  const [soundCountDownInterval, setSoundCountDownInterval] = useState<any>();\n  const [fastestTime, setFastestTime] = useState<number>(1000000);\n  const history = useHistory();\n\n  useEffect(() => {\n    playGoodPerkSound();\n    setStarted(false);\n    resetState();\n  }, []);\n\n  useEffect(() => {\n    if (started) {\n      updateElapsedTime();\n      if (elapsedTime > switchTime && !switched) {\n        setSwitched(true);\n        clearInterval(soundCountDownInterval);\n        setSwitchDate(Date.now());\n        clearTimeout(timer);\n      }\n    } else {\n    }\n  }, [elapsedTime, started, switched, switchTime]);\n\n  const start = () => {\n    playBtnSound();\n    setStarted(true);\n    setElapsedTime(1);\n    startPlayingCountdownSound();\n  };\n\n  const updateElapsedTime = () => {\n    setTimer(\n      setTimeout(() => {\n        setElapsedTime(elapsedTime + 10);\n      }, 10)\n    );\n  };\n\n  const startPlayingCountdownSound = () =>\n    setSoundCountDownInterval(setInterval(() => playCountdownSound(), 750));\n\n  const trigger = () => {\n    clearInterval(soundCountDownInterval);\n    setIsTriggered(true);\n    let reactionTime = Date.now() - switchDate;\n    reactionTime = Number.isNaN(reactionTime) ? -1 : reactionTime;\n    const wasTooEarly = reactionTime === -1;\n    const isFastest = reactionTime > 0 && reactionTime < fastestTime;\n    if (isFastest) {\n      playTriggerSound();\n      setFastestTime(reactionTime);\n    } else {\n      playTooEarlySound();\n    }\n\n    setTriggerPlayers(\n      triggerPlayers.map((player: Player) =>\n        player.isPlayersTurn\n          ? { ...player, reactionTime, isEliminated: !isFastest || wasTooEarly }\n          : {\n              ...player,\n              isEliminated:\n                player.isEliminated ||\n                (reactionTime !== -1 && player.reactionTime > reactionTime),\n            }\n      )\n    );\n\n    clearTimeout(timer);\n  };\n\n  const resetState = () => {\n    const switchTime = Math.floor(Math.random() * 10 * 1000) + 4000;\n    setSwitched(false);\n    setSwitchTime(switchTime);\n    setSwitchDate(undefined);\n    setElapsedTime(1);\n    setIsTriggered(false);\n  };\n\n  const nextTurn = () => {\n    playBtnSound();\n\n    const remainingPlayers: Player[] = triggerPlayers.filter(\n      (player) => !player.isEliminated\n    );\n\n    const isWinner = remainingPlayers.length === 1;\n\n    if (isWinner) {\n      setPlayers(\n        players.map((player) =>\n          player.name === remainingPlayers[0].name\n            ? {\n                ...player,\n                points: player.points + 2,\n                isMiniGameWinner: true,\n              }\n            : player\n        )\n      );\n      history.push('/scoreboard');\n    } else {\n      resetState();\n      startPlayingCountdownSound();\n      const currentTurnIndex = triggerPlayers.findIndex(\n        (player: Player) => player.isPlayersTurn\n      );\n      const nextTurnIndex =\n        currentTurnIndex === triggerPlayers.length - 1\n          ? 0\n          : currentTurnIndex + 1;\n\n      setTriggerPlayers(\n        triggerPlayers.map((player: Player, idx: number) => ({\n          ...player,\n          isPlayersTurn: nextTurnIndex === idx,\n        }))\n      );\n    }\n  };\n\n  const currentPlayer = triggerPlayers.filter(\n    (player) => player.isPlayersTurn\n  )[0];\n\n  return (\n    <div>\n      <div className=\"round-and-round animate__animated animate__rotateIn\">\n        <h1>Trigger finger!</h1>\n        <p>\n          Press the button as soon as it turns to green. The fastest player gets\n          one point!\n        </p>\n        <button className=\"btn btn-secondary\" onClick={() => start()}>\n          Let's go!\n        </button>\n      </div>\n      {started && (\n        <div className=\"theme-wrapper\">\n          <h3>Trigger finger!</h3>\n          {!isTriggered && <h4>Press the button when it turns red</h4>}\n          <hr></hr>\n          {isTriggered ? (\n            <div>\n              <h3>{currentPlayer.name} triggered in: </h3>\n              <h1 onClick={() => console.log(triggerPlayers)}>\n                {currentPlayer.reactionTime}ms\n              </h1>\n              <h1>\n                {currentPlayer.reactionTime > 0\n                  ? !currentPlayer.isEliminated\n                    ? 'YOU ARE IN THE LEAD!'\n                    : 'TOO SLOW :('\n                  : 'TOO EARLY! :('}\n              </h1>\n              <button className=\"btn btn-primary\" onClick={() => nextTurn()}>\n                Next\n              </button>\n            </div>\n          ) : (\n            <button\n              className={`btn btn-trigger w-100 btn-${\n                switched ? 'danger' : 'primary'\n              }`}\n              onClick={trigger}\n            >\n              {switched\n                ? 'TRIGGER!!!'\n                : `Wait for it ${currentPlayer.name.toUpperCase()}...`}\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Perks.css';\nimport { Perk, Player, Settings } from '../../interfaces/interfaces';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\nconst playerPerks = [\n  {\n    id: 'double-up',\n    name: 'Double up!',\n    description:\n      'Yay! You get 2 points for a correct answer on the next question.',\n    icon: 'angle-double-up',\n  },\n  {\n    id: 'freedom-of-choice',\n    name: 'Freedom of choice!',\n    description: 'Choose your category for the next 3 rounds.',\n    icon: 'hand-sparkles',\n  },\n  {\n    id: 'landmine',\n    name: 'Landmine!',\n    description: 'BOOM! You lose 1 point if you answer wrong.',\n    icon: 'bomb',\n  },\n];\n\nconst globalPerks = [\n  {\n    id: 'robin-hood',\n    name: 'Robin Hood',\n    description: '#generated#',\n  },\n  {\n    id: 'change-direction',\n    name: 'Direction change!',\n    description: 'The direction changes after this turn.',\n    icon: 'sync',\n  },\n];\n\nexport default function Perks({\n  setDirection,\n  setPlayers,\n  settings,\n  players,\n  playGoodPerkSound,\n}: {\n  setDirection: Function;\n  setPlayers: Function;\n  settings: Settings;\n  players: Player[];\n  playGoodPerkSound: Function;\n}) {\n  const [perk, setPerk] = useState<Perk>({\n    id: '',\n    name: '',\n    description: '',\n    icon: '',\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    randomizePerk();\n  }, []);\n\n  const randomizePerk = () => {\n    const perks =\n      Math.random() < settings.probPlayerPerk ? playerPerks : globalPerks;\n    const randomPerkIndex = Math.floor(perks.length * Math.random());\n    const perk = perks[randomPerkIndex] as Perk;\n    if (perk.id === 'robin-hood' && !isRobinHoodEnabled(players)) {\n      randomizePerk();\n      return;\n    }\n\n    if (perk.id === 'change-direction' && !isChangeDirectionEnabled(players)) {\n      randomizePerk();\n      return;\n    }\n\n    setPerk(perk);\n    playGoodPerkSound();\n  };\n\n  const updatePlayerPerks = (perkName: string, count: number) => {\n    setPlayers(\n      players.map((player: Player) =>\n        player.isPlayersTurn\n          ? {\n              ...player,\n              perks: { ...player.perks, [perkName]: count },\n            }\n          : player\n      )\n    );\n  };\n\n  const activatePerk = (perkId: string) => {\n    switch (perkId) {\n      case 'change-direction':\n        setDirection();\n        break;\n      case 'freedom-of-choice':\n        updatePlayerPerks('freedomOfChoice', 3);\n        break;\n      case 'double-up':\n        updatePlayerPerks('doubleUp', 1);\n        break;\n      case 'robin-hood':\n        setPlayers(switchPlayerPoints(players));\n        break;\n      case 'landmine':\n        updatePlayerPerks('landmine', 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleContinueClick = () => {\n    activatePerk(perk.id);\n    history.push('/select-category');\n  };\n\n  return (\n    <div id={perk.id} className=\"perk-wrapper text-center\">\n      <div className=\"pb-5 w-100\">\n        <div className=\"perk-icon animate__animated animate__rotateIn\">\n          <FontAwesomeIcon icon={perk.icon as IconProp} />\n        </div>\n        <h1>{perk.name}</h1>\n        <p>\n          {perk.id === 'robin-hood'\n            ? getRobinHoodText(players)\n            : perk.description}\n        </p>\n        <button className=\"btn btn-secondary\" onClick={handleContinueClick}>\n          Continue\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport const subtractPointFromAllPlayers = (players: Player[]) => {\n  return players.map((player) => ({ ...player, points: player.points - 1 }));\n};\n\nexport const isChangeDirectionEnabled = (players: Player[]) => {\n  return players.length >= 3;\n};\n\nexport const isRobinHoodEnabled = (players: Player[]) => {\n  const maxPoints = Math.max(...players.map((player) => player.points));\n  const minPoints = Math.min(...players.map((player) => player.points));\n  const minAndMaxAreUnique =\n    players.filter((player) => player.points === maxPoints).length === 1 &&\n    players.filter((player) => player.points === minPoints).length === 1;\n  return maxPoints !== minPoints && minAndMaxAreUnique;\n};\n\nexport const getRobinHoodText = (players: Player[]): string => {\n  const maxPoints = Math.max(...players.map((player) => player.points));\n  const minPoints = Math.min(...players.map((player) => player.points));\n  const maxPlayerName = players.filter(\n    (player) => player.points === maxPoints\n  )[0].name;\n  const minPlayerName = players.filter(\n    (player) => player.points === minPoints\n  )[0].name;\n  return `${maxPlayerName} generously donates 1 point to ${minPlayerName}`;\n};\n\nexport const switchPlayerPoints = (players: Player[]) => {\n  const maxPoints = Math.max(...players.map((player) => player.points));\n  const minPoints = Math.min(...players.map((player) => player.points));\n  return players.map((player) => {\n    if (player.points === minPoints) {\n      return { ...player, points: player.points + 1 };\n    }\n    if (player.points === maxPoints) {\n      return { ...player, points: player.points - 1 };\n    }\n    return player;\n  });\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player, Question as _Question } from '../../interfaces/interfaces';\nimport './Question.css';\n\nexport default function Question({\n  currentQuestion,\n  currentPlayer,\n  players,\n  setPlayers,\n  playBtnSound,\n}: {\n  currentQuestion: _Question;\n  currentPlayer: Player;\n  players: Player[];\n  setPlayers: any;\n  playBtnSound: any;\n}) {\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState(30);\n  const [timer, setTimer] = useState<any>();\n  const history = useHistory();\n\n  useEffect(() => {\n    updateTime();\n  }, [timeRemaining, showAnswer]);\n\n  const extractAlternatives = (question: string) => {\n    if (question.includes('#ALT#')) {\n      const questions = question.replace('#ALTEND#', '').split('#ALT#');\n      const alternatives = questions[1].split(';;');\n      const last = alternatives.pop();\n      const alternativesText = `${alternatives.join(', ')} or ${last}?`;\n      return questions[0] + alternativesText;\n    } else {\n      return question;\n    }\n  };\n\n  const updateTime = () => {\n    if (!showAnswer) {\n      setTimer(\n        setTimeout(() => {\n          if (timeRemaining > 0) {\n            setTimeRemaining(timeRemaining - 1);\n          } else {\n            handleTimeout();\n            clearTimeout(timer);\n          }\n        }, 1000)\n      );\n    } else {\n      clearTimeout(timer);\n    }\n  };\n\n  const handleShowAnswerClick = () => {\n    setShowAnswer(true);\n    playBtnSound();\n  };\n\n  const handleTimeout = () => {\n    setTimeout(() => history.push('/scoreboard'), 2000);\n  };\n\n  const rightAnswer = () => {\n    const earnedPoints = currentPlayer.perks.doubleUp > 0 ? 2 : 1;\n    const _players = updateCurrentPlayerPoints(players, earnedPoints);\n    setPlayers(_players);\n    playBtnSound();\n    history.push('/scoreboard');\n  };\n\n  const wrongAnswer = () => {\n    if (currentPlayer.perks.landmine > 0) {\n      const _players = updateCurrentPlayerPoints(players, -1);\n      setPlayers(_players);\n    }\n    playBtnSound();\n    history.push('/scoreboard');\n  };\n\n  const updateCurrentPlayerPoints = (players: Player[], points: number) => {\n    return players.map((player) => {\n      return player.isPlayersTurn\n        ? {\n            ...player,\n            points: Math.max(0, player.points + points),\n          }\n        : player;\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"mb-4\">\n        <div className=\"text-uppercase\">{currentPlayer.name}</div>\n        <h1 className=\"text-capitalize\">{currentQuestion.category}</h1>\n        <p>{extractAlternatives(currentQuestion.question)}</p>\n        {currentQuestion.img && <div className=\"text-center\">\n          <img src={currentQuestion.img} />\n        </div>}\n      </div>\n      {showAnswer ? (\n        <div>\n          <div className=\"font-weight-bold\">Answer:</div>\n          <p>{currentQuestion.answer}</p>\n          <hr />\n          <div className=\"mb-3\">Did you get it?</div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <button\n                className=\"btn btn-success w-100 p-3 font-weight-bold yes-button\"\n                onClick={() => rightAnswer()}\n              >\n                <FontAwesomeIcon icon=\"check\" />\n                &nbsp;&nbsp;Yes\n              </button>\n            </div>\n            <div className=\"col-6\">\n              <button\n                className=\"btn btn-danger w-100 p-3 font-weight-bold no-button\"\n                onClick={() => wrongAnswer()}\n              >\n                <FontAwesomeIcon icon=\"times\" />\n                &nbsp;&nbsp;No\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : timeRemaining > 0 ? (\n        <div className=\"text-center\">\n          <h1 className=\"mb-4\">{timeRemaining}</h1>\n          <button\n            className=\"btn btn-secondary w-100 p-3\"\n            onClick={() => handleShowAnswerClick()}\n          >\n            Show answer\n          </button>\n        </div>\n      ) : (\n        'Whops! You ran out of time!'\n      )}\n    </div>\n  );\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Direction, Player, Settings } from '../../interfaces/interfaces';\nimport './Scoreboard.css';\n\nexport default function Scoreboard({\n  players,\n  setPlayers,\n  direction,\n  settings,\n  isMiniGame,\n  setIsMiniGame,\n  playGoodPerkSound,\n}: {\n  players: Player[];\n  direction: Direction;\n  isMiniGame: boolean;\n  settings: Settings;\n  setPlayers: Function;\n  setIsMiniGame: Function;\n  playGoodPerkSound: Function;\n}) {\n  const [winner, setWinner] = useState<Player>();\n  const [showWinner, setShowWinner] = useState(false);\n  useEffect(() => {\n    const winner = players.filter(\n      (player) => player.points >= settings.pointsToWin\n    )[0];\n    setWinner(winner);\n    if (winner) {\n      setTimeout(() => {\n        setShowWinner(true);\n        playGoodPerkSound();\n      }, 3000);\n    }\n  }, []);\n  const history = useHistory();\n\n  const handleNextRoundClick = () => {\n    if (\n      settings.enabledMiniGames.length === 0 ||\n      Math.random() > settings.probMiniGame ||\n      isMiniGame\n    ) {\n      let _players = setNextPlayersTurn(players, direction);\n      _players = reduceCurrentPlayersPerksByOne(_players);\n      _players = resetMiniGameWinner(_players);\n      setPlayers(_players);\n      setIsMiniGame(false);\n      history.push('/show-turn');\n    } else {\n      setIsMiniGame(true);\n      history.push(\n        Math.random() < 0.6 ? '/round-and-round' : '/trigger-finger'\n      );\n    }\n  };\n\n  const handlePlayAgainClick = () => {\n    setPlayers([]);\n    history.push('/home');\n  };\n\n  return (\n    <div>\n      <h2>Scoreboard</h2>\n      <table className=\"table text-white\">\n        <tbody>\n          {[...players]\n            .sort((a: Player, b: Player) => b.points - a.points)\n            .map((player: Player, idx: number) => (\n              <tr\n                key={idx}\n                className={\n                  shouldAnimatePlayerRow(player, isMiniGame)\n                    ? 'animate__animated animate__flash'\n                    : ''\n                }\n              >\n                <td className=\"text-uppercase\">\n                  {idx + 1}. {player.name}\n                </td>\n                <td className=\"text-right\">{player.points}p</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      {!winner && (\n        <div className=\"text-center pt-5\">\n          <button\n            onClick={() => handleNextRoundClick()}\n            className=\"btn btn-primary px-3 py-3\"\n          >\n            Next round <FontAwesomeIcon className=\"ml-2\" icon=\"arrow-right\" />\n          </button>\n        </div>\n      )}\n      {showWinner && (\n        <div className=\"winner-wrapper animate__animated animate__fadeIn\">\n          <div className=\"pb-5 w-100\">\n            <div className=\"perk-icon animate__animated animate__rotateIn\">\n              <FontAwesomeIcon icon={'trophy'} />\n            </div>\n            <h1 className=\"mb-5\">{winner?.name} wins!</h1>\n            <button\n              className=\"btn btn-secondary\"\n              onClick={handlePlayAgainClick}\n            >\n              Play again\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport const shouldAnimatePlayerRow = (player: Player, isMiniGame: boolean) =>\n  isMiniGame ? player.isMiniGameWinner : player.isPlayersTurn;\n\nexport const resetMiniGameWinner = (players: Player[]) => {\n  return players.map((player) => ({ ...player, isMiniGameWinner: false }));\n};\n\nexport const setNextPlayersTurn = (players: Player[], direction: Direction) => {\n  let nextIndex = 0;\n  const currentPlayerIndex = players.findIndex(\n    (player) => player.isPlayersTurn\n  );\n  const lastPlayerIndex = players.length - 1;\n  const isFirstPlayer = currentPlayerIndex === 0;\n  const isLastPlayer = currentPlayerIndex === lastPlayerIndex;\n\n  if (direction === 1) {\n    nextIndex = isLastPlayer ? 0 : currentPlayerIndex + direction;\n  } else {\n    nextIndex = isFirstPlayer\n      ? lastPlayerIndex\n      : currentPlayerIndex + direction;\n  }\n\n  return players.map((player, idx) => ({\n    ...player,\n    isPlayersTurn: nextIndex === idx,\n  }));\n};\n\nexport const reduceCurrentPlayersPerksByOne = (players: Player[]) => {\n  return players.map((player: any) =>\n    player.isPlayersTurn\n      ? {\n          ...player,\n          perks: Object.keys(player.perks).reduce(\n            (prev, cur) =>\n              player.perks[cur] > 0\n                ? { ...prev, [cur]: player.perks[cur] - 1 }\n                : prev,\n            { ...player.perks }\n          ),\n        }\n      : player\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Category, Player } from '../../interfaces/interfaces';\nimport './SelectCategory.css';\n\nexport default function SelectCategory({\n  currentPlayer,\n  setCurrentCategory,\n  categories,\n  play,\n}: {\n  currentPlayer: Player;\n  setCurrentCategory: any;\n  setCurrentQuestion: any;\n  categories: Category[];\n  play: any;\n}) {\n  const [activeCategory, setActiveCategory] = useState({\n    id: 0,\n    identifier: '',\n    name: '',\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    randomizeCategory();\n  }, []);\n\n  const randomizeCategory = () => {\n    if (currentPlayer.perks.freedomOfChoice > 0) return;\n    let count = 0;\n    let prevRandomIndex: any;\n    const interval = setInterval(() => {\n      let randomIndex = Math.floor(Math.random() * categories.length);\n      while (randomIndex === prevRandomIndex) {\n        randomIndex = Math.floor(Math.random() * categories.length);\n      }\n      setActiveCategory(categories[randomIndex]);\n      prevRandomIndex = randomIndex;\n      count++;\n      if (count === 15) {\n        clearInterval(interval);\n        setCurrentCategory(categories[randomIndex]);\n        setTimeout(() => history.push('/question'), 2000);\n      }\n      play();\n    }, 200);\n  };\n\n  const handleClick = (category: Category) => {\n    if (currentPlayer.perks.freedomOfChoice > 0) {\n      setCurrentCategory(category);\n      history.push('/question');\n    }\n  };\n\n  return (\n    <div className=\"text-center\">\n      <div className=\"mb-4\">\n        <h1 className=\"mb-0 text-uppercase\">{currentPlayer.name}</h1>\n        <div>\"{currentPlayer.description}\"</div>\n        <div>({currentPlayer.points} points)</div>\n        {currentPlayer.perks.freedomOfChoice > 0 && (\n          <div>\n            Freedom Of Choice left: {currentPlayer.perks.freedomOfChoice}\n          </div>\n        )}\n      </div>\n      <div className=\"row\">\n        {categories.map((item: Category, idx: number) => (\n          <div className=\"col-12 col-sm-6 p-1\" key={idx}>\n            <div\n              onClick={() => handleClick(item)}\n              className={\n                'category text-center p-sm-3 ' +\n                item.identifier +\n                (item.name === activeCategory?.name ||\n                currentPlayer.perks.freedomOfChoice > 0\n                  ? ' active'\n                  : '')\n              }\n            >\n              {item.name}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player, Settings } from '../../interfaces/interfaces';\nimport './ShowTurn.css';\n\nexport default function ShowTurn({\n  currentPlayer,\n  settings,\n}: {\n  currentPlayer: Player;\n  settings: Settings;\n}) {\n  const history = useHistory();\n\n  useEffect(() => {\n    setTimeout(() => {\n      history.push(\n        Math.random() < settings.probPerk ? '/perks' : '/select-category'\n      );\n    }, 3000);\n  }, []);\n\n  return (\n    <div className=\"show-turn-wrapper\">\n      <div className=\"w-100\">\n        <h1 className=\"text-uppercase\">{currentPlayer.name}</h1>\n        <h3>\"{currentPlayer.description}\"</h3>\n        <hr></hr>\n        <h2>You're next!</h2>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport api from '../../api/Api';\nimport { Category, Question } from '../../interfaces/interfaces';\n\nexport const validateForm = ({ categoryId, question, answer }: any) => {\n  if (Number(categoryId) === 0) return false;\n  if (question.length < 10) return false;\n  if (answer.length === 0) return false;\n  return true;\n};\n\nconst defaultFormValues = {\n  id: null,\n  question: '',\n  answer: '',\n  categoryId: 0,\n};\n\n// can't keep selected image in state\nlet addedImage: any;\n\nexport default function AddQuestion({\n  categories,\n  categoryId,\n  setAllQuestions,\n  showModal,\n  setShowModal,\n  question,\n}: any) {\n  const [formData, setFormData] = useState<Question>(defaultFormValues);\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  useEffect(() => {\n    setIsFormValid(validateForm(formData));\n  }, [formData]);\n\n  useEffect(() => {\n    setFormData(question || { ...defaultFormValues, categoryId });\n  }, [showModal, question]);\n\n  const handleFormChange = ({ name, value }: any) => {\n    let _value = name === 'categoryId' ? Number(value) : value;\n    setFormData({ ...formData, [name]: _value });\n  };\n\n  const handleImageChange = (target: any) => {\n    addedImage = target.files[0];\n  };\n\n  const handleClose = () => setShowModal(false);\n\n  const handleAddQuestionClick = () => {\n    api\n      .addQuestion(formData, addedImage)\n      .then(() => {\n        setAllQuestions(formData);\n        setFormData({ ...formData, question: '', answer: '' });\n      })\n      .catch((e) => console.log(e));\n  };\n\n  const handleSaveQuestionClick = () => {\n    api\n      .saveQuestion(formData)\n      .then(() => {\n        setAllQuestions(formData);\n        setFormData({ ...formData, question: '', answer: '' });\n        setShowModal(false);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  return (\n    <div>\n      <Modal className=\"text-dark\" show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{question ? 'Edit ' : 'Add '}question</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            Select a category and fill out the form in order to submit a\n            question. Your question will be reviewed by an administrator before\n            it gets added to the app. Thanks for making the game better! &lt;3\n          </p>\n          <div className=\"form-group\">\n            <label>Category</label>\n            <select\n              className=\"form-control\"\n              name=\"categoryId\"\n              value={formData.categoryId}\n              onChange={(e) => handleFormChange(e.target)}\n            >\n              <option value=\"0\">Choose</option>\n              {categories.map((category: Category, idx: number) => (\n                <option value={category.id} key={idx}>\n                  {category.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Question</label>\n            <textarea\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"question\"\n              value={formData.question}\n              rows={2}\n            ></textarea>\n          </div>\n          {!question && (\n            <div className=\"form-group\">\n              <label>Image</label>\n              <div>\n                <input\n                  type=\"file\"\n                  onChange={(e) => handleImageChange(e.target)}\n                  name=\"img\"\n                />\n              </div>\n            </div>\n          )}\n          {question?.img && (\n            <div>\n              <img\n                src={`https://quizmageddon.s3.eu-north-1.amazonaws.com/${question.img}`}\n              />\n            </div>\n          )}\n          <div className=\"form-group\">\n            <label>Answer</label>\n            <input\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"answer\"\n              value={formData.answer}\n            ></input>\n          </div>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={\n              question ? handleSaveQuestionClick : handleAddQuestionClick\n            }\n            disabled={!isFormValid}\n          >\n            {question ? 'Save ' : 'Add '}question\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport AddQuestion from '../addQuestion/AddQuestion';\nimport api from '../../api/Api';\nimport { Category, Question } from '../../interfaces/interfaces';\n\nconst filterQuestions = (\n  questions: any,\n  filterString: string,\n  categoryId: number,\n  image?: boolean\n) => {\n  return questions.filter(\n    (question: any) =>\n      (question?.question?.toLowerCase().includes(filterString) ||\n        question?.answer?.toLowerCase().includes(filterString)) &&\n      (categoryId === 0 || question?.categoryId === categoryId) &&\n      image === !!question.img\n  );\n};\n\nexport default function ViewQuestions({\n  categories,\n}: {\n  categories: Category[];\n}) {\n  const [allQuestions, setAllQuestions] = useState<Question[]>([]);\n  const [questions, setQuestions] = useState([]);\n  const [filterString, setFilterString] = useState('');\n  const [categoryId, setCategoryId] = useState(0);\n  const [showOnlyImages, setShowOnlyImages] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState<\n    Question | undefined\n  >(undefined);\n\n  useEffect(() => {\n    api.getAllQuestions().then((res) => {\n      setAllQuestions(res.data.questions);\n      setQuestions(res.data.questions);\n    });\n  }, []);\n\n  const handleInputChange = (filterString: string) => {\n    setFilterString(filterString.toLowerCase());\n    setQuestions(\n      filterQuestions(allQuestions, filterString.toLowerCase(), categoryId, showOnlyImages)\n    );\n  };\n\n  const handleSelectCategoryChange = (categoryId: string) => {\n    setCategoryId(Number(categoryId));\n    setQuestions(\n      filterQuestions(allQuestions, filterString, Number(categoryId), showOnlyImages)\n    );\n  };\n\n  const handleAddQuestionClick = () => {\n    setSelectedQuestion(undefined);\n    setShowModal(true);\n  };\n\n  const handleEditModalClick = (question: Question) => {\n    setSelectedQuestion(question);\n    setShowModal(true);\n  };\n\n  const handleShowImageQuestionsCheck = ({\n    target: { checked, name },\n  }: any) => {\n    setShowOnlyImages(checked);\n    setQuestions(\n      filterQuestions(allQuestions, filterString, Number(categoryId), checked)\n    );\n  };\n\n  return (\n    <div>\n      <h1 className=\"mb-4\">Questions</h1>\n      <div className=\"row mb-4\">\n        <div className=\"col-12 col-sm-4\">\n          <div className=\"form-group\">\n            <label>Category</label>\n            <select\n              className=\"form-control\"\n              onChange={(e) => handleSelectCategoryChange(e.target.value)}\n            >\n              <option value=\"0\">All categories</option>\n              {categories.map((category) => (\n                <option value={category.id}>\n                  {category.name} ({category.questions})\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"col-12 col-sm-4\">\n          <div className=\"form-group\">\n            <label>Filter term</label>\n            <input\n              className=\"form-control\"\n              onChange={(e) => handleInputChange(e.target.value)}\n            ></input>\n          </div>\n        </div>\n        <div className=\"col-12 col-sm-4\">\n          <div className=\"form-group\">\n            <label className=\"d-none d-sm-block\">&nbsp;</label>\n            <button\n              className=\"btn btn-secondary w-100\"\n              onClick={handleAddQuestionClick}\n            >\n              Add Question\n            </button>\n          </div>\n        </div>\n        <div className=\"col-12\">\n          <div className=\"form-group\">\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                checked={showOnlyImages}\n                onChange={handleShowImageQuestionsCheck}\n              />\n              <label className=\"form-check-label\">\n                Show only image questions\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <p>{questions.length} questions</p>\n      {questions.length > 0 && (\n        <table className=\"table text-white table-dark table-hover\">\n          <thead>\n            <tr>\n              <th>Question</th>\n              <th>Answer</th>\n              <th>Tags</th>\n            </tr>\n          </thead>\n          <tbody>\n            {questions.map((question: Question) => (\n              <tr\n                className=\"clickable\"\n                onClick={() => handleEditModalClick(question)}\n              >\n                <td>{question.question}</td>\n                <td>{question.answer}</td>\n                <td>{question.tags}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      <AddQuestion\n        categoryId={categoryId}\n        categories={categories}\n        question={selectedQuestion}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        setAllQuestions={(question: Question) => {\n          const questions = [...allQuestions, question];\n          setAllQuestions(questions);\n        }}\n      ></AddQuestion>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/button.6be18c19.mp3\";","export default __webpack_public_path__ + \"static/media/goodPerk.48ebac9f.mp3\";","export default __webpack_public_path__ + \"static/media/robots.8d72ac60.mp3\";","export default __webpack_public_path__ + \"static/media/countdown2.2596fc0b.mp3\";","export default __webpack_public_path__ + \"static/media/trigger.5d9bb61e.mp3\";","export default __webpack_public_path__ + \"static/media/tooearly.874996ee.mp3\";","import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faAngleDoubleUp,\n  faArrowRight,\n  faBomb,\n  faCheck,\n  faCog,\n  faHandSparkles,\n  faPlay,\n  faPlus,\n  faSync,\n  faTimes,\n  faTools,\n  faTrophy,\n} from '@fortawesome/free-solid-svg-icons';\nimport { useState, useEffect } from 'react';\nimport { MemoryRouter, Route, Switch } from 'react-router-dom';\nimport useSound from 'use-sound';\nimport './App.scss';\nimport AddPlayers from './components/addPlayers/AddPlayers';\nimport Home from './components/home/Home';\nimport Login from './components/login/Login';\nimport RoundAndRound from './components/minigames/roundAndRound/RoundAndRound';\nimport TriggerFinger from './components/minigames/triggerFinger/TriggerFinger';\nimport Perks from './components/perks/Perks';\nimport Question from './components/question/Question';\nimport Scoreboard from './components/scoreboard/Scoreboard';\nimport SelectCategory from './components/selectCategory/SelectCategory';\nimport ShowTurn from './components/showTurn/ShowTurn';\nimport ViewQuestions from './components/viewQuestions/ViewQuestions';\nimport soundButton from './sounds/button.mp3';\nimport goodPerk from './sounds/goodPerk.mp3';\nimport sound from './sounds/robots.mp3';\nimport countdown from './sounds/countdown2.mp3';\nimport trigger from './sounds/trigger.mp3';\nimport tooearly from './sounds/tooearly.mp3';\n\nlibrary.add(\n  faSync,\n  faAngleDoubleUp,\n  faCog,\n  faTrophy,\n  faHandSparkles,\n  faBomb,\n  faPlus,\n  faCheck,\n  faTimes,\n  faArrowRight,\n  faPlay,\n  faTools\n);\n\nfunction App() {\n  const [players, setPlayers] = useState([]);\n  const [settings, setSettings] = useState({\n    pointsToWin: 10,\n    enabledMiniGames: ['roundAndRound', 'triggerFinger', 'closestWins'],\n    probMiniGame: 0.1,\n    probPerk: 0.2,\n    probPlayerPerk: 0.6,\n    lightMode: false,\n    imgBaseUrl: 'https://quizmageddon.s3.eu-north-1.amazonaws.com/',\n  });\n  const soundConfig = { volume: 1 };\n  const [questions, setQuestions] = useState({});\n  const [categories, setCategories] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [themes, setThemes] = useState({});\n  const [direction, setDirection] = useState(1);\n  const [user, setUser] = useState({});\n  const [isMiniGame, setIsMiniGame] = useState(false);\n  const [play] = useSound(sound, soundConfig);\n  const [playBtnSound] = useSound(soundButton, soundConfig);\n  const [playGoodPerkSound] = useSound(goodPerk, soundConfig);\n  const [playTriggerSound] = useSound(trigger, soundConfig);\n  const [playCountdownSound] = useSound(countdown, { volume: 0.5 });\n  const [playTooEarlySound] = useSound(tooearly, soundConfig);\n\n  useEffect(() => {\n    settings.lightMode\n      ? document.body.classList.add('light-mode')\n      : document.body.classList.remove('light-mode');\n  }, [settings]);\n\n  const _setCurrentQuestion = (category) => {\n    const questionsByCategory = questions.filter(\n      (question) => question.categoryId === category.id\n    );\n    const numOfQuestionsInCategory = questionsByCategory.length;\n    const randomIndex = Math.floor(Math.random() * numOfQuestionsInCategory);\n    const randomQuestion = questionsByCategory[randomIndex];\n    setQuestions(\n      questions.filter((question) => question.id !== randomQuestion.id)\n    );\n    setCurrentQuestion({ ...randomQuestion, category: category.identifier });\n  };\n\n  return (\n    <div className=\"App\">\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login setUser={setUser}></Login>\n          </Route>\n          <Route path=\"/home\">\n            <Home\n              categories={categories}\n              user={user}\n              settings={settings}\n              setSettings={setSettings}\n              setCategories={setCategories}\n              setQuestions={setQuestions}\n              setThemes={setThemes}\n            ></Home>\n          </Route>\n          <Route path=\"/add-players\">\n            <AddPlayers\n              players={players}\n              playBtnSound={playBtnSound}\n              setPlayers={setPlayers}\n            ></AddPlayers>\n          </Route>\n          <Route path=\"/show-turn\">\n            <ShowTurn\n              settings={settings}\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n            ></ShowTurn>\n          </Route>\n          <Route path=\"/perks\">\n            <Perks\n              settings={settings}\n              players={players}\n              playGoodPerkSound={playGoodPerkSound}\n              setPlayers={setPlayers}\n              setDirection={() => setDirection(direction * -1)}\n            ></Perks>\n          </Route>\n          <Route path=\"/round-and-round\">\n            <RoundAndRound\n              players={players}\n              themes={themes}\n              playGoodPerkSound={playGoodPerkSound}\n              playBtnSound={playBtnSound}\n              setPlayers={setPlayers}\n            ></RoundAndRound>\n          </Route>\n          <Route path=\"/trigger-finger\">\n            <TriggerFinger\n              players={players}\n              playGoodPerkSound={playGoodPerkSound}\n              playTriggerSound={playTriggerSound}\n              playCountdownSound={playCountdownSound}\n              playTooEarlySound={playTooEarlySound}\n              playBtnSound={playBtnSound}\n              setPlayers={setPlayers}\n            ></TriggerFinger>\n          </Route>\n          <Route path=\"/select-category\">\n            <SelectCategory\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n              categories={categories.filter((category) => !category.disabled)}\n              play={play}\n              setCurrentCategory={_setCurrentQuestion}\n            ></SelectCategory>\n          </Route>\n          <Route path=\"/question\">\n            <Question\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n              currentQuestion={currentQuestion}\n              players={players}\n              settings={settings}\n              playBtnSound={playBtnSound}\n              setPlayers={setPlayers}\n            ></Question>\n          </Route>\n          <Route path=\"/scoreboard\">\n            <Scoreboard\n              settings={settings}\n              direction={direction}\n              players={players}\n              setPlayers={setPlayers}\n              isMiniGame={isMiniGame}\n              setIsMiniGame={setIsMiniGame}\n              playGoodPerkSound={playGoodPerkSound}\n            ></Scoreboard>\n          </Route>\n          <Route path=\"/admin/questions\">\n            <ViewQuestions categories={categories}></ViewQuestions>\n          </Route>\n        </Switch>\n      </MemoryRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'animate.css/animate.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}