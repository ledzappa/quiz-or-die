{"version":3,"sources":["api/Api.js","components/addPlayers/AddPlayers.tsx","components/settings/Settings.tsx","components/home/Home.tsx","components/perks/Perks.tsx","components/question/Question.tsx","components/roundAndRound/RoundAndRound.tsx","components/scoreboard/Scoreboard.tsx","components/selectCategory/SelectCategory.tsx","components/showTurn/ShowTurn.tsx","components/addQuestion/AddQuestion.tsx","components/viewQuestions/ViewQuestions.tsx","sounds/robots.mp3","sounds/button.mp3","sounds/goodPerk.mp3","components/login/Register.tsx","components/login/Login.tsx","App.js","reportWebVitals.js","index.js"],"names":["api","getCategories","axios","get","getPlayerDescriptionWords","getQuestions","headers","authorization","localStorage","getItem","getAllQuestions","getRoundAndRoundThemes","addQuestion","formData","img","console","log","fd","FormData","Object","keys","forEach","key","append","fetch","method","body","saveQuestion","put","deleteQuestion","delete","addUser","post","login","AddPlayers","players","setPlayers","playBtnSound","useState","playerInput","setPlayerInput","nouns","adjectives","playerWords","setPlayerWords","history","useHistory","useEffect","then","res","data","addPlayer","name","description","getRandomDescription","points","isPlayersTurn","isRoundAndRoundWinner","perks","freedomOfChoice","doubleUp","startGame","randomPlayer","Math","floor","random","length","map","player","idx","randomizeFirstTurn","push","nounsLength","randomNoun","noun","adjectivesLength","randomAdjective","adjective","className","icon","type","value","autoFocus","onKeyPress","e","onChange","target","onClick","filter","_","i","removePlayer","disabled","Settings","categories","showModal","setCategories","setShowModal","username","email","password","passwordRepeat","errorMsg","handleClose","handleCategoryChange","checked","_categories","category","id","Number","Modal","show","onHide","Header","closeButton","Title","Body","toString","Footer","Home","settings","setQuestions","setThemes","user","showSeetingsModal","setShowSettingsModal","questions","question","imgBaseUrl","images","cacheImages","themes","image","Image","src","roleId","playerPerks","globalPerks","Perks","setDirection","playGoodPerkSound","perk","setPerk","randomizePerk","isRobinHoodEnabled","isChangeDirectionEnabled","updatePlayerPerks","perkName","count","getRobinHoodText","perkId","switchPlayerPoints","activatePerk","maxPoints","max","minPoints","min","minAndMaxAreUnique","maxPlayerName","minPlayerName","Question","currentQuestion","currentPlayer","showAnswer","setShowAnswer","timeRemaining","setTimeRemaining","timer","setTimer","updateTime","clearTimeout","setTimeout","handleTimeout","updateCurrentPlayerPoints","includes","replace","split","alternatives","last","pop","alternativesText","join","extractAlternatives","answer","earnedPoints","_players","rightAnswer","landmine","wrongAnswer","RoundAndRound","randomizeLetter","theme","setTheme","showTheme","setShowTheme","started","setStarted","timeLeft","setTimeLeft","randomLetter","setRandomLetter","roundAndRoundPlayers","setRoundAndRoundPlayers","getRandomLetter","letters","nextTurn","removeCurrent","currentTurnIndex","findIndex","nextTurnIndex","toLocaleUpperCase","Scoreboard","direction","isRoundAndRound","setIsRoundAndRound","winner","setWinner","showWinner","setShowWinner","sort","a","b","shouldAnimatePlayerRow","setNextPlayersTurn","reduceCurrentPlayersPerksByOne","resetRoundAndRoundWinner","handleNextRoundClick","nextIndex","currentPlayerIndex","lastPlayerIndex","reduce","prev","cur","SelectCategory","setCurrentCategory","play","identifier","activeCategory","setActiveCategory","randomizeCategory","prevRandomIndex","interval","setInterval","randomIndex","clearInterval","item","ShowTurn","addedImage","defaultFormValues","categoryId","AddQuestion","setAllQuestions","setFormData","isFormValid","setIsFormValid","validateForm","handleFormChange","_value","rows","files","catch","filterQuestions","filterString","toLowerCase","ViewQuestions","allQuestions","setFilterString","setCategoryId","undefined","selectedQuestion","setSelectedQuestion","handleSelectCategoryChange","handleInputChange","handleEditModalClick","tags","Register","setErrorMsg","schema","Joi","object","string","required","tlds","ref","newFormData","error","validate","message","Login","setUser","setError","setItem","accessToken","response","library","add","faSync","faAngleDoubleUp","faTrophy","faHandSparkles","faBomb","faPlus","faCheck","faTimes","faArrowRight","App","pointsToWin","probRoundAndRound","probPerk","probPlayerPerk","setCurrentQuestion","useSound","sound","volume","soundButton","goodPerk","exact","path","questionsByCategory","numOfQuestionsInCategory","randomQuestion","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.195f786f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst mocks = true;\n\nconst api = {\n  getCategories: () =>\n    axios.get(mocks ? 'mocks/categories.json' : '/api/categories'),\n  getPlayerDescriptionWords: () =>\n    axios.get('mocks/playerDescriptionWords.json'),\n  getQuestions: () =>\n    axios.get(mocks ? 'mocks/questions.json' : '/api/questions', {\n      headers: {\n        authorization: 'Bearer ' + localStorage.getItem('accessToken'),\n      },\n    }),\n  getAllQuestions: () =>\n    axios.get(mocks ? 'mocks/questions.json' : '/api/all-questions', {\n      headers: {\n        authorization: 'Bearer ' + localStorage.getItem('accessToken'),\n      },\n    }),\n  getRoundAndRoundThemes: () =>\n    axios.get(true ? 'mocks/roundAndRound.json' : '/api/round-and-round'),\n  addQuestion: (formData, img) => {\n    console.log(img);\n    const fd = new FormData();\n    Object.keys(formData).forEach((key) => fd.append(key, formData[key]));\n    if (img) {\n      fd.append('img', img, 'img.jpg');\n    }\n    // using fetch because axios refused to set content type to multipart\n    return fetch('/api/questions', {\n      method: 'POST',\n      body: fd,\n    });\n  },\n  saveQuestion: (formData) => axios.put('/api/questions', formData),\n  deleteQuestion: (formData) => axios.delete('/api/questions', formData),\n  addUser: (formData) => axios.post('/api/users', formData),\n  login: (formData) =>\n    mocks ? axios.get('mocks/login.json') : axios.post('/api/login', formData),\n};\n\nexport default api;\n","import { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../api/Api';\nimport { Player } from '../../interfaces/interfaces';\nimport './AddPlayers.css';\n\nexport default function AddPlayers({ players, setPlayers, playBtnSound }: any) {\n  const [playerInput, setPlayerInput] = useState('');\n  const [playerWords, setPlayerWords] = useState({ nouns: [], adjectives: [] });\n  const history = useHistory();\n\n  useEffect(() => {\n    api.getPlayerDescriptionWords().then((res) => setPlayerWords(res.data));\n  }, []);\n\n  const addPlayer = (name: String) => {\n    setPlayers([\n      ...players,\n      {\n        name,\n        description: getRandomDescription(),\n        points: 0,\n        isPlayersTurn: false,\n        isRoundAndRoundWinner: false,\n        perks: { freedomOfChoice: 0, doubleUp: 0 },\n      },\n    ]);\n    setPlayerInput('');\n  };\n\n  const removePlayer = (idx: Number) => {\n    setPlayers(players.filter((_: any, i: Number) => idx !== i));\n  };\n\n  const randomizeFirstTurn = () => {\n    const randomPlayer = Math.floor(Math.random() * players.length);\n    setPlayers(\n      players.map((player: Player, idx: Number) => {\n        if (randomPlayer === idx) {\n          return { ...player, isPlayersTurn: true };\n        } else {\n          return player;\n        }\n      })\n    );\n  };\n\n  const startGame = () => {\n    randomizeFirstTurn();\n    playBtnSound();\n    history.push('/show-turn');\n  };\n\n  const handlePlayerInputChange = (value: string) => setPlayerInput(value);\n\n  const getRandomDescription = () => {\n    const nounsLength = playerWords.nouns.length;\n    const randomNoun = Math.floor(Math.random() * nounsLength);\n    const noun = playerWords.nouns[randomNoun];\n    const adjectivesLength = playerWords.adjectives.length;\n    const randomAdjective = Math.floor(Math.random() * adjectivesLength);\n    const adjective = playerWords.adjectives[randomAdjective];\n    return `The ${adjective} ${noun}`;\n  };\n\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-12 col-sm-6 col-lg-6 col-xl-4\">\n        <h2>\n          <FontAwesomeIcon className=\"mr-2\" icon=\"plus\" />\n          Add players\n        </h2>\n        <p>Enter a name and press enter or the \"Add\" button.</p>\n        <label>Name</label>\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control add-player\"\n            value={playerInput}\n            autoFocus\n            onKeyPress={(e) => e.key === 'Enter' && addPlayer(playerInput)}\n            onChange={(e) => handlePlayerInputChange(e.target.value)}\n          />\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => addPlayer(playerInput)}\n          >\n            Add\n          </button>\n        </div>\n        {players.map((player: Player, idx: number) => (\n          <div\n            className=\"added-player\"\n            key={idx}\n            onClick={() => removePlayer(idx)}\n          >\n            {idx + 1}.{' '}\n            <span className=\"font-weight-bold text-uppercase\">\n              {player.name}\n            </span>{' '}\n            - {player.description}\n          </div>\n        ))}\n        <hr />\n        <button\n          className=\"btn btn-primary w-100 start-game\"\n          onClick={() => startGame()}\n          disabled={players.length < 2}\n        >\n          Start Game!\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { any } from 'joi';\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Category } from '../../interfaces/interfaces';\n\nexport default function Settings({\n  categories,\n  showModal,\n  setCategories,\n  setShowModal,\n}: {\n  categories: Category[];\n  showModal: boolean;\n  setShowModal: Function;\n  setCategories: Function;\n}) {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordRepeat: '',\n  });\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const handleCategoryChange = ({ target: { checked, name } }: any) => {\n    const _categories = categories.map((category) =>\n      category.id === Number(name)\n        ? { ...category, disabled: !checked }\n        : category\n    );\n    console.log(name);\n    console.log(_categories);\n    setCategories(_categories);\n  };\n\n  const handleSaveSettingsClick = () => {\n    console.log('save settings');\n  };\n\n  return (\n    <Modal className=\"text-dark\" show={showModal} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Settings</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <div className=\"form-group\">\n          <label>Enabled Categories</label>\n          {categories.map((category) => (\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                name={category.id.toString()}\n                checked={!category.disabled}\n                onChange={handleCategoryChange}\n              />\n              <label className=\"form-check-label\">{category.name}</label>\n            </div>\n          ))}\n        </div>\n        {errorMsg.length > 0 && (\n          <div className=\"alert alert-danger alert-icon\">{errorMsg}</div>\n        )}\n      </Modal.Body>\n\n      <Modal.Footer>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleClose}>\n          Close\n        </button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport api from '../../api/Api';\nimport { useHistory } from 'react-router-dom';\nimport Settings from '../settings/Settings';\nimport { Question } from '../../interfaces/interfaces';\n\nexport default function Home({\n  categories,\n  settings,\n  setCategories,\n  setQuestions,\n  setThemes,\n  user,\n}: any) {\n  const history = useHistory();\n  const [showSeetingsModal, setShowSettingsModal] = useState(false);\n\n  useEffect(() => {\n    api.getCategories().then((res) => {\n      setCategories(res.data.categories);\n    });\n\n    api.getQuestions().then((res) => {\n      const questions = res.data.questions.map((question: Question) => ({\n        ...question,\n        img: question.img ? settings.imgBaseUrl + question.img : null,\n      }));\n\n      const images = questions\n        .filter((question: Question) => !!question.img)\n        .map((question: Question) => question.img);\n\n      cacheImages(images);\n      setQuestions(questions);\n    });\n\n    api.getRoundAndRoundThemes().then((res) => {\n      setThemes(res.data.themes);\n    });\n  }, []);\n\n  const cacheImages = (images: string[]) => {\n    images.forEach((image) => {\n      const img = new Image();\n      img.src = image;\n    });\n  };\n\n  const handleSettingsClick = () => {\n    setShowSettingsModal(true);\n  };\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12 text-right\">\n          {user.roleId === 0 && (\n            <button\n              className=\"btn btn-outline-light\"\n              onClick={() => history.push('/admin/questions')}\n            >\n              Admin\n            </button>\n          )}\n        </div>\n      </div>\n      <div className=\"text-center\">\n        <h1>Quizmageddon</h1>\n        <p>\n          Welcome to quizmageddon - the best quiz game ever created by men.\n          Start the game by adding players!\n        </p>\n        <button\n          className=\"btn btn-primary play-quizmageddon\"\n          onClick={() => history.push('/add-players')}\n        >\n          Play Quizmageddon\n        </button>\n        <button className=\"btn btn-outline-light\" onClick={handleSettingsClick}>\n          Settings\n        </button>\n      </div>\n      <Settings\n        categories={categories}\n        setCategories={setCategories}\n        showModal={showSeetingsModal}\n        setShowModal={setShowSettingsModal}\n      ></Settings>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Perks.css';\nimport { Perk, Player } from '../../interfaces/interfaces';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\nconst playerPerks = [\n  {\n    id: 'double-up',\n    name: 'Double up!',\n    description:\n      'Yay! You get 2 points for a correct answer on the next question.',\n    icon: 'angle-double-up',\n  },\n  {\n    id: 'freedom-of-choice',\n    name: 'Freedom of choice!',\n    description: 'Choose your category for the next 3 rounds.',\n    icon: 'hand-sparkles',\n  },\n  {\n    id: 'landmine',\n    name: 'Landmine!',\n    description: 'BOOM! You lose 1 point if you answer wrong.',\n    icon: 'bomb',\n  },\n];\n\nconst globalPerks = [\n  {\n    id: 'robin-hood',\n    name: 'Robin Hood',\n    description: '#generated#',\n  },\n  {\n    id: 'change-direction',\n    name: 'Direction change!',\n    description: 'The direction changes after this turn.',\n    icon: 'sync',\n  },\n];\n\nexport default function Perks({\n  setDirection,\n  setPlayers,\n  players,\n  playGoodPerkSound,\n}: any) {\n  const [perk, setPerk] = useState<Perk>({\n    id: '',\n    name: '',\n    description: '',\n    icon: '',\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    randomizePerk();\n  }, []);\n\n  const randomizePerk = () => {\n    const perks = Math.random() < 0.6 ? playerPerks : globalPerks;\n    const randomPerkIndex = Math.floor(perks.length * Math.random());\n    const perk = perks[randomPerkIndex] as Perk;\n    if (perk.id === 'robin-hood' && !isRobinHoodEnabled(players)) {\n      randomizePerk();\n      return;\n    }\n\n    if (perk.id === 'change-direction' && !isChangeDirectionEnabled(players)) {\n      randomizePerk();\n      return;\n    }\n\n    setPerk(perk);\n    playGoodPerkSound();\n  };\n\n  const updatePlayerPerks = (perkName: string, count: number) => {\n    setPlayers(\n      players.map((player: Player) =>\n        player.isPlayersTurn\n          ? {\n              ...player,\n              perks: { ...player.perks, [perkName]: count },\n            }\n          : player\n      )\n    );\n  };\n\n  const activatePerk = (perkId: string) => {\n    switch (perkId) {\n      case 'change-direction':\n        setDirection();\n        break;\n      case 'freedom-of-choice':\n        updatePlayerPerks('freedomOfChoice', 3);\n        break;\n      case 'double-up':\n        updatePlayerPerks('doubleUp', 1);\n        break;\n      case 'robin-hood':\n        setPlayers(switchPlayerPoints(players));\n        break;\n      case 'landmine':\n        updatePlayerPerks('landmine', 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleContinueClick = () => {\n    activatePerk(perk.id);\n    history.push('/select-category');\n  };\n\n  return (\n    <div id={perk.id} className=\"perk-wrapper text-center\">\n      <div className=\"pb-5 w-100\">\n        <div className=\"perk-icon animate__animated animate__rotateIn\">\n          <FontAwesomeIcon icon={perk.icon as IconProp} />\n        </div>\n        <h1>{perk.name}</h1>\n        <p>\n          {perk.id === 'robin-hood'\n            ? getRobinHoodText(players)\n            : perk.description}\n        </p>\n        <button className=\"btn btn-outline-light\" onClick={handleContinueClick}>\n          Continue\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport const subtractPointFromAllPlayers = (players: Player[]) => {\n  return players.map((player) => ({ ...player, points: player.points - 1 }));\n};\n\nexport const isChangeDirectionEnabled = (players: Player[]) => {\n  return players.length >= 3;\n};\n\nexport const isRobinHoodEnabled = (players: Player[]) => {\n  const maxPoints = Math.max(...players.map((player) => player.points));\n  const minPoints = Math.min(...players.map((player) => player.points));\n  const minAndMaxAreUnique =\n    players.filter((player) => player.points === maxPoints).length === 1 &&\n    players.filter((player) => player.points === minPoints).length === 1;\n  return maxPoints !== minPoints && minAndMaxAreUnique;\n};\n\nexport const getRobinHoodText = (players: Player[]): string => {\n  const maxPoints = Math.max(...players.map((player) => player.points));\n  const minPoints = Math.min(...players.map((player) => player.points));\n  const maxPlayerName = players.filter(\n    (player) => player.points === maxPoints\n  )[0].name;\n  const minPlayerName = players.filter(\n    (player) => player.points === minPoints\n  )[0].name;\n  return `${maxPlayerName} generously donates 1 point to ${minPlayerName}`;\n};\n\nexport const switchPlayerPoints = (players: Player[]) => {\n  const maxPoints = Math.max(...players.map((player) => player.points));\n  const minPoints = Math.min(...players.map((player) => player.points));\n  return players.map((player) => {\n    if (player.points === minPoints) {\n      return { ...player, points: player.points + 1 };\n    }\n    if (player.points === maxPoints) {\n      return { ...player, points: player.points - 1 };\n    }\n    return player;\n  });\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player, Question as _Question } from '../../interfaces/interfaces';\nimport './Question.css';\n\nexport default function Question({\n  currentQuestion,\n  currentPlayer,\n  players,\n  setPlayers,\n  playBtnSound,\n}: {\n  currentQuestion: _Question;\n  currentPlayer: Player;\n  players: Player[];\n  setPlayers: any;\n  playBtnSound: any;\n}) {\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState(30);\n  const [timer, setTimer] = useState<any>();\n  const history = useHistory();\n\n  useEffect(() => {\n    updateTime();\n  }, [timeRemaining, showAnswer]);\n\n  const extractAlternatives = (question: string) => {\n    if (question.includes('#ALT#')) {\n      const questions = question.replace('#ALTEND#', '').split('#ALT#');\n      const alternatives = questions[1].split(';;');\n      const last = alternatives.pop();\n      const alternativesText = `${alternatives.join(', ')} or ${last}?`;\n      return questions[0] + alternativesText;\n    } else {\n      return question;\n    }\n  };\n\n  const updateTime = () => {\n    if (!showAnswer) {\n      setTimer(\n        setTimeout(() => {\n          if (timeRemaining > 0) {\n            setTimeRemaining(timeRemaining - 1);\n          } else {\n            handleTimeout();\n            clearTimeout(timer);\n          }\n        }, 1000)\n      );\n    } else {\n      clearTimeout(timer);\n    }\n  };\n\n  const handleShowAnswerClick = () => {\n    setShowAnswer(true);\n    playBtnSound();\n  };\n\n  const handleTimeout = () => {\n    setTimeout(() => history.push('/scoreboard'), 2000);\n  };\n\n  const rightAnswer = () => {\n    const earnedPoints = currentPlayer.perks.doubleUp > 0 ? 2 : 1;\n    const _players = updateCurrentPlayerPoints(players, earnedPoints);\n    setPlayers(_players);\n    playBtnSound();\n    history.push('/scoreboard');\n  };\n\n  const wrongAnswer = () => {\n    if (currentPlayer.perks.landmine > 0) {\n      const _players = updateCurrentPlayerPoints(players, -1);\n      setPlayers(_players);\n    }\n    playBtnSound();\n    history.push('/scoreboard');\n  };\n\n  const updateCurrentPlayerPoints = (players: Player[], points: number) => {\n    return players.map((player) => {\n      return player.isPlayersTurn\n        ? {\n            ...player,\n            points: Math.max(0, player.points + points),\n          }\n        : player;\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"mb-4\">\n        <div className=\"text-uppercase\">{currentPlayer.name}</div>\n        <h1 className=\"text-capitalize\">{currentQuestion.category}</h1>\n        <p>{extractAlternatives(currentQuestion.question)}</p>\n        {currentQuestion.img && <div className=\"text-center\">\n          <img src={currentQuestion.img} />\n        </div>}\n      </div>\n      {showAnswer ? (\n        <div>\n          <div className=\"font-weight-bold\">Answer:</div>\n          <p>{currentQuestion.answer}</p>\n          <hr />\n          <div className=\"mb-3\">Did you get it?</div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <button\n                className=\"btn btn-success w-100 p-3 font-weight-bold yes-button\"\n                onClick={() => rightAnswer()}\n              >\n                <FontAwesomeIcon icon=\"check\" />\n                &nbsp;&nbsp;Yes\n              </button>\n            </div>\n            <div className=\"col-6\">\n              <button\n                className=\"btn btn-danger w-100 p-3 font-weight-bold no-button\"\n                onClick={() => wrongAnswer()}\n              >\n                <FontAwesomeIcon icon=\"times\" />\n                &nbsp;&nbsp;No\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : timeRemaining > 0 ? (\n        <div className=\"text-center\">\n          <h1 className=\"mb-4\">{timeRemaining}</h1>\n          <button\n            className=\"btn btn-secondary w-100 p-3\"\n            onClick={() => handleShowAnswerClick()}\n          >\n            Show answer\n          </button>\n        </div>\n      ) : (\n        'Whops! You ran out of time!'\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player, RoundAndRoundTheme } from '../../interfaces/interfaces';\nimport './RoundAndRound.css';\n\nexport default function RoundAndRound({\n  themes,\n  players,\n  setPlayers,\n  playGoodPerkSound,\n  playBtnSound,\n}: {\n  themes: RoundAndRoundTheme[];\n  players: Player[];\n  setPlayers: any;\n  playGoodPerkSound: any;\n  playBtnSound: any;\n}) {\n  const [theme, setTheme] = useState({\n    description: '',\n    randomizeLetter: false,\n  });\n  const [showTheme, setShowTheme] = useState(false);\n  const [started, setStarted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [timer, setTimer] = useState<any>(null);\n  const [randomLetter, setRandomLetter] = useState('');\n  const [roundAndRoundPlayers, setRoundAndRoundPlayers] = useState(players);\n  const history = useHistory();\n\n  useEffect(() => {\n    playGoodPerkSound();\n    setTheme(themes[Math.floor(themes.length * Math.random())]);\n    setRandomLetter(getRandomLetter());\n  }, []);\n\n  useEffect(() => {\n    if (started) {\n      updateTime();\n    }\n  }, [timeLeft]);\n\n  const getRandomLetter = () => {\n    const letters = 'abcdefghijklmnoprstuvy'.split('');\n    return letters[Math.floor(Math.random() * letters.length)];\n  };\n\n  const handleClick = () => {\n    playBtnSound();\n    setShowTheme(true);\n  };\n\n  const updateTime = () => {\n    setTimer(\n      setTimeout(() => {\n        if (timeLeft > 1) {\n          setTimeLeft(timeLeft - 1);\n        } else {\n          nextTurn(true);\n        }\n      }, 1000)\n    );\n  };\n\n  const start = () => {\n    playBtnSound();\n    setStarted(true);\n    updateTime();\n  };\n\n  const nextTurn = (removeCurrent: boolean) => {\n    playBtnSound();\n    clearTimeout(timer);\n\n    const _players = roundAndRoundPlayers.filter((player: Player) =>\n      removeCurrent ? !player.isPlayersTurn : true\n    );\n\n    if (_players.length === 1) {\n      setPlayers(\n        players.map((player) =>\n          player.name === _players[0].name\n            ? {\n                ...player,\n                points: player.points + 2,\n                isRoundAndRoundWinner: true,\n              }\n            : player\n        )\n      );\n      setTimeout(() => history.push('/scoreboard'), 3000);\n    }\n\n    const currentTurnIndex = _players.findIndex(\n      (player: Player) => player.isPlayersTurn\n    );\n    const nextTurnIndex =\n      currentTurnIndex === _players.length - 1 ? 0 : currentTurnIndex + 1;\n\n    setRoundAndRoundPlayers(\n      _players.map((player: Player, idx: number) => ({\n        ...player,\n        isPlayersTurn: nextTurnIndex === idx,\n      }))\n    );\n\n    if (_players.length > 1) {\n      setTimeLeft(10);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"round-and-round animate__animated animate__rotateIn\">\n        <h1>It's Round and round time!</h1>\n        <p>\n          Everyone gets 10 seconds to come up with an answer for a random theme,\n          for example \"Name a movie from the 90s\". Press NEXT when a player\n          answers successfully and the turn will go to the next player. If a\n          player can't come up with an answer within 10 seconds the player gets\n          eliminated. The last player that remains gets 3 points!\n        </p>\n        <button className=\"btn btn-outline-light\" onClick={() => handleClick()}>\n          Show theme and begin!\n        </button>\n      </div>\n      {showTheme && (\n        <div className=\"theme-wrapper\">\n          <h3>\n            {theme.description}{' '}\n            {theme.randomizeLetter && (\n              <span className=\"font-weight-bold\">\n                {randomLetter.toLocaleUpperCase()}\n              </span>\n            )}\n          </h3>\n          <hr></hr>\n          {started ? (\n            <div>\n              <h3>{timeLeft}</h3>\n              <button\n                className=\"btn btn-primary btn-next w-100 p-4 mt-4\"\n                onClick={() => nextTurn(false)}\n                disabled={!(timeLeft < 10)}\n              >\n                <h1 className=\"text-uppercase\">\n                  {roundAndRoundPlayers.length > 1\n                    ? roundAndRoundPlayers.filter(\n                        (player: Player) => player.isPlayersTurn\n                      )[0]?.name\n                    : roundAndRoundPlayers[0]?.name + ' wins!'}\n                </h1>\n              </button>\n            </div>\n          ) : (\n            <button className=\"btn btn-outline-light\" onClick={() => start()}>\n              Start!\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Direction, Player } from '../../interfaces/interfaces';\nimport './Scoreboard.css';\n\nexport default function Scoreboard({\n  players,\n  setPlayers,\n  direction,\n  isRoundAndRound,\n  setIsRoundAndRound,\n  playGoodPerkSound,\n}: {\n  players: Player[];\n  direction: Direction;\n  isRoundAndRound: boolean;\n  setPlayers: Function;\n  setIsRoundAndRound: Function;\n  playGoodPerkSound: Function;\n}) {\n  const [winner, setWinner] = useState<Player>();\n  const [showWinner, setShowWinner] = useState(false);\n  useEffect(() => {\n    const winner = players.filter((player) => player.points >= 10)[0];\n    setWinner(winner);\n    if (winner) {\n      setTimeout(() => {\n        setShowWinner(true);\n        playGoodPerkSound();\n      }, 3000);\n    }\n  }, []);\n  const history = useHistory();\n\n  const handleNextRoundClick = () => {\n    if (Math.random() > 0.05 || isRoundAndRound) {\n      let _players = setNextPlayersTurn(players, direction);\n      _players = reduceCurrentPlayersPerksByOne(_players);\n      _players = resetRoundAndRoundWinner(_players);\n      setPlayers(_players);\n      setIsRoundAndRound(false);\n      history.push('/show-turn');\n    } else {\n      setIsRoundAndRound(true);\n      history.push('/round-and-round');\n    }\n  };\n\n  const handlePlayAgainClick = () => {\n    setPlayers([]);\n    history.push('/home');\n  };\n\n  return (\n    <div>\n      <h2>Scoreboard</h2>\n      <table className=\"table text-white\">\n        <tbody>\n          {[...players]\n            .sort((a: Player, b: Player) => b.points - a.points)\n            .map((player: Player, idx: number) => (\n              <tr\n                key={idx}\n                className={\n                  shouldAnimatePlayerRow(player, isRoundAndRound)\n                    ? 'animate__animated animate__flash'\n                    : ''\n                }\n              >\n                <td className=\"text-uppercase\">\n                  {idx + 1}. {player.name}\n                </td>\n                <td className=\"text-right\">{player.points}p</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      {!winner && (\n        <div className=\"text-center pt-5\">\n          <button\n            onClick={() => handleNextRoundClick()}\n            className=\"btn btn-primary px-3 py-3\"\n          >\n            Next round <FontAwesomeIcon className=\"ml-2\" icon=\"arrow-right\" />\n          </button>\n        </div>\n      )}\n      {showWinner && (\n        <div className=\"winner-wrapper animate__animated animate__fadeIn\">\n          <div className=\"pb-5 w-100\">\n            <div className=\"perk-icon animate__animated animate__rotateIn\">\n              <FontAwesomeIcon icon={'trophy'} />\n            </div>\n            <h1 className=\"mb-5\">{winner?.name} wins!</h1>\n            <button\n              className=\"btn btn-outline-light\"\n              onClick={handlePlayAgainClick}\n            >\n              Play again\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport const shouldAnimatePlayerRow = (\n  player: Player,\n  isRoundAndRound: boolean\n) => (isRoundAndRound ? player.isRoundAndRoundWinner : player.isPlayersTurn);\n\nexport const resetRoundAndRoundWinner = (players: Player[]) => {\n  return players.map((player) => ({ ...player, isRoundAndRoundWinner: false }));\n};\n\nexport const setNextPlayersTurn = (players: Player[], direction: Direction) => {\n  let nextIndex = 0;\n  const currentPlayerIndex = players.findIndex(\n    (player) => player.isPlayersTurn\n  );\n  const lastPlayerIndex = players.length - 1;\n  const isFirstPlayer = currentPlayerIndex === 0;\n  const isLastPlayer = currentPlayerIndex === lastPlayerIndex;\n\n  if (direction === 1) {\n    nextIndex = isLastPlayer ? 0 : currentPlayerIndex + direction;\n  } else {\n    nextIndex = isFirstPlayer\n      ? lastPlayerIndex\n      : currentPlayerIndex + direction;\n  }\n\n  return players.map((player, idx) => ({\n    ...player,\n    isPlayersTurn: nextIndex === idx,\n  }));\n};\n\nexport const reduceCurrentPlayersPerksByOne = (players: Player[]) => {\n  return players.map((player: any) =>\n    player.isPlayersTurn\n      ? {\n          ...player,\n          perks: Object.keys(player.perks).reduce(\n            (prev, cur) =>\n              player.perks[cur] > 0\n                ? { ...prev, [cur]: player.perks[cur] - 1 }\n                : prev,\n            { ...player.perks }\n          ),\n        }\n      : player\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Category, Player } from '../../interfaces/interfaces';\nimport './SelectCategory.css';\n\nexport default function SelectCategory({\n  currentPlayer,\n  setCurrentCategory,\n  categories,\n  play,\n}: {\n  currentPlayer: Player;\n  setCurrentCategory: any;\n  setCurrentQuestion: any;\n  categories: Category[];\n  play: any;\n}) {\n  const [activeCategory, setActiveCategory] = useState({\n    id: 0,\n    identifier: '',\n    name: '',\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    randomizeCategory();\n  }, []);\n\n  const randomizeCategory = () => {\n    if (currentPlayer.perks.freedomOfChoice > 0) return;\n    let count = 0;\n    let prevRandomIndex: any;\n    const interval = setInterval(() => {\n      let randomIndex = Math.floor(Math.random() * categories.length);\n      while (randomIndex === prevRandomIndex) {\n        randomIndex = Math.floor(Math.random() * categories.length);\n      }\n      setActiveCategory(categories[randomIndex]);\n      prevRandomIndex = randomIndex;\n      count++;\n      if (count === 15) {\n        clearInterval(interval);\n        setCurrentCategory(categories[randomIndex]);\n        setTimeout(() => history.push('/question'), 2000);\n      }\n      play();\n    }, 200);\n  };\n\n  const handleClick = (category: Category) => {\n    if (currentPlayer.perks.freedomOfChoice > 0) {\n      setCurrentCategory(category);\n      history.push('/question');\n    }\n  };\n\n  return (\n    <div className=\"text-center\">\n      <div className=\"mb-4\">\n        <h1 className=\"mb-0 text-uppercase\">{currentPlayer.name}</h1>\n        <div>\"{currentPlayer.description}\"</div>\n        <div>({currentPlayer.points} points)</div>\n        {currentPlayer.perks.freedomOfChoice > 0 && (\n          <div>\n            Freedom Of Choice left: {currentPlayer.perks.freedomOfChoice}\n          </div>\n        )}\n      </div>\n      <div className=\"row\">\n        {categories.map((item: Category, idx: number) => (\n          <div className=\"col-6 p-1\" key={idx}>\n            <div\n              onClick={() => handleClick(item)}\n              className={\n                'category text-center ' +\n                item.identifier +\n                (item.name === activeCategory?.name ? ' active' : '')\n              }\n            >\n              {item.name}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Player } from '../../interfaces/interfaces';\nimport './ShowTurn.css';\n\nexport default function ShowTurn({ currentPlayer }: { currentPlayer: Player }) {\n  const history = useHistory();\n\n  useEffect(() => {\n    setTimeout(() => {\n      history.push(Math.random() < 0.25 ? '/perks' : '/select-category');\n    }, 3000);\n  }, []);\n\n  return (\n    <div className=\"show-turn-wrapper\">\n      <div className=\"w-100\">\n        <h1 className=\"text-uppercase\">{currentPlayer.name}</h1>\n        <h3>\"{currentPlayer.description}\"</h3>\n        <hr></hr>\n        <h2>You're next!</h2>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport api from '../../api/Api';\nimport { Category, Question } from '../../interfaces/interfaces';\n\nexport const validateForm = ({ categoryId, question, answer }: any) => {\n  if (Number(categoryId) === 0) return false;\n  if (question.length < 10) return false;\n  if (answer.length === 0) return false;\n  return true;\n};\n\nconst defaultFormValues = {\n  id: null,\n  question: '',\n  answer: '',\n  categoryId: 0,\n};\n\n// can't keep selected image in state\nlet addedImage: any;\n\nexport default function AddQuestion({\n  categories,\n  categoryId,\n  setAllQuestions,\n  showModal,\n  setShowModal,\n  question,\n}: any) {\n  const [formData, setFormData] = useState<Question>(defaultFormValues);\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  useEffect(() => {\n    setIsFormValid(validateForm(formData));\n  }, [formData]);\n\n  useEffect(() => {\n    setFormData(question || { ...defaultFormValues, categoryId });\n  }, [showModal, question]);\n\n  const handleFormChange = ({ name, value }: any) => {\n    let _value = name === 'categoryId' ? Number(value) : value;\n    setFormData({ ...formData, [name]: _value });\n  };\n\n  const handleImageChange = (target: any) => {\n    addedImage = target.files[0];\n  };\n\n  const handleClose = () => setShowModal(false);\n\n  const handleAddQuestionClick = () => {\n    api\n      .addQuestion(formData, addedImage)\n      .then(() => {\n        setAllQuestions(formData);\n        setFormData({ ...formData, question: '', answer: '' });\n      })\n      .catch((e) => console.log(e));\n  };\n\n  const handleSaveQuestionClick = () => {\n    api\n      .saveQuestion(formData)\n      .then(() => {\n        setAllQuestions(formData);\n        setFormData({ ...formData, question: '', answer: '' });\n        setShowModal(false);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  return (\n    <div>\n      <Modal className=\"text-dark\" show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{question ? 'Edit ' : 'Add '}question</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            Select a category and fill out the form in order to submit a\n            question. Your question will be reviewed by an administrator before\n            it gets added to the app. Thanks for making the game better! &lt;3\n          </p>\n          <div className=\"form-group\">\n            <label>Category</label>\n            <select\n              className=\"form-control\"\n              name=\"categoryId\"\n              value={formData.categoryId}\n              onChange={(e) => handleFormChange(e.target)}\n            >\n              <option value=\"0\">Choose</option>\n              {categories.map((category: Category, idx: number) => (\n                <option value={category.id} key={idx}>\n                  {category.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Question</label>\n            <textarea\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"question\"\n              value={formData.question}\n              rows={2}\n            ></textarea>\n          </div>\n          <div className=\"form-group\">\n            <label>Image</label>\n            <div>\n              <input\n                type=\"file\"\n                onChange={(e) => handleImageChange(e.target)}\n                name=\"img\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label>Answer</label>\n            <input\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"answer\"\n              value={formData.answer}\n            ></input>\n          </div>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={\n              question ? handleSaveQuestionClick : handleAddQuestionClick\n            }\n            disabled={!isFormValid}\n          >\n            {question ? 'Save ' : 'Add '}question\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport AddQuestion from '../addQuestion/AddQuestion';\nimport api from '../../api/Api';\nimport { Category, Question } from '../../interfaces/interfaces';\n\nconst filterQuestions = (\n  questions: any,\n  filterString: string,\n  categoryId: number\n) => {\n  return questions.filter(\n    (question: any) =>\n      (question?.question?.toLowerCase().includes(filterString) ||\n        question?.answer?.toLowerCase().includes(filterString)) &&\n      (categoryId === 0 || question?.categoryId === categoryId)\n  );\n};\n\nexport default function ViewQuestions({\n  categories,\n}: {\n  categories: Category[];\n}) {\n  const [allQuestions, setAllQuestions] = useState<Question[]>([]);\n  const [questions, setQuestions] = useState([]);\n  const [filterString, setFilterString] = useState('');\n  const [categoryId, setCategoryId] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState<\n    Question | undefined\n  >(undefined);\n\n  useEffect(() => {\n    api.getAllQuestions().then((res) => {\n      setAllQuestions(res.data.questions);\n      setQuestions(res.data.questions);\n    });\n  }, []);\n\n  const handleInputChange = (filterString: string) => {\n    setFilterString(filterString.toLowerCase());\n    setQuestions(\n      filterQuestions(allQuestions, filterString.toLowerCase(), categoryId)\n    );\n  };\n\n  const handleSelectCategoryChange = (categoryId: string) => {\n    setCategoryId(Number(categoryId));\n    setQuestions(\n      filterQuestions(allQuestions, filterString, Number(categoryId))\n    );\n  };\n\n  const handleAddQuestionClick = () => {\n    setSelectedQuestion(undefined);\n    setShowModal(true);\n  };\n\n  const handleEditModalClick = (question: Question) => {\n    setSelectedQuestion(question);\n    setShowModal(true);\n  };\n\n  return (\n    <div>\n      <h1 className=\"mb-4\">Questions</h1>\n      <div className=\"row mb-4\">\n        <div className=\"col-12 col-sm-4\">\n          <div className=\"form-group\">\n            <label>Category</label>\n            <select\n              className=\"form-control\"\n              onChange={(e) => handleSelectCategoryChange(e.target.value)}\n            >\n              <option value=\"0\">All categories</option>\n              {categories.map((category) => (\n                <option value={category.id}>\n                  {category.name} ({category.questions})\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"col-12 col-sm-4\">\n          <div className=\"form-group\">\n            <label>Filter term</label>\n            <input\n              className=\"form-control\"\n              onChange={(e) => handleInputChange(e.target.value)}\n            ></input>\n          </div>\n        </div>\n        <div className=\"col-12 col-sm-4\">\n          <div className=\"form-group\">\n            <label className=\"d-none d-sm-block\">&nbsp;</label>\n            <button\n              className=\"btn btn-outline-light w-100\"\n              onClick={handleAddQuestionClick}\n            >\n              Add Question\n            </button>\n          </div>\n        </div>\n      </div>\n      <p>{questions.length} questions</p>\n      {questions.length > 0 && (\n        <table className=\"table text-white table-dark table-hover\">\n          <thead>\n            <tr>\n              <th>Question</th>\n              <th>Answer</th>\n              <th>Tags</th>\n            </tr>\n          </thead>\n          <tbody>\n            {questions.map((question: Question) => (\n              <tr\n                className=\"clickable\"\n                onClick={() => handleEditModalClick(question)}\n              >\n                <td>{question.question}</td>\n                <td>{question.answer}</td>\n                <td>{question.tags}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      <AddQuestion\n        categoryId={categoryId}\n        categories={categories}\n        question={selectedQuestion}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        setAllQuestions={(question: Question) => {\n          const questions = [...allQuestions, question];\n          setAllQuestions(questions);\n        }}\n      ></AddQuestion>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/robots.8d72ac60.mp3\";","export default __webpack_public_path__ + \"static/media/button.6be18c19.mp3\";","export default __webpack_public_path__ + \"static/media/goodPerk.48ebac9f.mp3\";","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport api from './../../api/Api';\nimport Joi from 'joi';\n\nexport default function Register() {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordRepeat: '',\n  });\n  const [showModal, setShowModal] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const schema = Joi.object({\n    username: Joi.string().max(50).required(),\n    password: Joi.string().min(6).max(50).required(),\n    email: Joi.string().required().email({ tlds: false }),\n    passwordRepeat: Joi.ref('password'),\n  });\n\n  const handleRegisterClick = () => {\n    const { error } = schema.validate(formData);\n\n    if (!error) {\n      api\n        .addUser(formData)\n        .then(() => 'user added!')\n        .catch((e) => console.log(e));\n    } else {\n      setErrorMsg(error.message);\n    }\n  };\n\n  const handleFormChange = ({ name, value }: any) => {\n    const newFormData = { ...formData, [name]: value };\n    setFormData(newFormData);\n  };\n\n  return (\n    <div>\n      <button className=\"btn btn-outline-light w-100\" onClick={openModal}>\n        Register\n      </button>\n      <Modal className=\"text-dark\" show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Register</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p>\n            Fill out the form and click on Register. A confirmation will be sent\n            to your email.\n          </p>\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"username\"\n              value={formData.username}\n            ></input>\n          </div>\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"email\"\n              value={formData.email}\n            ></input>\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"password\"\n              value={formData.password}\n            ></input>\n          </div>\n          <div className=\"form-group\">\n            <label>Repeat password</label>\n            <input\n              type=\"password\"\n              onChange={(e) => handleFormChange(e.target)}\n              className=\"form-control\"\n              name=\"passwordRepeat\"\n              value={formData.passwordRepeat}\n            ></input>\n          </div>\n          {errorMsg.length > 0 && (\n            <div className=\"alert alert-danger alert-icon\">{errorMsg}</div>\n          )}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={handleRegisterClick}\n          >\n            Register\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Register from './Register';\nimport { useHistory } from 'react-router-dom';\nimport api from './../../api/Api';\n\nexport default function Login({ setUser }: any) {\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n  });\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  const handleLoginClick = () => {\n    api\n      .login(formData)\n      .then((res) => {\n        setUser(res.data);\n        localStorage.setItem('accessToken', res.data.accessToken);\n        history.push('/home');\n      })\n      .catch((e) => setError(e.response.data));\n  };\n\n  const handleFormChange = ({ name, value }: any) => {\n    setFormData({ ...formData, [name]: value });\n  };\n\n  return (\n    <div>\n      <div className=\"row justify-content-center animate__animated animate__fadeIn\">\n        <div className=\"col-12 col-sm-6 col-md-4 pt-0 pt-sm-5\">\n          <h1>Login</h1>\n          <p>Login below to start playing Quizmageddon!</p>\n\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input\n              className=\"form-control username\"\n              name=\"username\"\n              onChange={(e) => handleFormChange(e.target)}\n            ></input>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control password\"\n              onChange={(e) => handleFormChange(e.target)}\n            ></input>\n          </div>\n          {error && <div className=\"alert alert-danger animate__animated animate__flash\">{error}</div>}\n          <hr />\n          <button\n            className=\"btn btn-secondary w-100 mb-4\"\n            onClick={handleLoginClick}\n          >\n            Login\n          </button>\n          <Register></Register>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faAngleDoubleUp,\n  faSync,\n  faTrophy,\n  faHandSparkles,\n  faBomb,\n  faPlus,\n  faCheck,\n  faTimes,\n  faArrowRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport { MemoryRouter, Route, Switch } from 'react-router-dom';\nimport useSound from 'use-sound';\nimport './App.css';\nimport AddPlayers from './components/addPlayers/AddPlayers';\nimport Home from './components/home/Home';\nimport Perks from './components/perks/Perks';\nimport Question from './components/question/Question';\nimport RoundAndRound from './components/roundAndRound/RoundAndRound';\nimport Scoreboard from './components/scoreboard/Scoreboard';\nimport SelectCategory from './components/selectCategory/SelectCategory';\nimport ShowTurn from './components/showTurn/ShowTurn';\nimport ViewQuestions from './components/viewQuestions/ViewQuestions';\nimport sound from './sounds/robots.mp3';\nimport soundButton from './sounds/button.mp3';\nimport goodPerk from './sounds/goodPerk.mp3';\nimport Login from './components/login/Login';\n\nlibrary.add(\n  faSync,\n  faAngleDoubleUp,\n  faTrophy,\n  faHandSparkles,\n  faBomb,\n  faPlus,\n  faCheck,\n  faTimes,\n  faArrowRight\n);\n\nfunction App() {\n  const [players, setPlayers] = useState([]);\n  const [settings, setSettings] = useState({\n    pointsToWin: 10,\n    probRoundAndRound: 0.05,\n    probPerk: 0.2,\n    probPlayerPerk: 0.6,\n    imgBaseUrl: 'https://leds3aws.s3.eu-north-1.amazonaws.com/images/',\n  });\n  const [questions, setQuestions] = useState({});\n  const [categories, setCategories] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [themes, setThemes] = useState({});\n  const [direction, setDirection] = useState(1);\n  const [user, setUser] = useState({});\n  const [isRoundAndRound, setIsRoundAndRound] = useState(false);\n  const [play] = useSound(sound, { volume: 0.25 });\n  const [playBtnSound] = useSound(soundButton, { volume: 0.25 });\n  const [playGoodPerkSound] = useSound(goodPerk, { volume: 0.25 });\n\n  const _setCurrentQuestion = (category) => {\n    const questionsByCategory = questions.filter(\n      (question) => question.categoryId === category.id\n    );\n    const numOfQuestionsInCategory = questionsByCategory.length;\n    const randomIndex = Math.floor(Math.random() * numOfQuestionsInCategory);\n    const randomQuestion = questionsByCategory[randomIndex];\n    setQuestions(\n      questions.filter((question) => question.id !== randomQuestion.id)\n    );\n    setCurrentQuestion({ ...randomQuestion, category: category.identifier });\n  };\n\n  return (\n    <div className=\"App\" onClick={(e) => console.log(e.target)}>\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login setUser={setUser}></Login>\n          </Route>\n          <Route path=\"/home\">\n            <Home\n              categories={categories}\n              user={user}\n              settings={settings}\n              setCategories={setCategories}\n              setQuestions={setQuestions}\n              setThemes={setThemes}\n            ></Home>\n          </Route>\n          <Route path=\"/add-players\">\n            <AddPlayers\n              players={players}\n              playBtnSound={playBtnSound}\n              setPlayers={setPlayers}\n            ></AddPlayers>\n          </Route>\n          <Route path=\"/show-turn\">\n            <ShowTurn\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n            ></ShowTurn>\n          </Route>\n          <Route path=\"/perks\">\n            <Perks\n              players={players}\n              playGoodPerkSound={playGoodPerkSound}\n              setPlayers={setPlayers}\n              setDirection={() => setDirection(direction * -1)}\n            ></Perks>\n          </Route>\n          <Route path=\"/round-and-round\">\n            <RoundAndRound\n              players={players}\n              themes={themes}\n              playGoodPerkSound={playGoodPerkSound}\n              playBtnSound={playBtnSound}\n              setPlayers={setPlayers}\n            ></RoundAndRound>\n          </Route>\n          <Route path=\"/select-category\">\n            <SelectCategory\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n              categories={categories.filter((category) => !category.disabled)}\n              play={play}\n              setCurrentCategory={_setCurrentQuestion}\n            ></SelectCategory>\n          </Route>\n          <Route path=\"/question\">\n            <Question\n              currentPlayer={\n                players.filter((player) => player.isPlayersTurn)[0]\n              }\n              currentQuestion={currentQuestion}\n              players={players}\n              settings={settings}\n              playBtnSound={playBtnSound}\n              setPlayers={setPlayers}\n            ></Question>\n          </Route>\n          <Route path=\"/scoreboard\">\n            <Scoreboard\n              direction={direction}\n              players={players}\n              setPlayers={setPlayers}\n              isRoundAndRound={isRoundAndRound}\n              setIsRoundAndRound={setIsRoundAndRound}\n              playGoodPerkSound={playGoodPerkSound}\n            ></Scoreboard>\n          </Route>\n          <Route path=\"/admin/questions\">\n            <ViewQuestions categories={categories}></ViewQuestions>\n          </Route>\n        </Switch>\n      </MemoryRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'animate.css/animate.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}